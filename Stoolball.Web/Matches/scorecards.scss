@import "../css/_theme.scss";
@import "../Content/bootstrap/_mixins.scss";
@import "../Content/bootstrap/_functions.scss";
@import "../Content/bootstrap/_variables.scss";
@import "../css/_mixins.scss";

$space-character-width: .25em;

/* View scorecards */
.batting-scorecard, .bowling-scorecard {
    margin-bottom: $spacer*2;
}

// Remove the default bottom-border since the final row is a totals row with a background colour
.batting-scorecard {
    border-bottom: none;
}

// The heading labels are all short, so customise the default width used by .table-as-cards and don't let them wrap
.batting-scorecard .table-as-cards__label,
.bowling-scorecard .table-as-cards__label {
    width: 6rem;
}

.batting-scorecard thead th,
.bowling-scorecard thead th {
  white-space: nowrap;
}

// Treat a row heading like the column headings hidden by .table-as-cards.
// Apply a standard width to the visually-dominant first column in .table-as-cards, ensuring a series of batting and bowling scorecards all line-up
.batting-scorecard th:first-child, .bowling-scorecard th:first-child {
    background: $table-dark-bg;
    color: $table-dark-color;
    width: 8rem;
}

.batting-scorecard th:first-child a:link, .batting-scorecard th:first-child a:visited,
.bowling-scorecard th:first-child a:link, .bowling-scorecard th:first-child a:visited {
    color: $table-dark-color;
    border-bottom-color: $table-dark-color;
}

// Because .table-as-cards is applied, each td is the last on its row. Its padding-right is therefore added to the padding-right of .container-xl,
// making wrapping more likely. Remove the extra one, but put it back in .scorecard__totals where there's a background colour that makes the lack of padding too obvious,
// and .scorecard__extras, which needs to align with .scorecard__totals in the minimal scorecard.
.batting-scorecard td {
    padding-right: 0;
}

// A border between the top and bottom sections is useful, because otherwise stacked headers can look like headers for the extras and totals.
.batting-scorecard tbody + tbody {
    border-color: $table-dark-bg;
}

// width: 100% helps to align the numbers in a minimal scorecard with those in a full scorecard, when both appear
.scorecard__extras td, .scorecard__totals td {
    padding-right: $table-cell-padding;
    width: 100%;
}

// eg for "caught (Jane Smith)", put the name on a separate line. Creates better wrapping behaviour, where the column does not get too wide and push left into the
// space taken by the ::before pseudo-element, breaking the alignment of the values in the column.
.batting-scorecard .dismissed-by {
    display: block;
}

// Show the runs scored in bold, to make them more prominent than the balls bowled
.batting-scorecard .runs {
    font-weight: bold;
}

// display: block removes the effect of colspan, which otherwise makes these rows wider than the previous rows that are using display: flex as part of .table-as-cards.
// Also make these header cells look a little different to differentiate them from the batter names above.
.scorecard__extras th {
    text-align: right;
    font-weight: normal;
    display: block;
}

.scorecard__totals th {
    text-align: right;
    display: block;
}

// Add a background to the totals rows so that they stand out.
.scorecard__totals {
  background: #ccc;
}

// Remove the flex-grow from .table-as-cards. It preserves the right-align of .numeric, but we do that with .scorecard__numeric-value
// which doesn't send the data so far off to the right away from its label.
.bowling-scorecard .numeric .table-as-cards__label {
    flex-grow: initial;
}

.scorecard__numeric-value {
    display: inline-block;
    width: 1.7em;
    text-align: right;
}


@include media-breakpoint-up(sm) {
    // Set widths so that columns line up when there are multiple scorecards on a page. Do it above sm breakpoint so they don't interfere with .table-as-cards.
    .player-name, tbody th.player-name:first-child {
        width: 20%;
    }

    .scorecard__extras td, .scorecard__totals td {
        width: auto;
    }
    // Table flow will normally wrap the player names first, but it actually looks better if other things are allowed to wrap first
    .player-name {
        white-space: nowrap;
    }
    // Reset the reversed colour on the first column
    .table-as-cards-reset-sm tbody th:first-child {
        background: none;
        color: inherit;
        font-weight: normal;
    }

    .table-as-cards-reset-sm tbody th:first-child a:link, .table-as-cards-reset-sm tbody th:first-child a:visited {
        color: $link-color;
        border-bottom-color: $link-color;
    }
    // Reset to default - now the .table-as-cards flex layout is gone, wrapping works better
    .batting-scorecard .dismissed-by {
        display: inline;
    }
    // Undo the padding change above now that .table-as-cards does not apply and cells are not always the last in a row.
    .batting-scorecard td {
        padding-right: $table-cell-padding;
    }
    // Reset font-weight on runs scored. Balls-faced are now de-emphasised compared to runs by shrinking the font-size and adding brackets.
    .batting-scorecard .runs,
    .batting-scorecard .balls {
        width: 3rem;
        font-weight: normal;
    }

    .batting-scorecard .balls-faced-header {
        width: 1rem;
    }

    .batting-scorecard .balls-faced:before {
        content: "(";
    }

    .batting-scorecard .balls-faced {
        font-size: 0.8rem;
    }

    .batting-scorecard .balls-faced:after {
        content: ")";
    }

    // The border between top and bottom tbody sections stops being useful now as the layout has changed
    .batting-scorecard tbody + tbody {
        border: unset;
    }

    // Reset display to re-enable the effect of the colspan attribute
    .batting-scorecard .scorecard__extras th, .batting-scorecard .scorecard__totals th {
        display: table-cell;
        width: 100%;
    }
}


/* Edit scorecards 

   These also use .table-as-cards, but not the standard reset classes because they have several reset breakpoints
   optimised to bring one column up at a time, as soon as possible.
*/

// When stacked into one column, colour the first row to divide each card from the next.
@mixin table-as-cards-stack-separator {
    background: $table-dark-bg;
    color: $table-dark-color;
}

// Columns have padding removed to make space to bring columns up out of the stack sooner.
@mixin table-as-cards-minimise-padding {
    padding: $table-cell-padding 0;
}

// When thead is revealed, the first header needs its padding back to separate it from the edge of its background colour.
@mixin table-as-cards-reset-padding-first-header {
    padding-left: $table-cell-padding;
}

// Eventually there's enough room to restore all the normal table padding.
@mixin table-as-cards-reset-padding-all {
    padding: $table-cell-padding
}

// When a column is brought up out of the stack, it needs some padding back to separate it from the remaining stack.
@mixin table-as-cards-unstacked {
    padding-right: $table-cell-padding;
}

// .table-as-cards has substitute labels when stacked
// If a custom reset is used, those that are unstacked but still visible should get this.
@mixin table-as-cards-label-unstacked {
    display: block;
    width: auto;
}

// jQuery autocomplete suggestions for players should not be limited to the width of their input. Instead, show the whole content.
.player-suggestions {
    width: auto !important;
}

// Remove the default bottom-border since the final row is a totals row with a background colour
.batting-scorecard-editor {
    border-bottom: none;
}

// Set a width that allows the labels to not wrap
.batting-scorecard-editor__label {
    width: 9rem;
}

// There's a space before this to allow wrapping. It doesn't wrap yet, so offset the space.
.batting-scorecard-editor__dismissed-by-label > .text-nowrap {
    margin-left: -$space-character-width;
}

// Remove a Bootstrap default because although we have two tbody elements for accessibility, we don't want it to look separate.
.batting-scorecard-editor tbody + tbody {
    border-top: none;
}

// These rows need to have one column when the batter rows have every column stacked.
.batting-scorecard-editor__final-rows {
    display: flex;
}

// These cells are empty and hidden from the accessibility tree while flexbox is in use
.batting-scorecard-editor__final-rows > :nth-child(1),
.batting-scorecard-editor__final-rows > :nth-child(2),
.batting-scorecard-editor__final-rows > :nth-child(3),
.batting-scorecard-editor__final-rows > :last-child {
    display: none;
}

// Set a width for the cell containing the numeric fields. 
// Allow the header to take up the remaining space, so that the header text aligns to the fields.
.batting-scorecard-editor__final-rows th {
    flex-grow: 1;
}

.batting-scorecard-editor__final-rows [headers] {
    width: 7em;
}

// Colour the first field in the stack to visually separate each stacked player innings from the next.
@media (max-width: 504px) {
    .batting-scorecard-editor__batter {
        @include table-as-cards-stack-separator;
    }
}

@media (min-width:505px) {
    // Now some labels can wrap, because we can bring the column up sooner that way
    .batting-scorecard-editor__label {
        width: 5rem;
    }

    // Remove side padding from every cell, because they abut the gutter of .container-xl and don't need to duplicate it
    .batting-scorecard-editor__header,
    .batting-scorecard-editor__player-innings-field {
        @include table-as-cards-minimise-padding;
    }

    // The first column can now move out of the stack. 
    // Restore its padding to separate it from the stack, and stack the label instead.
    .batting-scorecard-editor__batter[data-stackable] {
        @include table-as-cards-reset-stackable;
        @include table-as-cards-unstacked;
    }
    .batting-scorecard-editor__batter-label {
        @include table-as-cards-label-unstacked;
    }

    // This wraps now, so remove the offset space.
    .batting-scorecard-editor__dismissed-by-label > .text-nowrap {
        margin-left: 0;
    }

    // Now we have two columns we can go back to showing these as two columns
    .batting-scorecard-editor__final-rows {
        display: table-row;
    }

    // Adjust the padding so that these rows line up with the player innings rows above
    .batting-scorecard-editor__final-rows th {
        padding-right: $table-cell-padding*2;
    }

    .batting-scorecard-editor__final-rows [headers] {
        padding-left: 0;
    }

    // Move the 'Add batter' button into the space below the name of the batter above, to not interrupt the standard scorecard layout
    .batting-scorecard-editor__add-batter-wrapper {
        height: 0;
        overflow: visible;
        padding: 0;
        border: none;
    }

    .batting-scorecard-editor__add-batter {
        position: absolute;
        margin-left: 0;
        margin-top: $spacer*-3;
    }
}

@media screen and (min-width: 675px) {
    // The second column can now move out of the stack.
    // Restore its padding to separate it from the stack, and stack the label instead.
    .batting-scorecard-editor__dismissal[data-stackable] {
        @include table-as-cards-reset-stackable;
        @include table-as-cards-unstacked;
    }
    .batting-scorecard-editor__dismissal-label {
        @include table-as-cards-label-unstacked;
    }

    // Move the 'Add batter' button into the Byes row to not interrupt the standard scorecard layout
    .batting-scorecard-editor__add-batter {
        margin-top: $spacer/2;
    }

    // Reveal one of the extra columns so that the final rows still span the table
    .batting-scorecard-editor__final-rows > :nth-child(1) {
        display: table-cell;
    }
}

@media screen and (min-width: 830px) {
    // The third column can now move out of the stack.
    // Restore its padding to separate it from the stack, and stack the label instead.
    .batting-scorecard-editor__dismissed-by[data-stackable] {
        @include table-as-cards-reset-stackable;
        @include table-as-cards-unstacked;
    }
    .batting-scorecard-editor__dismissed-by-label {
        @include table-as-cards-label-unstacked;
    }

    // There's a space before this to allow wrapping. Now that it doesn't wrap, offset the space.
    .batting-scorecard-editor__dismissed-by-label > .text-nowrap {
        margin-left: -$space-character-width;
    }
    .batting-scorecard-editor__bowler-label,
    .batting-scorecard-editor__runs-label,
    .batting-scorecard-editor__balls-label {
        width: 3em;
    }

    // Reveal one of the extra columns so that the final rows still span the table
    .batting-scorecard-editor__final-rows > :nth-child(2) {
        display: table-cell;
    }
}

@media screen and (min-width: 925px) {
    // The fourth column can now move out of the stack.
    // Restore its padding to separate it from the stack
    .batting-scorecard-editor__bowler[data-stackable] {
        @include table-as-cards-reset-stackable;
        @include table-as-cards-unstacked;
    }

    // The table header can now be revealed.
    .batting-scorecard-editor thead {
        position: static; // undo .sr-only
    }

    .batting-scorecard-editor__header:first-child {
        @include table-as-cards-reset-padding-first-header;
    }

    // Keep the last header column hidden.
    // Hide the labels which were acting as replacements for the table header, except for those still stacked due to the last column being hidden.
    .batting-scorecard-editor__header:last-child,
    .batting-scorecard-editor__label {
        display: none;
    }

    .batting-scorecard-editor__runs-label,
    .batting-scorecard-editor__balls-label {
        @include table-as-cards-label-unstacked;
    }

    // Remove the border of the top player innings because it shows unevenly for the table-cells and stacked cells in Firefox
    .batting-scorecard-editor__player-innings:first-child > * {
        border-top: none;
    }

    // Reveal one of the extra columns so that the final rows still span the table
    .batting-scorecard-editor__final-rows > :nth-child(3) {
        display: table-cell;
    }
}


@media screen and (min-width: 995px) {
    // Reset the remaining properties of the header so that it is displayed normally
    .batting-scorecard-editor thead th:last-child {
        display: table-cell;
    }

    // Ensure all the labels that took the place of the header row are now hidden
    .batting-scorecard-editor__label {
        display: none;
    }

    // The fifth column can now move out of the stack.
    // Restore its padding to separate it from the final column.
    .batting-scorecard-editor__runs[data-stackable] {
        @include table-as-cards-reset-stackable;
        @include table-as-cards-unstacked;
    }

    // Only one column left in the stack, so restore the stack to an ordinary column.
    .batting-scorecard-editor__balls[data-stackable] {
        @include table-as-cards-reset-stackable;
    }

    // Reset to default - now the .table-as-cards flex layout is gone, wrapping works better
    .batting-scorecard-editor .dismissed-by {
        display: inline;
    }

    // Reset font-weight on runs scored. Balls-faced are now de-emphasised compared to runs by shrinking the font-size and adding brackets.
    .batting-scorecard-editor .runs,
    .batting-scorecard-editor .balls {
        width: 3rem;
        font-weight: normal;
    }

    // Reset display to re-enable the effect of the colspan attribute
    .batting-scorecard-editor__final-rows th,
    .batting-scorecard-editor__final-rows td:last-child {
        display: table-cell;
    }
}

@media screen and (min-width: 1060px) {
    // There's now enough room to restore the padding
    .batting-scorecard-editor__header, .batting-scorecard-editor__player-innings-field,
    .batting-scorecard-editor__final-rows th, .batting-scorecard-editor__final-rows [headers] {
        @include table-as-cards-reset-padding-all;
    }

    // Adjust the 'Add batter' button to match
    .batting-scorecard-editor__add-batter {
        margin-left: $table-cell-padding;
    }

    // And let all the player-name boxes take advantage of the width
    .batting-scorecard-editor .scorecard__player-name {
        width: 100%;
    }
}

// We have the "Balls bowled (excluding extras)" header twice. Wrap "(excluding extras)" below "Balls bowled" and tighten up the space,
// and align all headers to the top so that the more important text is lined up.
.bowling-scorecard-editor th {
    vertical-align: top;
}
.bowling-scorecard-editor small {
    display: block;
    margin-top: -3px;
}

@mixin bowling-scorecard-editor-align-to-wrapped-header {
    min-height: 2.8em;
}

// It helps to add some extra space between 'Add over' and whatever follows, which might be a tip or the submit button.
.bowling-scorecard-editor__add-over {
    margin: 0 $table-cell-padding $spacer*2;
}

@media (max-width: 424px) {
    // Colour the first field in the stack to visually separate each stacked player innings from the next.
    .bowling-scorecard-editor__bowler {
        @include table-as-cards-stack-separator;
    }
    // Restrict the width of the labels so that the smaller fields expand and line up with the larger bowler's name field.
    // Only until the first breakpoint though, because thereafter the bowler's name field is out of the stack and this causes
    // the layout not to adjust as efficently.
    .bowling-scorecard-editor .table-as-cards__label {
        width: 7em;
    }
}

@media (min-width:425px) {
    // Remove side padding from every cell, because they abut the gutter of .container-xl and don't need to duplicate it when space is tight.
    .bowling-scorecard-editor__header, .bowling-scorecard-editor__field {
        @include table-as-cards-minimise-padding;
    }

    // The first column can now move out of the stack.
    // Restore its padding to separate it from the stack, and stack the label instead.
    .bowling-scorecard-editor__bowler[data-stackable] {
        @include table-as-cards-reset-stackable;
        @include table-as-cards-unstacked;
    }

    .bowling-scorecard-editor__bowler-label {
        @include table-as-cards-label-unstacked;
    }

    // The 'Add over' button can move up underneath it.
    .bowling-scorecard-editor__add-over {
        position: absolute;
        margin-left: 0;
        margin-top: $spacer*-4;
    }
}

@media screen and (min-width: 520px) {
    // The second column can now move out of the stack.
    // Restore its padding to separate it from the stack, and stack the label instead.
    // Set the label height so that they all align, making room for the wrapped "Balls bowled (excluding extras)".
    .bowling-scorecard-editor__balls[data-stackable] {
        @include table-as-cards-reset-stackable;
        @include table-as-cards-unstacked;
    }

    .bowling-scorecard-editor__bowler-label, .bowling-scorecard-editor__balls-label {
        @include table-as-cards-label-unstacked;
        @include bowling-scorecard-editor-align-to-wrapped-header;
    }

    // Allow the bowler's name field to use all available space, but within limits.
    .bowling-scorecard-editor .scorecard__player-name {
        width: 100%;
        min-width: 10rem;
        max-width: 15rem;
    }
}

@media screen and (min-width: 630px) {
    // The third column can now move out of the stack.
    // Restore its padding to separate it from the stack, and stack the label instead.
    // Set the label height so that they all align, making room for the wrapped "Balls bowled (excluding extras)".
    .bowling-scorecard-editor__wides[data-stackable] {
        @include table-as-cards-reset-stackable;
        @include table-as-cards-unstacked;
    }

    .bowling-scorecard-editor__wides-label {
        @include table-as-cards-label-unstacked;
        @include bowling-scorecard-editor-align-to-wrapped-header;
    }

    // There's no room for the 'Add over' button now, so move it back below the editor.
    .bowling-scorecard-editor__add-over {
        position: static;
        margin-top: 0;
    }
}

@media screen and (min-width: 655px) {

    // The fourth column can now move out of the stack.
    // Restore its padding to separate it from the final column.
    .bowling-scorecard-editor__no-balls[data-stackable] {
        @include table-as-cards-reset-stackable;
        @include table-as-cards-unstacked;
    }

    // Only one column left in the stack, so restore the stack to an ordinary column.
    .bowling-scorecard-editor__runs[data-stackable] {
        @include table-as-cards-reset-stackable;
    }

    // Restore the header too. Its padding has been removed to match that in cells, 
    // but add it in the first column to separate from the edge of the background colour.
    .bowling-scorecard-editor thead {
        @include table-as-cards-reset-thead;
    }

    .bowling-scorecard-editor__header:first-child {
        @include table-as-cards-reset-padding-first-header;
    }

    // Since the header is back, all substitute labels can be hidden
    .bowling-scorecard-editor .table-as-cards__label {
        @include table-as-cards-reset-label;
    }
}

@media screen and (min-width: 715px) {
    // There's now enough room to restore the padding
    .bowling-scorecard-editor__header, .bowling-scorecard-editor__field {
        @include table-as-cards-reset-padding-all;
    }

    // Adjust the 'Add over' button to match
    .bowling-scorecard-editor__add-over {
        margin-left: $table-cell-padding;
    }
}