//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v8.5.4
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder.Embedded;

namespace Umbraco.Web.PublishedModels
{
	/// <summary>Register Member</summary>
	[PublishedModel("registerMember")]
	public partial class RegisterMember : PublishedContentModel, IMetadata
	{
		// helpers
#pragma warning disable 0109 // new is redundant
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		public new const string ModelTypeAlias = "registerMember";
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		public new static IPublishedContentType GetModelContentType()
			=> PublishedModelUtility.GetModelContentType(ModelItemType, ModelTypeAlias);
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		public static IPublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<RegisterMember, TValue>> selector)
			=> PublishedModelUtility.GetModelPropertyType(GetModelContentType(), selector);
#pragma warning restore 0109

		// ctor
		public RegisterMember(IPublishedContent content)
			: base(content)
		{ }

		// properties

		///<summary>
		/// Already logged in: Displays instead of the form when a member is already logged in. You can use {{NAME}} to insert the member's name.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		[ImplementPropertyType("alreadyLoggedIn")]
		public global::System.Web.IHtmlString AlreadyLoggedIn => this.Value<global::System.Web.IHtmlString>("alreadyLoggedIn");

		///<summary>
		/// Email body: The body of the email. You can use {{NAME}}, {{EMAIL}} and {{DOMAIN}} to insert values.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		[ImplementPropertyType("alreadyRegisteredBody")]
		public global::System.Web.IHtmlString AlreadyRegisteredBody => this.Value<global::System.Web.IHtmlString>("alreadyRegisteredBody");

		///<summary>
		/// Email subject: The subject line of the email. You can use {{NAME}} to insert the member's name.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		[ImplementPropertyType("alreadyRegisteredSubject")]
		public string AlreadyRegisteredSubject => this.Value<string>("alreadyRegisteredSubject");

		///<summary>
		/// Email body: The body of the email. You can use {{NAME}}, {{EMAIL}}, {{TOKEN}} and {{DOMAIN}} to insert values.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		[ImplementPropertyType("approveMemberBody")]
		public global::System.Web.IHtmlString ApproveMemberBody => this.Value<global::System.Web.IHtmlString>("approveMemberBody");

		///<summary>
		/// Email subject: The subject line of the email. You can use {{NAME}} to insert the member's name.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		[ImplementPropertyType("approveMemberSubject")]
		public string ApproveMemberSubject => this.Value<string>("approveMemberSubject");

		///<summary>
		/// Register button: Label for the form submit button
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		[ImplementPropertyType("registerButton")]
		public string RegisterButton => this.Value<string>("registerButton");

		///<summary>
		/// Registration successful: Displays when a member registers successfully and must now activate their account, or is already registered. You can use {{EMAIL}} to tell them where we sent the email to.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		[ImplementPropertyType("registrationSuccessful")]
		public global::System.Web.IHtmlString RegistrationSuccessful => this.Value<global::System.Web.IHtmlString>("registrationSuccessful");

		///<summary>
		/// URL segment: Sets the URL for this page. Defaults to the page title.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.5.4")]
		[ImplementPropertyType("umbracoUrlName")]
		public string UmbracoUrlName => global::Umbraco.Web.PublishedModels.Metadata.GetUmbracoUrlName(this);
	}
}
