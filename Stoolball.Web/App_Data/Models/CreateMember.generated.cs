//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v8.6.1
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder.Embedded;

namespace Umbraco.Web.PublishedModels
{
	/// <summary>Create Member</summary>
	[PublishedModel("createMember")]
	public partial class CreateMember : PublishedContentModel, IMetadata
	{
		// helpers
#pragma warning disable 0109 // new is redundant
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		public new const string ModelTypeAlias = "createMember";
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		public new static IPublishedContentType GetModelContentType()
			=> PublishedModelUtility.GetModelContentType(ModelItemType, ModelTypeAlias);
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		public static IPublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CreateMember, TValue>> selector)
			=> PublishedModelUtility.GetModelPropertyType(GetModelContentType(), selector);
#pragma warning restore 0109

		// ctor
		public CreateMember(IPublishedContent content)
			: base(content)
		{ }

		// properties

		///<summary>
		/// Email body: The body of the email. You can use {{NAME}}, {{EMAIL}}, {{TOKEN}} and {{DOMAIN}} to insert values.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		[ImplementPropertyType("approveMemberBody")]
		public global::System.Web.IHtmlString ApproveMemberBody => this.Value<global::System.Web.IHtmlString>("approveMemberBody");

		///<summary>
		/// Email subject: The subject line of the email. You can use {{NAME}} to insert the member's name.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		[ImplementPropertyType("approveMemberSubject")]
		public string ApproveMemberSubject => this.Value<string>("approveMemberSubject");

		///<summary>
		/// 'Create member' button: Label for the form submit button.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		[ImplementPropertyType("createMemberButton")]
		public string CreateMemberButton => this.Value<string>("createMemberButton");

		///<summary>
		/// Logged in: Displays instead of the form when a member is logged in. You can use {{NAME}} to insert the member's name.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		[ImplementPropertyType("loggedIn")]
		public global::System.Web.IHtmlString LoggedIn => this.Value<global::System.Web.IHtmlString>("loggedIn");

		///<summary>
		/// Member created successfully: Displays when a member is created successfully and must now be approved, or when a member already existed. You can use {{EMAIL}} to tell them where we sent the email to.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		[ImplementPropertyType("memberCreatedSuccessfully")]
		public global::System.Web.IHtmlString MemberCreatedSuccessfully => this.Value<global::System.Web.IHtmlString>("memberCreatedSuccessfully");

		///<summary>
		/// Email body: The body of the email. You can use {{NAME}}, {{EMAIL}} and {{DOMAIN}} to insert values.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		[ImplementPropertyType("memberExistsBody")]
		public global::System.Web.IHtmlString MemberExistsBody => this.Value<global::System.Web.IHtmlString>("memberExistsBody");

		///<summary>
		/// Email subject: The subject line of the email. You can use {{NAME}} to insert the member's name.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		[ImplementPropertyType("memberExistsSubject")]
		public string MemberExistsSubject => this.Value<string>("memberExistsSubject");

		///<summary>
		/// Password help: Advice on minimum password complexity requirements.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		[ImplementPropertyType("passwordHelp")]
		public string PasswordHelp => this.Value<string>("passwordHelp");

		///<summary>
		/// URL segment: Sets the URL for this page. Defaults to the page title.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.6.1")]
		[ImplementPropertyType("umbracoUrlName")]
		public string UmbracoUrlName => global::Umbraco.Web.PublishedModels.Metadata.GetUmbracoUrlName(this);
	}
}
