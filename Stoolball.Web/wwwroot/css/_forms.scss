@import "_theme.scss";
@import "../../../node_modules/bootstrap/scss/_functions.scss";
@import "../../../node_modules/bootstrap/scss/_mixins.scss";
@import "../../../node_modules/bootstrap/scss/_variables.scss";
@import "../../../node_modules/bootstrap/scss/_forms.scss";
@import "../../../node_modules/bootstrap/scss/_buttons.scss";
@import "../../../node_modules/bootstrap/scss/_custom-forms.scss";
@import "./_mixins.scss";

/* Bootstrap and .NET JQuery validation are applying different rules in some cases, 
   so re-use the Bootstrap styles but on different selectors, and in a way that invalid wins 
   if both are matched.
*/
.input-validation-error, [aria-invalid='true'], .was-validated .input-validation-error:valid {
    @extend .is-invalid;
}

[aria-invalid='false'] {
    @extend .is-valid;
}

.field-validation-error, .validation-summary-errors {
    color: $red;
}

/* When validation summary is set to display field errors and there are none, by default it shows the bullet for one list item */
.validation-summary-valid { display: none; }

/* When a custom error message is set by Html.ValidationMessageFor() in the view, prevent it showing when the field is still valid */
.field-validation-valid {
    display: none;
}

/* Bootstrap expects .form-text after the element but it's better before, where the user will see it in time */
.form-text, .has-form-text > small {
    margin-top: $spacer*-.5;
    margin-bottom: $spacer/4;
    color: #767676;
}

/* Forms should have space before any following element */
form { margin-bottom: $spacer; }

/* Legends should look like labels */
legend { 
    font-size: $font-size-base;
}

/* Use a different fallback font due to a Firefox bug. See documentation in _theme.scss with the definition of $options-font-family. */
option {
    font-family: $options-font-family;
}

// Style progress bars in theme colours, and make the report at the end big
progress {
    width: 100%;
    height: 2rem;
    background: #eee;
    margin-bottom: $spacer;
}
progress::-webkit-progress-bar {
    background: #eee;
}

progress::-webkit-progress-value {
    background: theme-color("primary");
}

progress::-moz-progress-bar {
    background: theme-color("primary");
}

/* A simple search form with an input field and button. Apply as <form class="form-inline form-search">. */
.form-search {
    flex-wrap: nowrap;
}

.form-search input[type=search] {
    flex-grow: 1;
    margin: 0 $spacer/4 0 0;
    min-height: $minimum-clickable-size;
}

.form-search button[type=submit] {
    flex-shrink: 0;
    background-image: url(/images/icons/search-white-24dp.svg);
    background-repeat: no-repeat;
    background-position: 12px 13px;
    background-size: 20px;
    padding: 0 0 0 $minimum-clickable-size;
    width: 0;
    overflow: hidden;
    max-width: $minimum-clickable-size;
    min-height: $minimum-clickable-size;
    border: 0;

    @include media-breakpoint-up(md) {
        width: auto;
        max-width: none;
        overflow: visible;
        padding: 0 $spacer*.75 0 38px;
    }
}

/* Set default width of a specific field types to be wide enough for typical entries and a jQuery validation badge */
input[type='number'] {
    width: 6em;
}

input[type='date'] {
    width: 12em; // Chrome needs this space for jQuery validation and its calendar icon
}

input[type='time'] {
    width: 8em;
}

input.postcode {
    width: 8em;
}

/* Make Bootstrap custom checkboxes bigger */
.custom-control-label {
    padding-left: .5rem;
    min-height: 2rem;
}

.custom-control-label::before, .custom-control-label::after {
    top: 0;
    width: 1.5rem;
    height: 1.5rem;
}

@media print {
    .custom-control-input {
        opacity: 1 !important;
    }
    .custom-control-label::before, .custom-control-label::after {
        display: none;
    }
}

/* And for a single checkbox the help text makes more sense below the label */
.custom-checkbox > .form-text {
    margin-left: $spacer/2;
}

/* Make click events on inline SVG images bubble up to parent elements */
svg {
    pointer-events: none;
}

.btn-primary::after, .btn-secondary::after {
    content: '❯';
    padding-left: .5em;
}

.btn-back::before {
    content: '❮';
    padding-right: .5em;
}
.btn-back::after {
    display: none;
}

.btn-add {
    background-image: url(/images/icons/add-white-24dp.svg);
    background-repeat: no-repeat;
    background-size: 20px;
    background-position: 10px center;
    padding-left: 35px;
}

.btn-add::after {
    display: none; // undo adding ❯
}

/* Two types of delete button: .btn-delete is an icon with text, .btn-delete-icon is just an icon */
.btn-delete { 
    background-image: url(/images/icons/iconmonstr-trash-can-27-white.svg);
    background-repeat: no-repeat;
    background-size: 18px;
    background-position: 10px center;
    padding-left: 35px;
}

// Show some lower-priority content which is initially hidden within a page.
.btn-show {
    margin-bottom: $spacer;
}

@media print {
    .btn {
        color: $black!important;
        background: none;
    }

    .btn-delete {
        padding-left: ($spacer/4)*3;
    }
}

.btn-delete-icon, .btn-drag {
    padding: 2px;
}

.btn-drag {
    margin: 0 3px; // to separate from adjacent elements when :focus is applied
}

.btn-delete-icon:focus, .btn-drag:focus {
    @include button-focus;
}

.btn-delete-icon > img, .btn-drag > img {
    max-width: none; // don't allow this image to shrink when space is tight
}

[aria-grabbed='true'] {
    outline: 2px dashed $black;
}

/* Add social media icons to fields for social media accounts */
.form-control__facebook {
    padding-left: 35px;
    background: url(/images/icons/iconmonstr-facebook-6-black.svg) no-repeat left center;
}

.form-control__twitter {
    padding-left: 35px;
    background: url(/images/icons/iconmonstr-twitter-1-black.svg) no-repeat left center;
}

.form-control__instagram {
    padding-left: 35px;
    background: url(/images/icons/iconmonstr-instagram-11-black.svg) no-repeat left center;
}

.form-control__youtube {
    padding-left: 35px;
    background: url(/images/icons/iconmonstr-youtube-6-black.svg) no-repeat left center;
}

@media print {
    .form-control__facebook,
    .form-control__twitter,
    .form-control__instagram,
    .form-control__youtube {
        padding-left: 0;
    }
}

/* Label an option as admin only */
.admin-only { 
    display: inline-block;
    margin-left: $spacer/2; 
    padding-left: 22px;
    background: url(/images/icons/iconmonstr-lock-1.svg) no-repeat left center;
    background-size: 16px;
}

@media print {
    .admin-only {
        padding-left: 0;
    }
}

/* Umbraco Forms margin support uses Bootstrap, but does not expect the container margins already to be in place, so offset them */
.umbraco-forms-page {
    margin: $spacer (-$grid-gutter-width/2)
}

/* A page title in Umbraco Forms */
.umbraco-forms-caption {
    padding: 0 $grid-gutter-width/2;
}

/* Each group of fields in Umbraco Forms contains a .row with negative margins, so give them something to offset */
.umbraco-forms-fieldset {
    padding: 0 $grid-gutter-width/2;
}

/* Umbraco Forms has a field that would normally be a hidden field. Assuming there is a reason for that, hide it with a class rather than the default inline style. */
.umbraco-forms-formid {
    display: none;
}

/* Umbraco Forms has to use an input rather than a button, so try to fake the style */
.umbraco-forms-form input.prev {
    color: $white;
    padding-left: 28px;
    background: 12px center / 8px 12px url(/images/icons/umbraco-forms-previous.png) no-repeat theme-color("secondary");
}

/* List of files in an Umbraco Forms upload field. Select files then navigate to the next form page and back again to see it. */
.umbraco-forms-files {
    padding-top: $spacer;
}