@inherits UmbracoViewPage<Stoolball.Web.Competitions.Models.DeleteCompetitionViewModel>
@using Humanizer
@using Constants = Stoolball.Constants
@using Stoolball.Web.Competitions
@using Stoolball.Security
@await Html.PartialAsync("_JQueryValidate")
@section head {
    <meta name="robots" content="noindex,follow" />
}
<div class="container-xl">
    <h1>Delete @Model.Competition!.CompetitionName</h1>

    @if (Model.Authorization.CurrentMemberIsAuthorized[AuthorizedAction.DeleteCompetition])
    {
        if (!Model.Deleted)
        {
            <p>If you delete @Model.Competition.CompetitionName you will:</p>
            <ul>
                @if (Model.TotalMatches > 0)
                {
                    <li>remove @("match".ToQuantity(Model.TotalMatches)) from the @Model.Competition.CompetitionName competition</li>
                    <li>change statistics for the competition, teams and all their players who played in this competition</li>
                }
                else
                {
                    <li>not affect any matches</li>
                    <li>not affect any statistics</li>
                }
                @if (Model.TotalTeams > 0)
                {
                    <li>change the history of @("team".ToQuantity(Model.TotalTeams))</li>
                }
                else
                {
                    <li>not affect any teams</li>
                }
            </ul>
            <p><strong><strong>You cannot undo this.</strong></strong></p>

            using (Html.BeginUmbracoForm<DeleteCompetitionSurfaceController>(nameof(DeleteCompetitionSurfaceController.DeleteCompetition)))
            {
                @Html.HiddenFor(m => Model.ConfirmDeleteRequest.RequiredText)
                <div class="form-group">
                    @Html.LabelFor(m => Model.ConfirmDeleteRequest.ConfirmationText, $"If you're sure you wish to continue, type '{Model.Competition.CompetitionName}' into this box:")
                    @Html.TextBoxFor(m => Model.ConfirmDeleteRequest.ConfirmationText, new { @class = "form-control", required = "required", aria_describedby = "validation", autocorrect = "off", autocapitalize = "off", autocomplete = "off", spellcheck = "false" })
                    @Html.ValidationMessageFor(m => Model.ConfirmDeleteRequest.ConfirmationText, null, new { id = "validation" })
                </div>

                <button class="btn btn-danger btn-delete" type="submit">Delete @Model.Competition.CompetitionName</button>
            }
        }
        else
        {
            <p>@Model.Competition.CompetitionName has been deleted.</p>
            <p><a class="btn btn-primary btn-back" href="@Constants.Pages.CompetitionsUrl">Back to @Constants.Pages.Competitions</a></p>
        }
    }
    else
    {
        @await Html.PartialAsync("_Login")
    }
</div>