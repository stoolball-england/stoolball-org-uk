@inherits UmbracoViewPage<ResetPassword>
@inject Stoolball.Email.IEmailProtector emailProtector
@using Stoolball.Web.Account
@await Html.PartialAsync("_JQueryValidate")
<div class="container-xl">
    <h1>@Model.Name</h1>

    @if (User.Identity?.IsAuthenticated ?? false)
    {
        @await Html.PartialAsync("_Logout")
    }
    else
    {
        if (!Model.ShowPasswordResetRequested)
        {
            @* Step 1: Display a form to request a password reset *@
            using (Html.BeginUmbracoForm<ResetPasswordRequestSurfaceController>("RequestPasswordReset"))
            {
                var resetPasswordRequest = new ResetPasswordRequestFormData();

                <div class="form-group">
                    @Html.LabelFor(m => resetPasswordRequest.Email, "Email")
                    @Html.TextBoxFor(m => resetPasswordRequest.Email, new { @class = "form-control", type = "email", required = "required", aria_describedby = "form-email", autocorrect = "off", autocapitalize = "off" })
                    @Html.ValidationMessageFor(m => resetPasswordRequest.Email, null, new { id = "form-email" })
                </div>
                <button class="btn btn-primary" type="submit">@Model.ResetPasswordButton</button>
            }
        }
        else
        {
            @* Step 2: Confirm submit of the form to request a password reset *@
            @Html.ProtectEmailAddresses(emailProtector, Model.PasswordResetRequested?.ToString(), Model.Email?.ToString())
        }
    }
</div>