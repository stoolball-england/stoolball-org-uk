@inherits Umbraco.Web.Mvc.UmbracoViewPage<SeasonViewModel>
@using ClientDependency.Core.Mvc
@using Humanizer
@using Stoolball.Matches
@using Stoolball.Web.Competitions
@section head {
    <meta name="robots" content="noindex,follow" />
}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("~/scripts/jquery.validate.min.js");
    Html.RequiresJs("~/scripts/jquery.validate.unobtrusive.min.js");
}

<h1>Edit points for @Model.Season.SeasonFullName()</h1>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" href="@Model.Season.SeasonRoute">Summary</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@Model.Season.SeasonRoute/matches">Matches</a>
    </li>
    @if (Model.Season.MatchTypes.Contains(MatchType.LeagueMatch) || !string.IsNullOrEmpty(Model.Season.Results))
    {
        <li class="nav-item">
            <a class="nav-link" href="@Model.Season.SeasonRoute/results">Results</a>
        </li>
    }
    <li class="nav-item">
        <em class="nav-link active">Edit</em>
    </li>
</ul>

@if (Model.IsAuthorized)
{
    using (Html.BeginUmbracoForm<EditSeasonPointsSurfaceController>
        ("UpdateSeason"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset class="form-group">
            <legend>Points rules for league matches</legend>
            <table class="table">
                <thead>
                    <tr><th scope="col">Result</th><th scope="col">Points for home team</th><th scope="col">Points for away team</th></tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Season.PointsRules.Count; i++)
                    {
                    <tr>
                        <th scope="row">
                            @Model.Season.PointsRules[i].MatchResultType.ToString().Humanize()
                            @Html.HiddenFor(m => Model.Season.PointsRules[i].PointsRuleId)
                            @Html.HiddenFor(m => Model.Season.PointsRules[i].MatchResultType)
                        </th>
                        <td>
                            @Html.TextBoxFor(m => Model.Season.PointsRules[i].HomePoints, new { @type = "number", maxlength = "2" })
                            @Html.ValidationMessageFor(m => Model.Season.PointsRules[i].HomePoints, null)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => Model.Season.PointsRules[i].AwayPoints, new { @type = "number", maxlength = "2" })
                            @Html.ValidationMessageFor(m => Model.Season.PointsRules[i].AwayPoints, null)
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </fieldset>

        <button class="btn btn-primary">Save season</button>
    }
}
else
{
    @Html.Partial("_Login")
}