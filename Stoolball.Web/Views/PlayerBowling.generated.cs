#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 2 "..\..\Views\PlayerBowling.cshtml"
    using ClientDependency.Core.Mvc;
    
    #line default
    #line hidden
    using Examine;
    
    #line 4 "..\..\Views\PlayerBowling.cshtml"
    using Stoolball.Statistics;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\PlayerBowling.cshtml"
    using Stoolball.Web.Statistics;
    
    #line default
    #line hidden
    using Umbraco.Core;
    using Umbraco.Core.Models;
    using Umbraco.Core.Models.PublishedContent;
    using Umbraco.Web;
    using Umbraco.Web.Mvc;
    using Umbraco.Web.PublishedModels;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/PlayerBowling.cshtml")]
    public partial class _Views_PlayerBowling_cshtml : Umbraco.Web.Mvc.UmbracoViewPage<PlayerBowlingViewModel>
    {
        public _Views_PlayerBowling_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 5 "..\..\Views\PlayerBowling.cshtml"
  
    Html.RequiresCss("/statistics/statistics.min.css");

    var bowlingFigures = new StatisticsViewModel<BowlingFigures>(Model, Services.UserService) { ShowCaption = true, ShowPlayerColumn = false, StatisticsFilter = Model.StatisticsFilter };
    bowlingFigures.Results.AddRange(Model.BowlingFigures);
            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"container-xl\"");

WriteLiteral(">\r\n");

WriteLiteral("    ");

            
            #line 11 "..\..\Views\PlayerBowling.cshtml"
Write(Html.Partial("_PlayerHeader"));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n    <ul");

WriteLiteral(" class=\"nav nav-tabs\"");

WriteLiteral(">\r\n        <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n            <a");

WriteLiteral(" class=\"nav-link\"");

WriteAttribute("href", Tuple.Create(" href=\"", 634), Tuple.Create("\"", 666)
            
            #line 15 "..\..\Views\PlayerBowling.cshtml"
, Tuple.Create(Tuple.Create("", 641), Tuple.Create<System.Object, System.Int32>(Model.Player.PlayerRoute
            
            #line default
            #line hidden
, 641), false)
);

WriteLiteral(">Batting</a>\r\n        </li>\r\n        <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n            <em");

WriteLiteral(" class=\"nav-link active\"");

WriteLiteral(">Bowling</em>\r\n        </li>\r\n        <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n            <a");

WriteLiteral(" class=\"nav-link\"");

WriteAttribute("href", Tuple.Create(" href=\"", 858), Tuple.Create("\"", 899)
            
            #line 21 "..\..\Views\PlayerBowling.cshtml"
, Tuple.Create(Tuple.Create("", 865), Tuple.Create<System.Object, System.Int32>(Model.Player.PlayerRoute
            
            #line default
            #line hidden
, 865), false)
, Tuple.Create(Tuple.Create("", 890), Tuple.Create("/fielding", 890), true)
);

WriteLiteral(">Fielding</a>\r\n        </li>\r\n    </ul>\r\n\r\n    <table");

WriteLiteral(" class=\"table-as-cards table-as-cards-reset-md\"");

WriteLiteral(">\r\n        <thead>\r\n            <tr>\r\n                <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(">Innings</th>\r\n                <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(">Overs</th>\r\n                <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(">Maidens</th>\r\n                <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(">Runs</th>\r\n                <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(">Wickets</th>\r\n                <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(">5 wickets</th>\r\n                <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(">Best</th>\r\n                <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(">Economy</th>\r\n                <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(">Average</th>\r\n                <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(" class=\"text-wrap\"");

WriteLiteral(">Strike rate</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        " +
"    <tr>\r\n                <td");

WriteLiteral(" data-stackable=\"true\"");

WriteLiteral("><span");

WriteLiteral(" class=\"table-as-cards__label\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Innings</span>");

            
            #line 42 "..\..\Views\PlayerBowling.cshtml"
                                                                                                          Write(Model.BowlingStatistics.TotalInnings);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" data-stackable=\"true\"");

WriteLiteral("><span");

WriteLiteral(" class=\"table-as-cards__label\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Overs</span>");

            
            #line 43 "..\..\Views\PlayerBowling.cshtml"
                                                                                                        Write(Math.Round(Model.BowlingStatistics.TotalOvers, 1));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" data-stackable=\"true\"");

WriteLiteral("><span");

WriteLiteral(" class=\"table-as-cards__label\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Maidens</span>");

            
            #line 44 "..\..\Views\PlayerBowling.cshtml"
                                                                                                          Write(Model.BowlingStatistics.TotalMaidens);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" data-stackable=\"true\"");

WriteLiteral("><span");

WriteLiteral(" class=\"table-as-cards__label\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Runs</span>");

            
            #line 45 "..\..\Views\PlayerBowling.cshtml"
                                                                                                       Write(Model.BowlingStatistics.TotalRunsConceded);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" data-stackable=\"true\"");

WriteLiteral("><span");

WriteLiteral(" class=\"table-as-cards__label\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Wickets</span>");

            
            #line 46 "..\..\Views\PlayerBowling.cshtml"
                                                                                                          Write(Model.BowlingStatistics.TotalWickets);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" data-stackable=\"true\"");

WriteLiteral("><span");

WriteLiteral(" class=\"table-as-cards__label\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">5 wickets</span>");

            
            #line 47 "..\..\Views\PlayerBowling.cshtml"
                                                                                                            Write(Model.BowlingStatistics.FiveWicketInnings);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" data-stackable=\"true\"");

WriteLiteral("><span");

WriteLiteral(" class=\"table-as-cards__label\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Best</span>");

            
            #line 48 "..\..\Views\PlayerBowling.cshtml"
                                                                                                        Write(Model.BowlingStatistics.BestInningsWickets.HasValue ? Model.BowlingStatistics.BestInningsWickets + "/" + (Model.BowlingStatistics.BestInningsRunsConceded.HasValue ? Model.BowlingStatistics.BestInningsRunsConceded.Value.ToString() : "–") : "–");

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" data-stackable=\"true\"");

WriteLiteral("><span");

WriteLiteral(" class=\"table-as-cards__label\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Economy</span>");

            
            #line 49 "..\..\Views\PlayerBowling.cshtml"
                                                                                                           Write(Model.BowlingStatistics.Economy.HasValue ? Math.Round(Model.BowlingStatistics.Economy.Value, 2).ToString() : "–");

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" data-stackable=\"true\"");

WriteLiteral("><span");

WriteLiteral(" class=\"table-as-cards__label\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Average</span>");

            
            #line 50 "..\..\Views\PlayerBowling.cshtml"
                                                                                                           Write(Model.BowlingStatistics.Average.HasValue ? Math.Round(Model.BowlingStatistics.Average.Value, 2).ToString() : "–");

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" data-stackable=\"true\"");

WriteLiteral("><span");

WriteLiteral(" class=\"table-as-cards__label\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Strike rate</span>");

            
            #line 51 "..\..\Views\PlayerBowling.cshtml"
                                                                                                               Write(Model.BowlingStatistics.StrikeRate.HasValue ? Math.Round(Model.BowlingStatistics.StrikeRate.Value, 2).ToString() : "–");

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n");

            
            #line 56 "..\..\Views\PlayerBowling.cshtml"
    
            
            #line default
            #line hidden
            
            #line 56 "..\..\Views\PlayerBowling.cshtml"
     if ((Model.BowlingStatistics.TotalInnings != Model.BowlingStatistics.TotalInningsWithRunsConceded && Model.BowlingStatistics.Average.HasValue) ||
       (Model.BowlingStatistics.TotalInnings != Model.BowlingStatistics.TotalInningsWithRunsConceded && Model.BowlingStatistics.Economy.HasValue) ||
       (Model.BowlingStatistics.TotalInnings != Model.BowlingStatistics.TotalInningsWithBallsBowled && Model.BowlingStatistics.StrikeRate.HasValue))
    {

            
            #line default
            #line hidden
WriteLiteral("        <p");

WriteLiteral(" class=\"table-small-print\"");

WriteLiteral(">\r\n            <small>\r\n");

            
            #line 62 "..\..\Views\PlayerBowling.cshtml"
                
            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\PlayerBowling.cshtml"
                 if (Model.BowlingStatistics.TotalInnings != Model.BowlingStatistics.TotalInningsWithRunsConceded)
                {
                    if (Model.BowlingStatistics.Economy.HasValue && Model.BowlingStatistics.Average.HasValue &&
                        Model.BowlingStatistics.TotalInningsWithRunsConceded == Model.BowlingStatistics.TotalInningsWithBallsBowled && Model.BowlingStatistics.StrikeRate.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("Economy, average and strike rate are based on ");

            
            #line 67 "..\..\Views\PlayerBowling.cshtml"
                                                                    Write(Model.BowlingStatistics.TotalInningsWithRunsConceded);

            
            #line default
            #line hidden
WriteLiteral(" innings with overs, runs and wickets recorded.\r\n");

            
            #line 68 "..\..\Views\PlayerBowling.cshtml"
                    }
                    else if (Model.BowlingStatistics.Economy.HasValue && Model.BowlingStatistics.Average.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("Economy and average are based on ");

            
            #line 71 "..\..\Views\PlayerBowling.cshtml"
                                                       Write(Model.BowlingStatistics.TotalInningsWithRunsConceded);

            
            #line default
            #line hidden
WriteLiteral(" innings with overs, runs and wickets recorded.\r\n");

            
            #line 72 "..\..\Views\PlayerBowling.cshtml"
                    }
                    else if (Model.BowlingStatistics.Economy.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("Economy is based on ");

            
            #line 75 "..\..\Views\PlayerBowling.cshtml"
                                          Write(Model.BowlingStatistics.TotalInningsWithRunsConceded);

            
            #line default
            #line hidden
WriteLiteral(" innings with overs and runs recorded.\r\n");

            
            #line 76 "..\..\Views\PlayerBowling.cshtml"
                    }
                    else if (Model.BowlingStatistics.Average.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("The average is based on ");

            
            #line 79 "..\..\Views\PlayerBowling.cshtml"
                                              Write(Model.BowlingStatistics.TotalInningsWithRunsConceded);

            
            #line default
            #line hidden
WriteLiteral(" innings with runs and wickets recorded.\r\n");

            
            #line 80 "..\..\Views\PlayerBowling.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 82 "..\..\Views\PlayerBowling.cshtml"
                 if (Model.BowlingStatistics.TotalInnings != Model.BowlingStatistics.TotalInningsWithBallsBowled && Model.BowlingStatistics.StrikeRate.HasValue &&
                    (!Model.BowlingStatistics.Economy.HasValue || !Model.BowlingStatistics.Average.HasValue || Model.BowlingStatistics.TotalInningsWithRunsConceded != Model.BowlingStatistics.TotalInningsWithBallsBowled))
                {

            
            #line default
            #line hidden
WriteLiteral("                    ");

WriteLiteral("The strike rate is based on ");

            
            #line 85 "..\..\Views\PlayerBowling.cshtml"
                                              Write(Model.BowlingStatistics.TotalInningsWithBallsBowled);

            
            #line default
            #line hidden
WriteLiteral(" innings with overs and wickets recorded.\r\n");

            
            #line 86 "..\..\Views\PlayerBowling.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </small>\r\n        </p>\r\n");

            
            #line 89 "..\..\Views\PlayerBowling.cshtml"

    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 92 "..\..\Views\PlayerBowling.cshtml"
Write(Html.Partial("_BowlingFigures", bowlingFigures));

            
            #line default
            #line hidden
WriteLiteral("\r\n</div>");

        }
    }
}
#pragma warning restore 1591
