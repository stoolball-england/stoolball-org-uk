@inherits Umbraco.Web.Mvc.UmbracoViewPage<Stoolball.Web.Competitions.SeasonViewModel>
@using Stoolball.Web.Matches
@using Stoolball.Matches
@{ 
    var matchMenu = new AddMatchMenuViewModel { BaseRoute = Model.Season.SeasonRoute, EnableTournaments = Model.Season.EnableTournaments };
    matchMenu.MatchTypes.AddRange(Model.Season.MatchTypes);
}
@section head {
    <meta name="robots" content="noindex,follow" />
}
<div class="container-xl">
    <h1>@Model.Season.SeasonFullNameAndPlayerType()</h1>

    <ul class="nav nav-tabs nav-tabs-has-add">
        <li class="nav-item">
            <a class="nav-link" href="@Model.Season.SeasonRoute">Summary</a>
        </li>
        <li class="nav-item">
            <em class="nav-link active">Matches</em>
        </li>
        @if (Model.Season.MatchTypes.Contains(MatchType.LeagueMatch) ||
            Model.Season.MatchTypes.Contains(MatchType.KnockoutMatch) ||
            Model.Season.MatchTypes.Contains(MatchType.FriendlyMatch) ||
            !string.IsNullOrEmpty(Model.Season.Results))
        {
            <li class="nav-item">
                <a class="nav-link" href="@Model.Season.SeasonRoute/table">Table</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link" href="@Model.Season.SeasonRoute/statistics">Statistics</a>
        </li>
        @Html.Partial("_AddMatchMenu", matchMenu)
    </ul>


    @if (Model.Matches.Matches.Count > 0)
    {
        @Html.Partial("_MatchList", Model.Matches)
    }
    else
    {
        <p>There are no matches for this season.</p>
    }
    <p><a type="application/rss+xml" href="@Model.Season.Competition.CompetitionRoute/matches.rss">New and updated matches – subscribe with RSS</a></p>
</div>