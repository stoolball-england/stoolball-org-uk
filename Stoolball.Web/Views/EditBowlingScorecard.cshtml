@inherits Umbraco.Web.Mvc.UmbracoViewPage<EditBowlingScorecardViewModel>
@using ClientDependency.Core.Mvc
@using Stoolball.Matches
@using Stoolball.Web.Matches
@using Stoolball.Web.Security
@using Humanizer
@section head {
    <meta name="robots" content="noindex,follow" />
}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("~/scripts/jquery.validate.min.js");
    Html.RequiresJs("~/scripts/jquery.validate.unobtrusive.min.js");

    Html.RequiresJs("~/js/libs/jquery.autocomplete.min.js", 50);
    Html.RequiresCss("~/css/autocomplete.min.css");

    Html.RequiresCss("~/css/related-items.min.css");
    Html.RequiresJs("~/js/related-item.js");

    Html.RequiresCss("~/css/steps.min.css");
}

<h1>Edit @Model.Match.MatchFullName(x => Model.DateFormatter.FormatDate(x.LocalDateTime, false, false, false))</h1>

@if (Model.IsAuthorized[AuthorizedAction.EditMatchResult])
{
    using (Html.BeginUmbracoForm<EditBowlingScorecardSurfaceController>
        ("UpdateMatch"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <ol class="steps">
            <li class="steps__completed"><em class="sr-only">Start of play</em></li>
            @{
                var currentInnings = Request.RawUrl.Contains("/1/") ? 1 : 2;
                for (var i = 0; i < Model.Match.MatchInnings.Count; i++)
                {
                    if (currentInnings < (i + 1))
                    {
                    <li><span class="sr-only">@((i + 1).Ordinalize()) innings batting</span></li>
                    <li><span class="sr-only">@((i + 1).Ordinalize()) innings bowling</span></li>
                    }
                    else if (currentInnings == (i + 1))
                    {
                    <li class="steps__completed"><span class="sr-only">@((i + 1).Ordinalize()) innings batting</span></li>
                    <li aria-current="step"><span class="sr-only">@((i + 1).Ordinalize()) innings bowling</span></li>
                    }
                    else if (currentInnings > (i + 1))
                    {
                    <li class="steps__completed"><span class="sr-only">@((i + 1).Ordinalize()) innings batting</span></li>
                    <li class="steps__completed"><span class="sr-only">@((i + 1).Ordinalize()) innings bowling</span></li>
                    }
                }
            }
            <li><span class="sr-only">Result</span></li>
        </ol>

        <button class="btn btn-primary sr-only">Save and continue &gt;</button>

        @* Just to avoid an error for now... *@
        @Html.HiddenFor(m => Model.Match.MatchId);

        <button class="btn btn-primary">Save and continue &gt;</button>
    }
}
else
{
    @Html.Partial("_Login")
}