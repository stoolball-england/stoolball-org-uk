@inherits Umbraco.Web.Mvc.UmbracoViewPage<ClubViewModel>
@using ClientDependency.Core.Mvc
@using Stoolball.Web.Clubs
@section head {
    <meta name="robots" content="noindex,follow" />
}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("~/scripts/jquery.validate.min.js");
    Html.RequiresJs("~/scripts/jquery.validate.unobtrusive.min.js");

    Html.RequiresJs("~/js/libs/jquery.autocomplete.min.js", 50);
    Html.RequiresCss("~/css/autocomplete.min.css");

    Html.RequiresCss("~/css/related-items.min.css");
    Html.RequiresJs("~/js/related-items.js");
}

<h1>Edit @Model.Club.ClubName</h1>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" href="@Model.Club.ClubRoute">Summary</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@Model.Club.ClubRoute/matches">Matches</a>
    </li>
    <li class="nav-item">
        <em class="nav-link active">Edit</em>
    </li>
</ul>

@if (Model.IsAuthorized)
{
    using (Html.BeginUmbracoForm<EditClubSurfaceController>
        ("UpdateClub"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <button class="btn btn-primary sr-only">Save club</button>

        <div class="form-group">
            @Html.LabelFor(m => Model.Club.ClubName, labelText: "Club name")
            @Html.TextBoxFor(m => Model.Club.ClubName, new { @class = "form-control", required = "required", aria_describedby = "club-name" })
            @Html.ValidationMessageFor(m => Model.Club.ClubName, null, new { id = "club-name" })
        </div>
        <div class="form-group custom-control custom-checkbox">
            @Html.CheckBoxFor(m => Model.Club.ClubMark, new { @class = "custom-control-input" })
            @Html.LabelFor(m => Model.Club.ClubMark, "ClubMark accredited", new { @class = "custom-control-label" })
        </div>
        <table class="table table-hover related-items">
            <thead class="thead-dark">
                <tr><th scope="col" colspan="2">Teams</th></tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.Club.Teams.Count; i++)
                {
                    var displayName = Model.Club.Teams[i].UntilDate.HasValue ? Model.Club.Teams[i].TeamName + " (no longer active)" : Model.Club.Teams[i].TeamName;
                    <tr>
                        <td><div class="related-item__animate">@displayName</div></td>
                        <td class="related-item__delete">
                            <div class="related-item__animate">
                                @Html.Hidden($"Club.Teams[{i}].TeamId", Model.Club.Teams[i].TeamId, new { @class = "related-item__data related-item__id", data_item = Model.Club.Teams[i].TeamId })
                                @Html.Hidden($"Club.Teams[{i}].TeamName", displayName, new { @class = "related-item__data", data_item = Model.Club.Teams[i].TeamId })
                                @Html.Partial("_DeleteIcon", (Model.Club.Teams[i].TeamId.ToString(), $"Remove {Model.Club.Teams[i].TeamName} from this club"))
                            </div>
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="2">
                        @Html.Label("team-autocomplete", "Add a team", new { @class = "sr-only" })
                        @Html.TextBox("team-autocomplete", string.Empty, new { 
                            @class = "form-control related-item__search", 
                            placeholder = "Add a team", 
                            autocomplete = "off", 
                            type = "search", 
                            data_url = "/api/teams/autocomplete", 
                            data_template = "team-template",
                            aria_label="Type a team name add and press down arrow to select the team"
                        })
                    </td>
                </tr>
            </tbody>
        </table>
        <script type="text/x-template" id="team-template">
            <tr>
                <td><div class="related-item__animate">{{value}}</div></td>
                <td class="related-item__delete">
                    <div class="related-item__animate">
                        <input name="Club.Teams[0].TeamId" class="related-item__data related-item__id" type="hidden" value="{{data}}" data-item="{{data}}" />
                        <input name="Club.Teams[0].TeamName" class="related-item__data" type="hidden" value="{{value}}" data-item="{{data}}" />
                        @Html.Partial("_DeleteIcon", ("{{data}}", "Remove {{value}} from this club"))
                    </div>
                </td>
            </tr>
        </script>

        <div class="form-group">
            <svg aria-hidden="true" focusable="false" data-prefix="fab" data-icon="facebook-square" class="svg-inline--fa fa-facebook-square fa-w-14" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="30" height="30"><path fill="currentColor" d="M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h137.25V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.27c-30.81 0-40.42 19.12-40.42 38.73V256h68.78l-11 71.69h-57.78V480H400a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48z"></path></svg>
            @Html.LabelFor(m => Model.Club.Facebook, labelText: "Facebook page or group")
            @Html.TextBoxFor(m => Model.Club.Facebook, new { @class = "form-control", aria_describedby = "facebook" })
            @Html.ValidationMessageFor(m => Model.Club.Facebook, null, new { id = "facebook" })
        </div>
        <div class="form-group">
            <svg aria-hidden="true" focusable="false" data-prefix="fab" data-icon="twitter" class="svg-inline--fa fa-twitter fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="30" height="30"><path fill="currentColor" d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg>
            @Html.LabelFor(m => Model.Club.Twitter, labelText: "Twitter account")
            @Html.TextBoxFor(m => Model.Club.Twitter, new { @class = "form-control", aria_describedby = "twitter" })
            @Html.ValidationMessageFor(m => Model.Club.Twitter, null, new { id = "twitter" })
        </div>
        <div class="form-group">
            <svg aria-hidden="true" focusable="false" data-prefix="fab" data-icon="instagram" class="svg-inline--fa fa-instagram fa-w-14" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="30" height="30"><path fill="currentColor" d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg>
            @Html.LabelFor(m => Model.Club.Instagram, labelText: "Instagram account")
            @Html.TextBoxFor(m => Model.Club.Instagram, new { @class = "form-control", aria_describedby = "instagram" })
            @Html.ValidationMessageFor(m => Model.Club.Instagram, null, new { id = "instagram" })
        </div>
        <div class="form-group">
            <svg aria-hidden="true" focusable="false" data-prefix="fab" data-icon="youtube" class="svg-inline--fa fa-youtube fa-w-18" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" width="30" height="30"><path fill="currentColor" d="M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z"></path></svg>
            @Html.LabelFor(m => Model.Club.YouTube, labelText: "YouTube channel")
            @Html.TextBoxFor(m => Model.Club.YouTube, new { @class = "form-control", aria_describedby = "youtube" })
            @Html.ValidationMessageFor(m => Model.Club.YouTube, null, new { id = "youtube" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => Model.Club.Website, labelText: "Club website")
            @Html.TextBoxFor(m => Model.Club.Website, new { @class = "form-control", aria_describedby = "website" })
            @Html.ValidationMessageFor(m => Model.Club.Website, null, new { id = "website" })
        </div>

        <button class="btn btn-primary">Save club</button>
    }
}
else
{
    @Html.Partial("_Login")
}
