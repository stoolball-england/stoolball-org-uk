@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<HeaderViewModel>
@using System.Text.RegularExpressions
@using Stoolball.Account
@using System.Net
@using Stoolball.Web.Pages
@{ 
    var headerPhoto = Model.HeaderPhotoWithInheritance();
    var rootUrlsForPlaySection = new List<string>(6) { "PLAY", "TEAMS", "COMPETITIONS", "MATCHES", "TOURNAMENTS", "LOCATIONS" };
    string? currentSection = null, currentPage = null;
}
@functions {
    private bool IsCurrentPage(string requestedPath, string sectionPath)
    {
        return Regex.IsMatch(requestedPath, $"^{sectionPath.Replace("/", @"\/")}?$");
    }

    private bool IsCurrentSection(string requestedPath, string sectionPath, List<string> rootUrlsForPlaySection)
    {
        if (requestedPath.Length <= 1) { return false; }
        var requestedSection = requestedPath.Split(new[] { '/' }, StringSplitOptions.RemoveEmptyEntries)[0].ToUpperInvariant();
        sectionPath = sectionPath.ToUpperInvariant();
        if (sectionPath == "/PLAY/")
        {
            return rootUrlsForPlaySection.Contains(requestedSection);
        }
        else
        {
            return requestedSection == sectionPath.Replace("/", string.Empty);
        }
    }
} 
<header class="header">
    <nav class="header__bar" aria-label="Stoolball England">
        <div class="container-xl">
            <div class="header__inner">
                <div class="header__logo">
                    @if (Context.Request.Path.Value == "/")
                    {
                        <div class="header__logo-inner"><img src="~/images/logos/stoolball-england.svg" alt="Stoolball England" /></div>
                    }
                    else
                    {
                        <a href="/" class="header__logo-inner print__no-url"><img src="~/images/logos/stoolball-england.svg" alt="Stoolball England" /></a>
                    }
                </div>
                <div class="header__menu-large">
                    <ul role="menubar" aria-label="Stoolball England">
                        @{
                            var childrenOfHome = Umbraco.Content(Guid.Parse("7ea74fe5-4982-4bcf-bb8a-8e213c32f91c"))
                            .Children()
                            .Where(x => x.IsVisible());
                            foreach (var child in childrenOfHome)
                            {
                                var childUrl = child.Url();
                                <li role="none">
                                    @if (currentPage == null && currentSection == null && IsCurrentPage(Context.Request.Path.Value!, childUrl))
                                    {
                                        currentPage = childUrl;
                                        <em role="menuitem" aria-current="location">@child.Name</em>
                                    }
                                    else if (currentPage == null && currentSection == null && IsCurrentSection(Context.Request.Path.Value!, childUrl, rootUrlsForPlaySection))
                                    {
                                        currentSection = childUrl;
                                        <a role="menuitem" aria-current="location" href="@childUrl">@child.Name</a>
                                    }
                                    else
                                    {
                                        <a role="menuitem" href="@childUrl">@child.Name</a>
                                    }
                                </li>
                            }
                        }
                    </ul>
                </div>
                <div class="header__account d-print-none">
                    <div class="dropdown">
                        <button class="btn header__account__button" type="button" id="header__account__button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" title="Account">
                            @if (User.Identity?.IsAuthenticated ?? false)
                            {
                                var gravatar = new Gravatar(User.Identity.Name);
                                <img src="@gravatar.Url" alt="Account" width="30" height="30" class="header__account__account-image" />
                            }
                            else
                            {
                                <img src="~/images/icons/person-white-24dp.svg" alt="Account" width="30" height="30" />
                            }
                        </button>
                        <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="header__account__button">
                            @if (User.Identity?.IsAuthenticated ?? false)
                            {
                                if (Context.Request.Path.Value == "/account")
                                {
                                    <li class="dropdown-item"><em aria-selected="true">My account</em></li>
                                }
                                else
                                {
                                    <li class="dropdown-item"><a href="/account">My account</a></li>
                                }
                                if (Model.Player != null)
                                {
                                    if (Context.Request.Path.Value == Model.Player.PlayerRoute)
                                    {
                                        <li class="dropdown-item"><em aria-selected="true">My statistics</em></li>
                                    }
                                    else
                                    {
                                        <li class="dropdown-item"><a href="@Model.Player.PlayerRoute">My statistics</a></li>
                                    }
                                }
                                if (Context.Request.Path.Value!.StartsWith("/account/sign-out"))
                                {
                                    <li class="dropdown-item"><em aria-selected="true">Sign out</em></li>
                                }
                                else
                                {
                                    <li class="dropdown-item"><a href="/account/sign-out">Sign out</a></li>
                                }
                            }
                            else
                            {
                                if (Context.Request.Path.Value!.StartsWith("/account/create"))
                                {
                                    <li class="dropdown-item"><em aria-selected="true">Create an account</em></li>
                                }
                                else
                                {
                                    <li class="dropdown-item"><a href="/account/create">Create an account</a></li>
                                }
                                if (Context.Request.Path.Value!.StartsWith("/account/sign-in"))
                                {
                                    <li class="dropdown-item"><em aria-selected="true">Sign in</em></li>
                                }
                                else
                                {
                                    <li class="dropdown-item"><a href="/account/sign-in?ReturnUrl=@WebUtility.UrlEncode(Context.Request.Path.Value + Context.Request.QueryString)">Sign in</a></li>
                                }
                            }
                        </ul>
                    </div>
                </div>
                <div class="header__menu-small">
                    <div class="dropdown">
                        <button class="btn header__menu-small__button" type="button" id="header__menu-small__button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" title="Menu">
                            <img src="~/images/icons/menu-white-24dp.svg" alt="Menu" width="30" height="30" />
                        </button>
                        <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="header__menu-small__button">
                            @{
                                foreach (var child in childrenOfHome)
                                {
                                    var childUrl = child.Url();
                                    if (currentPage == childUrl)
                                    {
                                        <li class="dropdown-item">
                                            <em aria-selected="true">@child.Name</em>
                                        </li>
                                    }
                                    else if (currentSection == childUrl)
                                    {
                                        <li class="dropdown-item">
                                            <a href="@childUrl" aria-selected="true">@child.Name</a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="dropdown-item">
                                            <a href="@childUrl">@child.Name</a>
                                        </li>
                                    }
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </nav>
    @if (headerPhoto != null)
    {
        <img srcset="@headerPhoto.GetCropUrl("extra-small") 576w,
            @headerPhoto.GetCropUrl("small") 768w,
            @headerPhoto.GetCropUrl("medium") 992w,
            @headerPhoto.GetCropUrl("large") 1200w,
            @headerPhoto.GetCropUrl("extra-large") 2000w"
             sizes="100vw" src="@headerPhoto.GetCropUrl("large")" alt="" class="header__photo" />
    }
</header>
