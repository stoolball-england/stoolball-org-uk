@inherits Umbraco.Web.Mvc.UmbracoViewPage<MatchListingViewModel>
@using Stoolball.Web.Matches
@using Humanizer
@using Stoolball.Dates
@using Stoolball.Matches
@{
    Layout = null;
    Response.ContentType = "application/rss+xml";
}
<?xml version="1.0" encoding="utf-8" ?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
    <channel>
        <title>@Model.Metadata.PageTitle</title>
        <link>https://@Request.Url.Authority/matches</link>
        <description>@Model.Metadata.Description</description>
        <pubDate>@DateTimeOffset.UtcNow.ToRFC822()</pubDate>
        <image>
            <url>https://@Request.Url.Authority/images/logos/stoolball-england-rss.gif</url>
            <title>@Model.Metadata.PageTitle</title>
            <link>https://@Request.Url.Authority/matches</link>
        </image>
        <language>en-GB</language>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        @foreach (var listing in Model.Matches)
        {
            string tweetTitle;
            if (Request.QueryString["today"] =="true")
            {
                if (listing.MatchType == null && DateTimeOffset.UtcNow.LocalDateTime.Hour >= 8)
                {
                    tweetTitle = $"We're off to {listing.MatchName}! #stoolball";
                }
                else if (DateTimeOffset.UtcNow.LocalDateTime.Hour < 16)
                {
                    continue; // don't tweet tournaments until 8am or matches until 4pm
                }
                if (listing.MatchType == MatchType.TrainingSession)
                {
                    tweetTitle = "It's training night - come and join us! #stoolball";
                }
                else
                {
                    tweetTitle = $"It's match night! {listing.MatchName} #stoolball";
                }

            }
            else
            {
                string matchType;
                if (listing.MatchType == MatchType.TrainingSession)
                {
                    matchType = "training session";
                    tweetTitle = listing.MatchLocation.NameAndLocalityOrTownIfDifferent();
                }
                else
                {
                    matchType = listing.MatchType == null ? "tournament" : "match";
                    tweetTitle = listing.MatchName;
                }
                var isUpdate = listing.FirstAuditDate.HasValue && listing.LastAuditDate.HasValue && listing.LastAuditDate > listing.FirstAuditDate.Value.AddHours(1);
                tweetTitle = $"{(isUpdate ? "Updated" : "New")} {matchType}: {tweetTitle}, {Model.DateTimeFormatter.FormatDateTime(listing.StartTime,true,true,true) } #stoolball";
            }
                @:<item>
                    <title><![CDATA[@tweetTitle #@(listing.MatchLocation?.LocalityOrTown().Humanize(LetterCasing.Title).Replace(" ",string.Empty))]]></title>
                    <description><![CDATA[@listing.Description()]]></description>
                    <link>@:https://@Request.Url.Authority@listing.MatchRoute</link>
                    <pubDate>@listing.LastAuditDate.Value.ToRFC822()</pubDate>
                    <guid isPermaLink="false">@Stoolball.Constants.EntityUriPrefixes.Tournament@listing.MatchId</guid>
                    <source url="@Request.Url.Scheme://@Request.Url.Authority@(Request.Url.AbsolutePath.Substring(0,Request.Url.AbsolutePath.Length-4)).rss@(Request.Url.Query)" />
                    <category>@listing.PlayerType.Humanize(LetterCasing.LowerCase)</category>
                @:</item>
            }
    </channel>
</rss>
