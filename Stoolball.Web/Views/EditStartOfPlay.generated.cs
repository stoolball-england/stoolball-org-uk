#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 2 "..\..\Views\EditStartOfPlay.cshtml"
    using ClientDependency.Core.Mvc;
    
    #line default
    #line hidden
    using Examine;
    
    #line 7 "..\..\Views\EditStartOfPlay.cshtml"
    using Humanizer;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\EditStartOfPlay.cshtml"
    using Stoolball.Matches;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Views\EditStartOfPlay.cshtml"
    using Stoolball.Security;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Views\EditStartOfPlay.cshtml"
    using Stoolball.Teams;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Views\EditStartOfPlay.cshtml"
    using Stoolball.Web.Matches;
    
    #line default
    #line hidden
    using Umbraco.Core;
    using Umbraco.Core.Models;
    using Umbraco.Core.Models.PublishedContent;
    using Umbraco.Web;
    using Umbraco.Web.Mvc;
    using Umbraco.Web.PublishedModels;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/EditStartOfPlay.cshtml")]
    public partial class _Views_EditStartOfPlay_cshtml : Umbraco.Web.Mvc.UmbracoViewPage<EditStartOfPlayViewModel>
    {
        public _Views_EditStartOfPlay_cshtml()
        {
        }
        public override void Execute()
        {
DefineSection("head", () => {

WriteLiteral("\r\n    <meta");

WriteLiteral(" name=\"robots\"");

WriteLiteral(" content=\"noindex,follow\"");

WriteLiteral(" />\r\n");

});

            
            #line 11 "..\..\Views\EditStartOfPlay.cshtml"
  
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("~/scripts/jquery.validate.min.js");
    Html.RequiresJs("~/scripts/jquery.validate.unobtrusive.min.js");

    Html.RequiresJs("~/js/libs/jquery.autocomplete.min.js", 50);
    Html.RequiresCss("~/css/autocomplete.min.css");

    Html.RequiresCss("~/css/related-items.min.css");
    Html.RequiresJs("~/js/related-item.js");

    Html.RequiresCss("~/css/steps.min.css");

    Html.RequiresJs("~/matches/close-of-play.js");

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"container-xl\"");

WriteLiteral(">\r\n    <h1>Edit ");

            
            #line 28 "..\..\Views\EditStartOfPlay.cshtml"
        Write(Html.MatchFullName(Model.Match, x => Model.DateFormatter.FormatDate(x, false, false, false)));

            
            #line default
            #line hidden
WriteLiteral("</h1>\r\n\r\n");

            
            #line 30 "..\..\Views\EditStartOfPlay.cshtml"
    
            
            #line default
            #line hidden
            
            #line 30 "..\..\Views\EditStartOfPlay.cshtml"
     if (Model.IsAuthorized[AuthorizedAction.EditMatchResult])
    {
        using (Html.BeginUmbracoForm<EditStartOfPlaySurfaceController>
            ("UpdateMatch"))
        {
            
            
            #line default
            #line hidden
            
            #line 35 "..\..\Views\EditStartOfPlay.cshtml"
       Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 35 "..\..\Views\EditStartOfPlay.cshtml"
                                    


            
            #line default
            #line hidden
WriteLiteral("            <ol");

WriteLiteral(" class=\"steps\"");

WriteLiteral(">\r\n                <li");

WriteLiteral(" aria-current=\"step\"");

WriteLiteral("><em");

WriteLiteral(" class=\"sr-only\"");

WriteLiteral(">Start of play</em></li>\r\n");

            
            #line 39 "..\..\Views\EditStartOfPlay.cshtml"
                
            
            #line default
            #line hidden
            
            #line 39 "..\..\Views\EditStartOfPlay.cshtml"
                 for (var i = 0; i < Model.Match.MatchInnings.Count; i++)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <li><span");

WriteLiteral(" class=\"sr-only\"");

WriteLiteral(">");

            
            #line 41 "..\..\Views\EditStartOfPlay.cshtml"
                                          Write((i + 1).Ordinalize());

            
            #line default
            #line hidden
WriteLiteral(" innings batting</span></li>\r\n");

WriteLiteral("                    <li><span");

WriteLiteral(" class=\"sr-only\"");

WriteLiteral(">");

            
            #line 42 "..\..\Views\EditStartOfPlay.cshtml"
                                          Write((i + 1).Ordinalize());

            
            #line default
            #line hidden
WriteLiteral(" innings bowling</span></li>\r\n");

            
            #line 43 "..\..\Views\EditStartOfPlay.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                <li><span");

WriteLiteral(" class=\"sr-only\"");

WriteLiteral(">Result</span></li>\r\n            </ol>\r\n");

            
            #line 46 "..\..\Views\EditStartOfPlay.cshtml"

            var hasHomeTeam = Model.Match.Teams.Any(x => x.TeamRole == TeamRole.Home);
            var hasAwayTeam = Model.Match.Teams.Any(x => x.TeamRole == TeamRole.Away);
            if (!hasHomeTeam || !hasAwayTeam)
            {

            
            #line default
            #line hidden
WriteLiteral("                <h2>Confirm the teams that aren\'t yet known</h2>\r\n");

            
            #line 52 "..\..\Views\EditStartOfPlay.cshtml"
            }

            if (!hasHomeTeam && Model.PossibleHomeTeams.Count > 0)
            {

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 57 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.LabelFor(m => Model.HomeTeamId));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                    ");

            
            #line 58 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.DropDownListFor(m => Model.HomeTeamId, Model.PossibleHomeTeams, "To be confirmed", new { @class = "form-control", required = "required", aria_describedby = "home-team" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                    ");

            
            #line 59 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.ValidationMessageFor(m => Model.HomeTeamId, null, new { id = "home-team" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </div>\r\n");

            
            #line 61 "..\..\Views\EditStartOfPlay.cshtml"
            }

            if (!hasAwayTeam && Model.PossibleAwayTeams.Count > 0)
            {

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 66 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.LabelFor(m => Model.AwayTeamId));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                    ");

            
            #line 67 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.DropDownListFor(m => Model.AwayTeamId, Model.PossibleAwayTeams, "To be confirmed", new { @class = "form-control", required = "required", aria_describedby = "away-team" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                    ");

            
            #line 68 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.ValidationMessageFor(m => Model.AwayTeamId, null, new { id = "away-team" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </div>\r\n");

            
            #line 70 "..\..\Views\EditStartOfPlay.cshtml"
            }

            if (!hasHomeTeam && Model.PossibleHomeTeams.Count == 0)
            {

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"form-group related-item\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 75 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.LabelFor(m => Model.HomeTeamName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 76 "..\..\Views\EditStartOfPlay.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 76 "..\..\Views\EditStartOfPlay.cshtml"
                     if (Model.HomeTeamId.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"single-related-item__selected\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"related-item__selected__section\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 80 "..\..\Views\EditStartOfPlay.cshtml"
                           Write(Html.TextBoxFor(m => Model.HomeTeamName, new { @class = "form-control", @readonly = "readonly", aria_describedby= "home-team" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n                            <div");

WriteLiteral(" class=\"related-item__delete related-item__selected__section\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 83 "..\..\Views\EditStartOfPlay.cshtml"
                           Write(Html.HiddenFor(m => Model.HomeTeamId, new { @class = "related-item__data related-item__id" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn-delete-icon\"");

WriteLiteral(">");

            
            #line 84 "..\..\Views\EditStartOfPlay.cshtml"
                                                                         Write(Html.Partial("_DeleteIcon", $"Remove {Model.HomeTeamName} from this match"));

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n                            </div>\r\n                        </div>\r\n");

            
            #line 87 "..\..\Views\EditStartOfPlay.cshtml"
                        Model.HomeTeamName = string.Empty;
                        
            
            #line default
            #line hidden
            
            #line 88 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.TextBoxFor(m => Model.HomeTeamName, new
                   {
                       @class = "form-control related-item__search",
                       placeholder = "Type the home team name",
                       autocomplete = "off",
                       required = "required",
                       type = "search",
                       data_url = $"/api/teams/autocomplete?teamType={TeamType.LimitedMembership.ToString()}&teamType={TeamType.Occasional.ToString()}&teamType={TeamType.Regular.ToString()}&teamType={TeamType.Representative.ToString()}&teamType={TeamType.SchoolAgeGroup.ToString()}&teamType={TeamType.SchoolClub.ToString()}&teamType={TeamType.SchoolOther.ToString()}",
                       data_template = "home-team-template",
                       aria_label = "Type a team name and press down arrow to select from the matching choices",
                       disabled = "disabled",
                       aria_describedby = "home-team"
                   }));

            
            #line default
            #line hidden
            
            #line 100 "..\..\Views\EditStartOfPlay.cshtml"
                     
                    }
                    else
                    {
                        
            
            #line default
            #line hidden
            
            #line 104 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.TextBoxFor(m => Model.HomeTeamName, new
                   {
                       @class = "form-control related-item__search",
                       placeholder = "Type the home team name",
                       autocomplete = "off",
                       required = "required",
                       type = "search",
                       data_url = $"/api/teams/autocomplete?teamType={TeamType.LimitedMembership.ToString()}&teamType={TeamType.Occasional.ToString()}&teamType={TeamType.Regular.ToString()}&teamType={TeamType.Representative.ToString()}&teamType={TeamType.SchoolAgeGroup.ToString()}&teamType={TeamType.SchoolClub.ToString()}&teamType={TeamType.SchoolOther.ToString()}",
                       data_template = "home-team-template",
                       aria_label = "Type a team name and press down arrow to select from the matching choices",
                       aria_describedby = "home-team"
                   }));

            
            #line default
            #line hidden
            
            #line 115 "..\..\Views\EditStartOfPlay.cshtml"
                     
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 117 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.ValidationMessageFor(m => Model.HomeTeamName, null, new { id = "home-team" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/x-template\"");

WriteLiteral(" id=\"home-team-template\"");

WriteLiteral(@">
                <div class=""single-related-item__selected"">
                    <div class=""related-item__selected__section"">
                        <input type=""text"" readonly=""readonly"" value=""{{value}}"" class=""form-control"" id=""HomeTeamName"" name=""HomeTeamName"" aria-describedby=""home-team"" />
                    </div>
                    <div class=""related-item__delete related-item__selected__section"">
                        <input name=""HomeTeamId"" class=""related-item__data related-item__id"" type=""hidden"" value=""{{data}}"" />
                        <button type=""button"" class=""btn-delete-icon"">");

            
            #line 126 "..\..\Views\EditStartOfPlay.cshtml"
                                                                 Write(Html.Partial("_DeleteIcon", "Remove {{value}} from this match"));

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n                    </div>\r\n                </div>\r\n                </" +
"script>\r\n");

            
            #line 130 "..\..\Views\EditStartOfPlay.cshtml"
            }

            if (!hasAwayTeam && Model.PossibleAwayTeams.Count == 0)
            {

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"form-group related-item\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 135 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.LabelFor(m => Model.AwayTeamName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 136 "..\..\Views\EditStartOfPlay.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 136 "..\..\Views\EditStartOfPlay.cshtml"
                     if (Model.AwayTeamId.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"single-related-item__selected\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"related-item__selected__section\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 140 "..\..\Views\EditStartOfPlay.cshtml"
                           Write(Html.TextBoxFor(m => Model.AwayTeamName, new { @class = "form-control", @readonly = "readonly", aria_describedby = "away-team" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n                            <div");

WriteLiteral(" class=\"related-item__delete related-item__selected__section\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 143 "..\..\Views\EditStartOfPlay.cshtml"
                           Write(Html.HiddenFor(m => Model.AwayTeamId, new { @class = "related-item__data related-item__id" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn-delete-icon\"");

WriteLiteral(">");

            
            #line 144 "..\..\Views\EditStartOfPlay.cshtml"
                                                                         Write(Html.Partial("_DeleteIcon", $"Remove {Model.AwayTeamName} from this match"));

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n                            </div>\r\n                        </div>\r\n");

            
            #line 147 "..\..\Views\EditStartOfPlay.cshtml"
                        Model.AwayTeamName = string.Empty;
                        
            
            #line default
            #line hidden
            
            #line 148 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.TextBoxFor(m => Model.AwayTeamName, new
                   {
                       @class = "form-control related-item__search",
                       placeholder = "Type the away team name",
                       autocomplete = "off",
                       required = "required",
                       type = "search",
                       data_url = $"/api/teams/autocomplete?teamType={TeamType.LimitedMembership.ToString()}&teamType={TeamType.Occasional.ToString()}&teamType={TeamType.Regular.ToString()}&teamType={TeamType.Representative.ToString()}&teamType={TeamType.SchoolAgeGroup.ToString()}&teamType={TeamType.SchoolClub.ToString()}&teamType={TeamType.SchoolOther.ToString()}",
                       data_template = "away-team-template",
                       aria_label = "Type a team name and press down arrow to select from the matching choices",
                       disabled = "disabled",
                       aria_describedby = "away-team"
                   }));

            
            #line default
            #line hidden
            
            #line 160 "..\..\Views\EditStartOfPlay.cshtml"
                     
                    }
                    else
                    {
                        
            
            #line default
            #line hidden
            
            #line 164 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.TextBoxFor(m => Model.AwayTeamName, new
                   {
                       @class = "form-control related-item__search",
                       placeholder = "Type the away team name",
                       autocomplete = "off",
                       required = "required",
                       type = "search",
                       data_url = $"/api/teams/autocomplete?teamType={TeamType.LimitedMembership.ToString()}&teamType={TeamType.Occasional.ToString()}&teamType={TeamType.Regular.ToString()}&teamType={TeamType.Representative.ToString()}&teamType={TeamType.SchoolAgeGroup.ToString()}&teamType={TeamType.SchoolClub.ToString()}&teamType={TeamType.SchoolOther.ToString()}",
                       data_template = "away-team-template",
                       aria_label = "Type a team name and press down arrow to select from the matching choices",
                       aria_describedby = "away-team"
                   }));

            
            #line default
            #line hidden
            
            #line 175 "..\..\Views\EditStartOfPlay.cshtml"
                     
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 177 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.ValidationMessageFor(m => Model.AwayTeamName, null, new { id = "away-team" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/x-template\"");

WriteLiteral(" id=\"away-team-template\"");

WriteLiteral(@">
                <div class=""single-related-item__selected"">
                    <div class=""related-item__selected__section"">
                        <input type=""text"" readonly=""readonly"" value=""{{value}}"" class=""form-control"" id=""AwayTeamName"" name=""AwayTeamName"" aria-describedby=""away-team"" />
                    </div>
                    <div class=""related-item__delete related-item__selected__section"">
                        <input name=""AwayTeamId"" class=""related-item__data related-item__id"" type=""hidden"" value=""{{data}}"" />
                        <button type=""button"" class=""btn-delete-icon"">");

            
            #line 186 "..\..\Views\EditStartOfPlay.cshtml"
                                                                 Write(Html.Partial("_DeleteIcon", "Remove {{value}} from this match"));

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n                    </div>\r\n                </div>\r\n                </" +
"script>\r\n");

            
            #line 190 "..\..\Views\EditStartOfPlay.cshtml"
            }


            
            #line default
            #line hidden
WriteLiteral("            <fieldset");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                <legend>Did the match go ahead?</legend>\r\n                <div" +
"");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 195 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.RadioButtonFor(m => Model.MatchWentAhead, true, new { @class = "custom-control-input", @id = $"match-went-ahead-yes", aria_describedby = "match-went-ahead" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <label");

WriteLiteral(" for=\"match-went-ahead-yes\"");

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">Yes</label>\r\n                </div>\r\n                <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 199 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.RadioButtonFor(m => Model.MatchWentAhead, false, new { @class = "custom-control-input", @id = $"match-went-ahead-no", aria_describedby = "match-went-ahead" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <label");

WriteLiteral(" for=\"match-went-ahead-no\"");

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">No</label>\r\n                </div>\r\n");

WriteLiteral("                ");

            
            #line 202 "..\..\Views\EditStartOfPlay.cshtml"
           Write(Html.ValidationMessageFor(m => Model.MatchWentAhead, null, new { id = "match-went-ahead" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </fieldset>\r\n");

            
            #line 204 "..\..\Views\EditStartOfPlay.cshtml"


            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteLiteral(" id=\"match-went-ahead-yes-fields\"");

WriteLiteral(">\r\n\r\n                <div");

WriteLiteral(" class=\"form-group related-item\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 208 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.LabelFor(m => Model.MatchLocationName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 209 "..\..\Views\EditStartOfPlay.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 209 "..\..\Views\EditStartOfPlay.cshtml"
                     if (Model.MatchLocationId.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"single-related-item__selected\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"related-item__selected__section\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 213 "..\..\Views\EditStartOfPlay.cshtml"
                           Write(Html.TextBoxFor(m => Model.MatchLocationName, new { @class = "form-control", @readonly = "readonly" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n                            <div");

WriteLiteral(" class=\"related-item__delete related-item__selected__section\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 216 "..\..\Views\EditStartOfPlay.cshtml"
                           Write(Html.HiddenFor(m => Model.MatchLocationId, new { @class = "related-item__data related-item__id" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn-delete-icon\"");

WriteLiteral(">");

            
            #line 217 "..\..\Views\EditStartOfPlay.cshtml"
                                                                         Write(Html.Partial("_DeleteIcon", $"Remove {Model.MatchLocationName} from this match"));

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n                            </div>\r\n                        </div>\r\n");

            
            #line 220 "..\..\Views\EditStartOfPlay.cshtml"
                        Model.MatchLocationName = string.Empty;
                        
            
            #line default
            #line hidden
            
            #line 221 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.TextBoxFor(m => Model.MatchLocationName, new
                   {
                       @class = "form-control related-item__search",
                       placeholder = "Type the ground or sports centre name",
                       autocomplete = "off",
                       type = "search",
                       data_url = "/api/locations/autocomplete",
                       data_template = "location-template",
                       aria_label = "Type a ground or sports centre name add and press down arrow to select from the matching choices",
                       disabled = "disabled"
                   }));

            
            #line default
            #line hidden
            
            #line 231 "..\..\Views\EditStartOfPlay.cshtml"
                     
                    }
                    else
                    {
                        
            
            #line default
            #line hidden
            
            #line 235 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.TextBoxFor(m => Model.MatchLocationName, new
                   {
                       @class = "form-control related-item__search",
                       placeholder = "Type the ground or sports centre name",
                       autocomplete = "off",
                       type = "search",
                       data_url = "/api/locations/autocomplete",
                       data_template = "location-template",
                       aria_label = "Type a ground or sports centre name add and press down arrow to select from the matching choices"
                   }));

            
            #line default
            #line hidden
            
            #line 244 "..\..\Views\EditStartOfPlay.cshtml"
                     
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n                <script");

WriteLiteral(" type=\"text/x-template\"");

WriteLiteral(" id=\"location-template\"");

WriteLiteral(@">
                    <div class=""single-related-item__selected"">
                        <div class=""related-item__selected__section"">
                            <input type=""text"" readonly=""readonly"" value=""{{value}}"" class=""form-control"" id=""MatchLocationName"" name=""MatchLocationName"" />
                        </div>
                        <div class=""related-item__delete related-item__selected__section"">
                            <input name=""MatchLocationId"" class=""related-item__data related-item__id"" type=""hidden"" value=""{{data}}"" />
                            <button type=""button"" class=""btn-delete-icon"">");

            
            #line 254 "..\..\Views\EditStartOfPlay.cshtml"
                                                                     Write(Html.Partial("_DeleteIcon", "Remove {{value}} from this match"));

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n                        </div>\r\n                    </div>\r\n          " +
"      </script>\r\n\r\n");

            
            #line 259 "..\..\Views\EditStartOfPlay.cshtml"
                
            
            #line default
            #line hidden
            
            #line 259 "..\..\Views\EditStartOfPlay.cshtml"
                  
                    object tossWonByUnknownAttributes;
                    if (!string.IsNullOrEmpty(Model.TossWonBy))
                    {
                        tossWonByUnknownAttributes = new { @class = "custom-control-input", @id = "toss-won-by-unknown", aria_describedby = "toss-won-by-validation" };
                    }
                    else
                    {
                        tossWonByUnknownAttributes = new { @class = "custom-control-input", @id = "toss-won-by-unknown", @checked = "checked", aria_describedby = "toss-won-by-validation" };
                    }
                
            
            #line default
            #line hidden
WriteLiteral("\r\n                <fieldset");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                    <legend");

WriteLiteral(" class=\"has-form-text\"");

WriteLiteral(">Who won the toss? <small>(optional)</small></legend>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 273 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.TossWonBy, string.Empty, tossWonByUnknownAttributes));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteLiteral(" for=\"toss-won-by-unknown\"");

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">Don\'t know</label>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 277 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.TossWonBy, Model.Match.Teams.SingleOrDefault(x => x.TeamRole == TeamRole.Home)?.MatchTeamId.ToString() ?? TeamRole.Home.ToString(), new { @class = "custom-control-input", @id = $"toss-won-by-home", aria_describedby = "toss-won-by-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteLiteral(" for=\"toss-won-by-home\"");

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">");

            
            #line 278 "..\..\Views\EditStartOfPlay.cshtml"
                                                                               Write(Model.Match.Teams.SingleOrDefault(x => x.TeamRole == TeamRole.Home)?.Team.TeamName ?? "Home team");

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 281 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.TossWonBy, Model.Match.Teams.SingleOrDefault(x => x.TeamRole == TeamRole.Away)?.MatchTeamId.ToString() ?? TeamRole.Away.ToString(), new { @class = "custom-control-input", @id = $"toss-won-by-away", aria_describedby = "toss-won-by-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteLiteral(" for=\"toss-won-by-away\"");

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">");

            
            #line 282 "..\..\Views\EditStartOfPlay.cshtml"
                                                                               Write(Model.Match.Teams.SingleOrDefault(x => x.TeamRole == TeamRole.Away)?.Team.TeamName ?? "Away team");

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n");

WriteLiteral("                    ");

            
            #line 284 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.ValidationMessageFor(m => Model.TossWonBy, null, new { id = "toss-won-by-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </fieldset>\r\n");

            
            #line 286 "..\..\Views\EditStartOfPlay.cshtml"
                
            
            #line default
            #line hidden
            
            #line 286 "..\..\Views\EditStartOfPlay.cshtml"
                  
                    object battedFirstUnknownAttributes;
                    if (!string.IsNullOrEmpty(Model.BattedFirst))
                    {
                        battedFirstUnknownAttributes = new { @class = "custom-control-input", @id = "batted-first-unknown", aria_describedby = "batted-first-validation" };
                    }
                    else
                    {
                        battedFirstUnknownAttributes = new { @class = "custom-control-input", @id = "batted-first-unknown", @checked = "checked", aria_describedby = "batted-first-validation" };
                    }
                
            
            #line default
            #line hidden
WriteLiteral("\r\n                <fieldset");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                    <legend");

WriteLiteral(" class=\"has-form-text\"");

WriteLiteral(">Who batted first? <small>(optional)</small></legend>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 300 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.BattedFirst, string.Empty, battedFirstUnknownAttributes));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteLiteral(" for=\"batted-first-unknown\"");

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">Don\'t know</label>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 304 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.BattedFirst, Model.Match.Teams.SingleOrDefault(x => x.TeamRole == TeamRole.Home)?.MatchTeamId.ToString() ?? TeamRole.Home.ToString(), new { @class = "custom-control-input", @id = $"batted-first-home", aria_describedby = "batted-first-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteLiteral(" for=\"batted-first-home\"");

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">");

            
            #line 305 "..\..\Views\EditStartOfPlay.cshtml"
                                                                                Write(Model.Match.Teams.SingleOrDefault(x => x.TeamRole == TeamRole.Home)?.Team.TeamName ?? "Home team");

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 308 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.BattedFirst, Model.Match.Teams.SingleOrDefault(x => x.TeamRole == TeamRole.Away)?.MatchTeamId.ToString() ?? TeamRole.Away.ToString(), new { @class = "custom-control-input", @id = $"batted-first-away", aria_describedby = "batted-first-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteLiteral(" for=\"batted-first-away\"");

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">");

            
            #line 309 "..\..\Views\EditStartOfPlay.cshtml"
                                                                                Write(Model.Match.Teams.SingleOrDefault(x => x.TeamRole == TeamRole.Away)?.Team.TeamName ?? "Away team");

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n");

WriteLiteral("                    ");

            
            #line 311 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.ValidationMessageFor(m => Model.BattedFirst, null, new { id = "batted-first-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </fieldset>\r\n                <fieldset");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                    <legend>Do you have the scorecard?</legend>\r\n             " +
"       <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 316 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => m.HasScorecard, true, new { @class="custom-control-input", id = "scorecard-yes" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteLiteral(" for=\"scorecard-yes\"");

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">Yes</label>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 320 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => m.HasScorecard, false, new { @class = "custom-control-input", id = "scorecard-no" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteLiteral(" for=\"scorecard-no\"");

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">No</label>\r\n                    </div>\r\n                </fieldset>\r\n           " +
" </div>\r\n");

WriteLiteral("            <div");

WriteLiteral(" id=\"match-went-ahead-no-fields\"");

WriteLiteral(">\r\n                <fieldset");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                    <legend>Why didn\'t the match go ahead?</legend>\r\n         " +
"           <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 329 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.Match.MatchResultType, MatchResultType.HomeWinByForfeit, new { @class = "custom-control-input", @id = MatchResultType.HomeWinByForfeit.ToString(), aria_describedby = "result-type-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteAttribute("for", Tuple.Create(" for=\"", 22070), Tuple.Create("\"", 22120)
            
            #line 330 "..\..\Views\EditStartOfPlay.cshtml"
, Tuple.Create(Tuple.Create("", 22076), Tuple.Create<System.Object, System.Int32>(MatchResultType.HomeWinByForfeit.ToString()
            
            #line default
            #line hidden
, 22076), false)
);

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">");

            
            #line 330 "..\..\Views\EditStartOfPlay.cshtml"
                                                                                                          Write(MatchResultType.HomeWinByForfeit.ToString().Humanize().Replace("Home", Model.Match.Teams.SingleOrDefault(x => x.TeamRole == TeamRole.Home)?.Team.TeamName ?? "Home"));

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 333 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.Match.MatchResultType, MatchResultType.AwayWinByForfeit, new { @class = "custom-control-input", @id = MatchResultType.AwayWinByForfeit.ToString(), aria_describedby = "result-type-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteAttribute("for", Tuple.Create(" for=\"", 22698), Tuple.Create("\"", 22748)
            
            #line 334 "..\..\Views\EditStartOfPlay.cshtml"
, Tuple.Create(Tuple.Create("", 22704), Tuple.Create<System.Object, System.Int32>(MatchResultType.AwayWinByForfeit.ToString()
            
            #line default
            #line hidden
, 22704), false)
);

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">");

            
            #line 334 "..\..\Views\EditStartOfPlay.cshtml"
                                                                                                          Write(MatchResultType.AwayWinByForfeit.ToString().Humanize().Replace("Away", Model.Match.Teams.SingleOrDefault(x => x.TeamRole == TeamRole.Away)?.Team.TeamName ?? "Away"));

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 337 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.Match.MatchResultType, MatchResultType.Postponed, new { @class = "custom-control-input", @id = MatchResultType.Postponed.ToString(), aria_describedby = "result-type-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteAttribute("for", Tuple.Create(" for=\"", 23312), Tuple.Create("\"", 23355)
            
            #line 338 "..\..\Views\EditStartOfPlay.cshtml"
, Tuple.Create(Tuple.Create("", 23318), Tuple.Create<System.Object, System.Int32>(MatchResultType.Postponed.ToString()
            
            #line default
            #line hidden
, 23318), false)
);

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">");

            
            #line 338 "..\..\Views\EditStartOfPlay.cshtml"
                                                                                                   Write(MatchResultType.Postponed.ToString().Humanize());

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 341 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.Match.MatchResultType, MatchResultType.Cancelled, new { @class = "custom-control-input", @id = MatchResultType.Cancelled.ToString(), aria_describedby = "result-type-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteAttribute("for", Tuple.Create(" for=\"", 23802), Tuple.Create("\"", 23845)
            
            #line 342 "..\..\Views\EditStartOfPlay.cshtml"
, Tuple.Create(Tuple.Create("", 23808), Tuple.Create<System.Object, System.Int32>(MatchResultType.Cancelled.ToString()
            
            #line default
            #line hidden
, 23808), false)
);

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">");

            
            #line 342 "..\..\Views\EditStartOfPlay.cshtml"
                                                                                                   Write(MatchResultType.Cancelled.ToString().Humanize());

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 345 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.Match.MatchResultType, MatchResultType.AbandonedDuringPlayAndPostponed, new { @class = "custom-control-input", @id = MatchResultType.AbandonedDuringPlayAndPostponed.ToString(), aria_describedby = "result-type-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteAttribute("for", Tuple.Create(" for=\"", 24336), Tuple.Create("\"", 24401)
            
            #line 346 "..\..\Views\EditStartOfPlay.cshtml"
, Tuple.Create(Tuple.Create("", 24342), Tuple.Create<System.Object, System.Int32>(MatchResultType.AbandonedDuringPlayAndPostponed.ToString()
            
            #line default
            #line hidden
, 24342), false)
);

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">");

            
            #line 346 "..\..\Views\EditStartOfPlay.cshtml"
                                                                                                                         Write(MatchResultType.AbandonedDuringPlayAndPostponed.ToString().Humanize());

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"custom-control custom-radio\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 349 "..\..\Views\EditStartOfPlay.cshtml"
                   Write(Html.RadioButtonFor(m => Model.Match.MatchResultType, MatchResultType.AbandonedDuringPlayAndCancelled, new { @class = "custom-control-input", @id = MatchResultType.AbandonedDuringPlayAndCancelled.ToString(), aria_describedby = "result-type-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <label");

WriteAttribute("for", Tuple.Create(" for=\"", 24914), Tuple.Create("\"", 24979)
            
            #line 350 "..\..\Views\EditStartOfPlay.cshtml"
, Tuple.Create(Tuple.Create("", 24920), Tuple.Create<System.Object, System.Int32>(MatchResultType.AbandonedDuringPlayAndCancelled.ToString()
            
            #line default
            #line hidden
, 24920), false)
);

WriteLiteral(" class=\"custom-control-label\"");

WriteLiteral(">");

            
            #line 350 "..\..\Views\EditStartOfPlay.cshtml"
                                                                                                                         Write(MatchResultType.AbandonedDuringPlayAndCancelled.ToString().Humanize());

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n");

WriteLiteral("                    ");

            
            #line 352 "..\..\Views\EditStartOfPlay.cshtml"
               Write(Html.ValidationMessageFor(m => Model.Match.MatchResultType, null, new { id = "result-type-validation" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </fieldset>\r\n            </div>\r\n");

            
            #line 355 "..\..\Views\EditStartOfPlay.cshtml"


            
            #line default
            #line hidden
WriteLiteral("            <button");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(">Save and continue</button>\r\n");

            
            #line 357 "..\..\Views\EditStartOfPlay.cshtml"
        }
    }
    else
    {
    
            
            #line default
            #line hidden
            
            #line 361 "..\..\Views\EditStartOfPlay.cshtml"
Write(Html.Partial("_Login"));

            
            #line default
            #line hidden
            
            #line 361 "..\..\Views\EditStartOfPlay.cshtml"
                           
    }

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

        }
    }
}
#pragma warning restore 1591
