#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 5 "..\..\Views\Tournament.cshtml"
    using ClientDependency.Core.Mvc;
    
    #line default
    #line hidden
    using Examine;
    
    #line 2 "..\..\Views\Tournament.cshtml"
    using Humanizer;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Tournament.cshtml"
    using Innovative.SolarCalculator;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Views\Tournament.cshtml"
    using Stoolball.Matches;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Views\Tournament.cshtml"
    using Stoolball.Security;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Views\Tournament.cshtml"
    using Stoolball.Web.Matches;
    
    #line default
    #line hidden
    using Umbraco.Core;
    using Umbraco.Core.Models;
    using Umbraco.Core.Models.PublishedContent;
    using Umbraco.Web;
    using Umbraco.Web.Mvc;
    using Umbraco.Web.PublishedModels;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Tournament.cshtml")]
    public partial class _Views_Tournament_cshtml : Umbraco.Web.Mvc.UmbracoViewPage<TournamentViewModel>
    {
        public _Views_Tournament_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 8 "..\..\Views\Tournament.cshtml"
  
    var authorizedToEdit = Model.IsAuthorized[AuthorizedAction.EditTournament] || Model.IsAuthorized[AuthorizedAction.DeleteTournament];
    Html.RequiresCss("~/matches/match.min.css");
    Html.RequiresCss("~/css/comments.min.css");

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"container-xl\"");

WriteLiteral(">\r\n    <h1>");

            
            #line 14 "..\..\Views\Tournament.cshtml"
   Write(Html.TournamentFullNameAndPlayerType(Model.Tournament, x => Model.DateTimeFormatter.FormatDate(x, false)));

            
            #line default
            #line hidden
WriteLiteral("</h1>\r\n\r\n    ");

WriteLiteral("\r\n");

            
            #line 17 "..\..\Views\Tournament.cshtml"
    
            
            #line default
            #line hidden
            
            #line 17 "..\..\Views\Tournament.cshtml"
     if (authorizedToEdit)
    {

            
            #line default
            #line hidden
WriteLiteral("        <ul");

WriteAttribute("class", Tuple.Create(" class=\"", 780), Tuple.Create("\"", 857)
, Tuple.Create(Tuple.Create("", 788), Tuple.Create("nav", 788), true)
, Tuple.Create(Tuple.Create(" ", 791), Tuple.Create("nav-tabs", 792), true)
            
            #line 19 "..\..\Views\Tournament.cshtml"
, Tuple.Create(Tuple.Create("", 800), Tuple.Create<System.Object, System.Int32>(authorizedToEdit ? " nav-tabs-has-edit" : string.Empty
            
            #line default
            #line hidden
, 800), false)
);

WriteLiteral(">\r\n            <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n                <em");

WriteLiteral(" class=\"nav-link active\"");

WriteLiteral(">Summary</em>\r\n            </li>\r\n            <li");

WriteLiteral(" class=\"nav-item nav-item-admin\"");

WriteLiteral(">\r\n                <a");

WriteLiteral(" class=\"nav-link nav-link-edit\"");

WriteAttribute("href", Tuple.Create(" href=\"", 1072), Tuple.Create("\"", 1117)
            
            #line 24 "..\..\Views\Tournament.cshtml"
, Tuple.Create(Tuple.Create("", 1079), Tuple.Create<System.Object, System.Int32>(Model.Tournament.TournamentRoute
            
            #line default
            #line hidden
, 1079), false)
, Tuple.Create(Tuple.Create("", 1112), Tuple.Create("/edit", 1112), true)
);

WriteLiteral(">Edit tournament</a>\r\n            </li>\r\n        </ul>\r\n");

            
            #line 27 "..\..\Views\Tournament.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n    <p>\r\n        When:\r\n");

WriteLiteral("        ");

            
            #line 31 "..\..\Views\Tournament.cshtml"
    Write(Model.Tournament.StartTimeIsKnown ? Model.DateTimeFormatter.FormatDateTime(Model.Tournament.StartTime) : Model.DateTimeFormatter.FormatDate(Model.Tournament.StartTime));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 32 "..\..\Views\Tournament.cshtml"
        
            
            #line default
            #line hidden
            
            #line 32 "..\..\Views\Tournament.cshtml"
         if (Model.Tournament.TournamentLocation?.Latitude != null && Model.Tournament.TournamentLocation?.Longitude != null)
        {
            var solarTimes = new SolarTimes(Model.Tournament.StartTime, Model.Tournament.TournamentLocation.Latitude, Model.Tournament.TournamentLocation.Longitude);

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral(" (sunset ");

            
            #line 35 "..\..\Views\Tournament.cshtml"
                  Write(Model.DateTimeFormatter.FormatTime(solarTimes.Sunset));

            
            #line default
            #line hidden
WriteLiteral(")\r\n");

            
            #line 36 "..\..\Views\Tournament.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 37 "..\..\Views\Tournament.cshtml"
         if (Model.Tournament.StartTime > DateTimeOffset.UtcNow)
        {

            
            #line default
            #line hidden
WriteLiteral("            <a");

WriteLiteral(" type=\"text/calendar\"");

WriteAttribute("href", Tuple.Create(" href=\"", 1895), Tuple.Create("\"", 2033)
, Tuple.Create(Tuple.Create("", 1902), Tuple.Create("webcal://", 1902), true)
            
            #line 39 "..\..\Views\Tournament.cshtml"
, Tuple.Create(Tuple.Create("", 1911), Tuple.Create<System.Object, System.Int32>(Request.Url.Host == "localhost" ? Request.Url.Authority : "www.stoolball.org.uk"
            
            #line default
            #line hidden
, 1911), false)
            
            #line 39 "..\..\Views\Tournament.cshtml"
                                                       , Tuple.Create(Tuple.Create("", 1994), Tuple.Create<System.Object, System.Int32>(Model.Tournament.TournamentRoute
            
            #line default
            #line hidden
, 1994), false)
, Tuple.Create(Tuple.Create("", 2029), Tuple.Create(".ics", 2029), true)
);

WriteLiteral(" rel=\"nofollow\"");

WriteLiteral(" class=\"calendar__inline\"");

WriteLiteral(">Add to calendar</a>\r\n");

            
            #line 40 "..\..\Views\Tournament.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </p>\r\n\r\n\r\n");

            
            #line 44 "..\..\Views\Tournament.cshtml"
    
            
            #line default
            #line hidden
            
            #line 44 "..\..\Views\Tournament.cshtml"
     if (Model.Tournament.TournamentLocation != null)
    {

            
            #line default
            #line hidden
WriteLiteral("        <p>Where: <a");

WriteAttribute("href", Tuple.Create(" href=\"", 2203), Tuple.Create("\"", 2265)
            
            #line 46 "..\..\Views\Tournament.cshtml"
, Tuple.Create(Tuple.Create("", 2210), Tuple.Create<System.Object, System.Int32>(Model.Tournament.TournamentLocation.MatchLocationRoute
            
            #line default
            #line hidden
, 2210), false)
);

WriteLiteral(">");

            
            #line 46 "..\..\Views\Tournament.cshtml"
                                                                               Write(Model.Tournament.TournamentLocation.NameAndLocalityOrTown());

            
            #line default
            #line hidden
WriteLiteral("</a></p>\r\n");

            
            #line 47 "..\..\Views\Tournament.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 49 "..\..\Views\Tournament.cshtml"
    
            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\Tournament.cshtml"
     if (Model.Tournament.DefaultOverSets.Any())
    {

            
            #line default
            #line hidden
WriteLiteral("        <p>Matches are ");

            
            #line 51 "..\..\Views\Tournament.cshtml"
                  Write(Model.Tournament.DefaultOverSets.Sum(x => x.Overs));

            
            #line default
            #line hidden
WriteLiteral(" overs.</p>\r\n");

            
            #line 52 "..\..\Views\Tournament.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 53 "..\..\Views\Tournament.cshtml"
      
        var showSpacesLeft = (Model.Tournament.SpacesInTournament.HasValue &&
            Model.Tournament.StartTime > DateTime.UtcNow &&
            Model.Tournament.QualificationType != TournamentQualificationType.ClosedTournament);
        if (Model.Tournament.PlayersPerTeam.HasValue ||
            showSpacesLeft ||
            Model.Tournament.Teams.Count > 0 ||
            Model.Tournament.QualificationType.HasValue)
        {

            
            #line default
            #line hidden
WriteLiteral("            <h2>Teams</h2>\r\n");

            
            #line 63 "..\..\Views\Tournament.cshtml"
        }

    
            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 66 "..\..\Views\Tournament.cshtml"
    
            
            #line default
            #line hidden
            
            #line 66 "..\..\Views\Tournament.cshtml"
     if (Model.Tournament.PlayersPerTeam.HasValue ||
        Model.Tournament.QualificationType.HasValue ||
        showSpacesLeft)
    {

            
            #line default
            #line hidden
WriteLiteral("        <p>\r\n");

            
            #line 71 "..\..\Views\Tournament.cshtml"
            
            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Tournament.cshtml"
             if (Model.Tournament.PlayersPerTeam.HasValue)
            {
                
            
            #line default
            #line hidden
            
            #line 73 "..\..\Views\Tournament.cshtml"
           Write(Model.Tournament.PlayersPerTeam.Value);

            
            #line default
            #line hidden
WriteLiteral(" players per team.\r\n");

            
            #line 74 "..\..\Views\Tournament.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 75 "..\..\Views\Tournament.cshtml"
             if (Model.Tournament.QualificationType == TournamentQualificationType.OpenTournament)
            {

            
            #line default
            #line hidden
WriteLiteral("                ");

WriteLiteral("Any ");

            
            #line 77 "..\..\Views\Tournament.cshtml"
                 Write(Model.Tournament.PlayerType.Humanize(LetterCasing.LowerCase).Replace("men", "men's"));

            
            #line default
            #line hidden
WriteLiteral(" team may enter this tournament.\r\n");

            
            #line 78 "..\..\Views\Tournament.cshtml"
            }
            else if (Model.Tournament.QualificationType == TournamentQualificationType.ClosedTournament)
            {

            
            #line default
            #line hidden
WriteLiteral("                ");

WriteLiteral("Only invited or qualifying teams may enter this tournament.\r\n");

            
            #line 82 "..\..\Views\Tournament.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 83 "..\..\Views\Tournament.cshtml"
             if (showSpacesLeft)
            {

            
            #line default
            #line hidden
WriteLiteral("                <strong>");

            
            #line 85 "..\..\Views\Tournament.cshtml"
                   Write(Model.Tournament.SpacesInTournament);

            
            #line default
            #line hidden
WriteLiteral(" spaces.</strong>\r\n");

            
            #line 86 "..\..\Views\Tournament.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </p>\r\n");

            
            #line 88 "..\..\Views\Tournament.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 89 "..\..\Views\Tournament.cshtml"
     if (Model.Tournament.Teams.Count > 0)
    {
        
            
            #line default
            #line hidden
            
            #line 91 "..\..\Views\Tournament.cshtml"
   Write(Html.Partial("_TeamList", Model.Tournament.Teams.Select(x => x.Team).ToList()));

            
            #line default
            #line hidden
            
            #line 91 "..\..\Views\Tournament.cshtml"
                                                                                       
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 94 "..\..\Views\Tournament.cshtml"
    
            
            #line default
            #line hidden
            
            #line 94 "..\..\Views\Tournament.cshtml"
     if (Model.Matches.Matches.Count > 0)
    {

            
            #line default
            #line hidden
WriteLiteral("        <h2>Matches</h2>\r\n");

            
            #line 97 "..\..\Views\Tournament.cshtml"
        
            
            #line default
            #line hidden
            
            #line 97 "..\..\Views\Tournament.cshtml"
   Write(Html.Partial("_MatchList", Model.Matches));

            
            #line default
            #line hidden
            
            #line 97 "..\..\Views\Tournament.cshtml"
                                                  
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 100 "..\..\Views\Tournament.cshtml"
    
            
            #line default
            #line hidden
            
            #line 100 "..\..\Views\Tournament.cshtml"
     if (!string.IsNullOrWhiteSpace(Model.Tournament.TournamentNotes) || Model.Tournament.Seasons.Count > 0)
    {

            
            #line default
            #line hidden
WriteLiteral("        <h2>Notes</h2>\r\n");

            
            #line 103 "..\..\Views\Tournament.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 105 "..\..\Views\Tournament.cshtml"
    
            
            #line default
            #line hidden
            
            #line 105 "..\..\Views\Tournament.cshtml"
     if (!string.IsNullOrWhiteSpace(Model.Tournament.TournamentNotes))
    {
        
            
            #line default
            #line hidden
            
            #line 107 "..\..\Views\Tournament.cshtml"
   Write(Html.Raw(Model.Tournament.TournamentNotes));

            
            #line default
            #line hidden
            
            #line 107 "..\..\Views\Tournament.cshtml"
                                                   
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 110 "..\..\Views\Tournament.cshtml"
    
            
            #line default
            #line hidden
            
            #line 110 "..\..\Views\Tournament.cshtml"
     if (Model.Tournament.Seasons.Count == 1)
    {
        var season = Model.Tournament.Seasons.First();
        var the = season.Competition.CompetitionName.StartsWith("THE ");


            
            #line default
            #line hidden
WriteLiteral("        <p>This tournament is listed in ");

            
            #line 115 "..\..\Views\Tournament.cshtml"
                                    Write(the ? string.Empty : "the ");

            
            #line default
            #line hidden
WriteLiteral(" <a");

WriteAttribute("href", Tuple.Create(" href=\"", 4804), Tuple.Create("\"", 4830)
            
            #line 115 "..\..\Views\Tournament.cshtml"
, Tuple.Create(Tuple.Create("", 4811), Tuple.Create<System.Object, System.Int32>(season.SeasonRoute
            
            #line default
            #line hidden
, 4811), false)
);

WriteLiteral(">");

            
            #line 115 "..\..\Views\Tournament.cshtml"
                                                                                                Write(season.SeasonFullName());

            
            #line default
            #line hidden
WriteLiteral("</a>.</p>\r\n");

            
            #line 116 "..\..\Views\Tournament.cshtml"
    }
    else if (Model.Tournament.Seasons.Count > 1)
    {

            
            #line default
            #line hidden
WriteLiteral("        <p>This tournament is listed in the following seasons:</p>\r\n");

            
            #line 120 "..\..\Views\Tournament.cshtml"


            
            #line default
            #line hidden
WriteLiteral("        <ul>\r\n");

            
            #line 122 "..\..\Views\Tournament.cshtml"
            
            
            #line default
            #line hidden
            
            #line 122 "..\..\Views\Tournament.cshtml"
             foreach (var season in Model.Tournament.Seasons)
            {

            
            #line default
            #line hidden
WriteLiteral("                <li><a");

WriteAttribute("href", Tuple.Create(" href=\"", 5115), Tuple.Create("\"", 5141)
            
            #line 124 "..\..\Views\Tournament.cshtml"
, Tuple.Create(Tuple.Create("", 5122), Tuple.Create<System.Object, System.Int32>(season.SeasonRoute
            
            #line default
            #line hidden
, 5122), false)
);

WriteLiteral(">");

            
            #line 124 "..\..\Views\Tournament.cshtml"
                                             Write(season.SeasonFullName());

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n");

            
            #line 125 "..\..\Views\Tournament.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </ul>\r\n");

            
            #line 127 "..\..\Views\Tournament.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 129 "..\..\Views\Tournament.cshtml"
Write(Html.Partial("_Comments", Model.Tournament.Comments));

            
            #line default
            #line hidden
WriteLiteral("\r\n</div>");

        }
    }
}
#pragma warning restore 1591
