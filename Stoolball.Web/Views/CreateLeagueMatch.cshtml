@inherits UmbracoViewPage<EditLeagueMatchViewModel>
@using Stoolball.Web.Matches
@using Stoolball.Web.Matches.Models
@using Stoolball.Security
@section head {
    <meta name="robots" content="noindex,follow" />
}
@await Html.PartialAsync("_JQueryValidate")
@await Html.PartialAsync("_JQueryAutocomplete")
@await Html.PartialAsync("_RelatedItem")
@await Html.PartialAsync("_TinyMCE")
@await Html.PartialAsync("_Forms")
@{
    var h1 = string.Empty;
    if (Model.Team != null)
    {
        h1 = $"Add a league match for {Model.Team.TeamName}";
    }
    else if (Model.Season != null)
    {
        h1 = $"Add a league match in the {Model.Season.SeasonFullName()}";
    }
}
<div class="container-xl">
    <h1>@h1</h1>

    @if (Model.Authorization.CurrentMemberIsAuthorized[AuthorizedAction.CreateMatch])
    {
        if (Model.Season == null || Model.Season.Teams.Count > 1)
        {
            using (Html.BeginUmbracoForm<CreateLeagueMatchSurfaceController>(nameof(CreateLeagueMatchSurfaceController.CreateMatch)))
            {
                @await Html.PartialAsync("_CreateOrEditLeagueMatch")
                <button class="btn btn-primary" type="submit">Save match</button>
            }
        }
        else
        {
            <p>You need at least two teams in the @Model.Season.SeasonFullName() to add a league match.</p>
            if ( Model.Authorization.CurrentMemberIsAuthorized[AuthorizedAction.EditCompetition])
            {
                <p><a href="@Model.Season.SeasonRoute/edit/teams" class="btn btn-secondary">Edit teams</a></p>
            }
            else
            {
                <p><a href="@Model.Season.Competition.CompetitionRoute">Contact the administrators of the @Model.Season.Competition.CompetitionName</a> 
                    and ask them to add the teams playing in the @Model.Season.SeasonName(), so that you can add a match.</p>
            }
        }
    }
    else
    {
        @await Html.PartialAsync("_Login")
    }
</div>