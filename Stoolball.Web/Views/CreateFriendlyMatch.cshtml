@inherits Umbraco.Web.Mvc.UmbracoViewPage<CreateFriendlyMatchViewModel>
@using ClientDependency.Core.Mvc
@using Stoolball.Web.Matches
@section head {
    <meta name="robots" content="noindex,follow" />
}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("~/scripts/jquery.validate.min.js");
    Html.RequiresJs("~/scripts/jquery.validate.unobtrusive.min.js");

    Html.RequiresJs("~/js/libs/jquery.autocomplete.min.js", 50);
    Html.RequiresCss("~/css/autocomplete.min.css");

    Html.RequiresCss("~/css/related-items.min.css");
    Html.RequiresJs("~/js/related-item.js");

    Html.RequiresJs("/umbraco/lib/tinymce/tinymce.min.js", 90);
    Html.RequiresJs("/js/tinymce.js");

    var h1 = string.Empty;
    if (Model.Team != null)
    {
        h1 = $"Add a friendly match for {Model.Team.TeamName}";
    }
    else if (Model.Season != null)
    {
        h1 = $"Add a friendly match in the {Model.Season.SeasonFullName()}";
    }
}

<h1>@h1</h1>

@if (Model.IsAuthorized)
{
    using (Html.BeginUmbracoForm<CreateFriendlyMatchSurfaceController>
        ("CreateMatch"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <button class="sr-only">Save match</button>

        if (Model.Match.Season != null)
        {
            @Html.HiddenFor(m => Model.Match.Season.SeasonId)
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(m => Model.Match.Season.SeasonId)
                @Html.DropDownListFor(m => Model.Match.Season.SeasonId, Model.PossibleSeasons, "None", new { @class = "form-control", aria_describedby = "match-season" })
                @Html.ValidationMessageFor(m => Model.Match.Season.SeasonId, null, new { id = "match-season" })
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(m => Model.MatchDate)
            @Html.TextBoxFor(m => Model.MatchDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", required = "required", aria_describedby = "match-date" })
            @Html.ValidationMessageFor(m => Model.MatchDate, null, new { id = "match-date" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => Model.StartTime)
            @Html.TextBoxFor(m => Model.StartTime, "{0:HH:mm}", new { @type = "time", @class = "form-control", aria_describedby = "start-time" })
            @Html.ValidationMessageFor(m => Model.StartTime, null, new { id = "start-time" })
        </div>

        <div class="form-group related-item">
            @Html.LabelFor(m => Model.HomeTeamId)
            @if (Model.HomeTeamId.HasValue)
            {
                <div class="related-item__selected">
                    <div class="related-item__selected__section">
                        @Html.TextBoxFor(m => Model.HomeTeamName, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="related-item__delete related-item__selected__section">
                        @Html.HiddenFor(m => Model.HomeTeamId, new { @class = "related-item__data related-item__id" })
                        <button class="text-danger">@Html.Partial("_DeleteIcon", (Model.HomeTeamId.Value.ToString(), $"Remove {Model.HomeTeamName} from this match"))</button>
                    </div>
                </div>
                Model.HomeTeamName = string.Empty;
                @Html.TextBoxFor(m => Model.HomeTeamName, new
                {
                    @class = "form-control related-item__search",
                    placeholder = "Type the home team name",
                    autocomplete = "off",
                    type = "search",
                    data_url = "/api/teams/autocomplete",
                    data_template = "home-team-template",
                    aria_label = "Type a team name add and press down arrow to select from the matching choices",
                    disabled = "disabled"
                })
            }
            else
            {
                @Html.TextBoxFor(m => Model.HomeTeamName, new
                {
                    @class = "form-control related-item__search",
                    placeholder = "Type the home team name",
                    autocomplete = "off",
                    type = "search",
                    data_url = "/api/teams/autocomplete",
                    data_template = "home-team-template",
                    aria_label = "Type a team name add and press down arrow to select from the matching choices"
                })
            }
        </div>
        <script type="text/x-template" id="home-team-template">
            <div class="related-item__selected">
                <div class="related-item__selected__section">
                    <input type="text" readonly="readonly" value="{{value}}" class="form-control" id="HomeTeamName" name="HomeTeamName" />
                </div>
                <div class="related-item__delete related-item__selected__section">
                    <input name="HomeTeamId" class="related-item__data related-item__id" type="hidden" value="{{data}}" />
                    <button class="text-danger">@Html.Partial("_DeleteIcon", ("{{data}}", "Remove {{value}} from this match"))</button>
                </div>
            </div>
        </script>

        <div class="form-group related-item">
            @Html.LabelFor(m => Model.AwayTeamId)
            @if (Model.AwayTeamId.HasValue)
            {
                <div class="related-item__selected">
                    <div class="related-item__selected__section">
                        @Html.TextBoxFor(m => Model.AwayTeamName, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="related-item__delete related-item__selected__section">
                        @Html.HiddenFor(m => Model.AwayTeamId, new { @class = "related-item__data related-item__id" })
                        <button class="text-danger">@Html.Partial("_DeleteIcon", (Model.AwayTeamId.Value.ToString(), $"Remove {Model.AwayTeamName} from this match"))</button>
                    </div>
                </div>
                Model.AwayTeamName = string.Empty;
                @Html.TextBoxFor(m => Model.AwayTeamName, new
                {
                    @class = "form-control related-item__search",
                    placeholder = "Type the away team name",
                    autocomplete = "off",
                    type = "search",
                    data_url = "/api/teams/autocomplete",
                    data_template = "away-team-template",
                    aria_label = "Type a team name add and press down arrow to select from the matching choices",
                    disabled = "disabled"
                })
            }
            else
            {
                @Html.TextBoxFor(m => Model.AwayTeamName, new
                {
                    @class = "form-control related-item__search",
                    placeholder = "Type the away team name",
                    autocomplete = "off",
                    type = "search",
                    data_url = "/api/teams/autocomplete",
                    data_template = "away-team-template",
                    aria_label = "Type a team name add and press down arrow to select from the matching choices"
                })
            }
        </div>
        <script type="text/x-template" id="away-team-template">
            <div class="related-item__selected">
                <div class="related-item__selected__section">
                    <input type="text" readonly="readonly" value="{{value}}" class="form-control" id="AwayTeamName" name="AwayTeamName" />
                </div>
                <div class="related-item__delete related-item__selected__section">
                    <input name="AwayTeamId" class="related-item__data related-item__id" type="hidden" value="{{data}}" />
                    <button class="text-danger">@Html.Partial("_DeleteIcon", ("{{data}}", "Remove {{value}} from this match"))</button>
                </div>
            </div>
        </script>

        <div class="form-group related-item">
            @Html.LabelFor(m => Model.MatchLocationName)
            @if (Model.MatchLocationId.HasValue)
            {
                <div class="related-item__selected">
                    <div class="related-item__selected__section">
                        @Html.TextBoxFor(m => Model.MatchLocationName, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="related-item__delete related-item__selected__section">
                        @Html.HiddenFor(m => Model.MatchLocationId, new { @class = "related-item__data related-item__id" })
                        <button class="text-danger">@Html.Partial("_DeleteIcon", (Model.MatchLocationId.Value.ToString(), $"Remove {Model.MatchLocationName} from this match"))</button>
                    </div>
                </div>
                Model.MatchLocationName = string.Empty;
                @Html.TextBoxFor(m => Model.MatchLocationName, new
                {
                    @class = "form-control related-item__search",
                    placeholder = "Type the ground or sports hall name",
                    autocomplete = "off",
                    type = "search",
                    data_url = "/api/locations/autocomplete",
                    data_template = "location-template",
                    aria_label = "Type a ground or sports hall name add and press down arrow to select from the matching choices",
                    disabled = "disabled"
                })
            }
            else
            {
                @Html.TextBoxFor(m => Model.MatchLocationName, new
                {
                    @class = "form-control related-item__search",
                    placeholder = "Type the ground or sports hall name",
                    autocomplete = "off",
                    type = "search",
                    data_url = "/api/locations/autocomplete",
                    data_template = "location-template",
                    aria_label = "Type a ground or sports hall name add and press down arrow to select from the matching choices"
                })
            }
        </div>
        <script type="text/x-template" id="location-template">
            <div class="related-item__selected">
                <div class="related-item__selected__section">
                    <input type="text" readonly="readonly" value="{{value}}" class="form-control" id="MatchLocationName" name="MatchLocationName" />
                </div>
                <div class="related-item__delete related-item__selected__section">
                    <input name="MatchLocationId" class="related-item__data related-item__id" type="hidden" value="{{data}}" />
                    <button class="text-danger">@Html.Partial("_DeleteIcon", ("{{data}}", "Remove {{value}} from this match"))</button>
                </div>
            </div>
        </script>

        <div class="form-group">
            @Html.LabelFor(m => Model.Match.MatchNotes)
            @Html.TextAreaFor(m => Model.Match.MatchNotes, new { @class = "form-control", aria_describedby = "notes-validation" })
            @Html.ValidationMessageFor(m => Model.Match.MatchNotes, null, new { id = "notes-validation" })
        </div>

        <button class="btn btn-primary">Save match</button>
    }
}
else
{
    @Html.Partial("_Login")
}