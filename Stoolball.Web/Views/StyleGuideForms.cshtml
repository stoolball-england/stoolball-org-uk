@using Umbraco.Forms.Web.Extensions
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<StyleGuide>
@await Html.PartialAsync("_JQueryValidate")
@await Html.PartialAsync("_JQueryAutocomplete")
@await Html.PartialAsync("_RelatedItems")
@await Html.PartialAsync("_TinyMCE")
@{
    SmidgeHelper.RequiresJs(new JavaScriptFile("~/js/related-item.js") { Order = 100 });

    SmidgeHelper.RequiresCss(new CssFile("~/css/account.min.css") { Order = 100 });
}
<div class="container-xl">
    <h1 data-show-consent="true">@Model.Name</h1>
    <ul class="nav nav-tabs nav-tabs-has-add nav-tabs-has-edit">
        <li class="nav-item">
            <a class="nav-link" href="@Umbraco.AssignedContentItem.Url()">Umbraco content</a>
        </li>
        <li class="nav-item">
            <em class="nav-link active">Forms</em>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Umbraco.AssignedContentItem.Url()?alttemplate=styleguidestoolballdata">Stoolball data</a>
        </li>
    </ul>
    @Html.GetBlockListHtml(Model, "blockListForm")
    <h2>Custom forms</h2>
    <form>
        <div class="validation-summary-errors">
            <ul>
                <li>ASP.NET model-level validation error</li>
            </ul>
        </div>
        <p class="validation-summary-errors">Custom display of an error not from a validator.</p>
        <div class="form-group">
            <label for="unvalidated-text-field">Unvalidated text field</label>
            <input aria-describedby="form-name" class="form-control" id="unvalidated-text-field" name="unvalidated-text-field" required="required" type="text" value="" />
            <span class="field-validation-valid" data-valmsg-for="unvalidated-text-field" data-valmsg-replace="true" id="form-name"></span>
        </div>
        <div class="form-group">
            <label for="valid-text-field">Valid text field</label>
            <input aria-describedby="form-name valid-text-field-error" class="form-control is-valid" id="valid-text-field" name="valid-text-field" required="required" type="text" value="" />
            <span class="field-validation-valid" data-valmsg-for="valid-text-field" data-valmsg-replace="true" id="form-name"></span>
        </div>
        <div class="form-group">
            <label for="invalid-text-field">Invalid text field</label>
            <input aria-describedby="form-email invalid-text-field-error" autocapitalize="off" autocorrect="off" class="form-control input-validation-error" data-val="true" data-val-required="The field is required." id="invalid-text-field" name="invalid-text-field" required="required" type="text" value="" autocomplete="off" />
            <span class="field-validation-error" data-valmsg-for="invalid-text-field" data-valmsg-replace="true" id="form-email"><span id="invalid-text-field-error" class="">The text field is required.</span></span>
        </div>
        <div class="form-group">
            <p class="form-label">Account picture</p>
            <div class="gravatar">
                <img src="https://s.gravatar.com/avatar/e3b84da4a85b8b6e897d5e04eb8b66ec?s=50" alt="Your account picture from gravatar.com" width="50" height="50" />
                <div>
                    <p>This is how a gravatar is displayed during editing.</p>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="unvalidated-text-field-with-help">Text field</label>
            <p class="form-text" id="form-text-help"><small>Help for the text field</small></p>
            <input aria-describedby="form-text form-text-help" class="form-control" data-val="true" data-val-required="The field is required." id="unvalidated-text-field-with-help" name="unvalidated-text-field-with-help" type="text" />
            <span class="field-validation-valid" data-valmsg-for="unvalidated-text-field-with-help" data-valmsg-replace="true" id="form-text"></span>
        </div>
        <div class="form-group">
            <label for="unvalidated-date-field">Unvalidated date field</label>
            <input aria-describedby="unvalidated-date-field-error" class="form-control" data-val="true" data-val-required="The date field is required." id="unvalidated-date-field" name="unvalidated-date-field" required="required" type="date" value="">
            <span class="field-validation-valid" data-valmsg-for="unvalidated-date-field" data-valmsg-replace="true" id="unvalidated-date-field-error"></span>
        </div>
        <div class="form-group">
            <label for="valid-date-field">Valid date field</label>
            <input aria-describedby="valid-date-field-error" class="form-control valid" data-val="true" data-val-required="The Match date field is required." id="valid-date-field" name="valid-date-field" required="required" type="date" value="" aria-invalid="false">
            <span class="field-validation-valid" data-valmsg-for="valid-date-field" data-valmsg-replace="true" id="valid-date-field-error"></span>
        </div>
        <div class="form-group">
            <label for="unvalidated-time-field">Time field</label>
            <input aria-describedby="unvalidated-time-field-error" class="form-control" id="unvalidated-time-field" name="unvalidated-time-field" type="time" value="">
            <span class="field-validation-valid" data-valmsg-for="unvalidated-time-field" data-valmsg-replace="true" id="unvalidated-time-field-error"></span>
        </div>
        <div class="form-group">
            <label for="valid-time-field">Valid time field</label>
            <input aria-describedby="valid-time-field-error" class="form-control valid" id="valid-time-field" name="valid-time-field" type="time" value="" aria-invalid="false">
            <span class="field-validation-valid" data-valmsg-for="valid-time-field" data-valmsg-replace="true" id="valid-time-field"></span>
        </div>
        <div class="form-group">
            <label for="unvalidated-dropdown-field">Unvalidated dropdown list</label>
            <select aria-describedby="unvalidated-dropdown-field-error" class="form-control" data-val="true" data-val-required="The dropdown field is required." id="unvalidated-dropdown-field" name="unvalidated-dropdown-field" required="required">
                <option selected="selected" value="33a0874e-5ae5-4352-b7b5-5bdb9a2d5358">Team A (selected)</option>
                <option value="1d963f9f-4e44-4995-af94-e7b916ad4bfe">Team B</option>
                <option value="a8d7798f-1b88-4a41-a3b5-f3df63662dea">Team C</option>
            </select>
            <span class="field-validation-valid" data-valmsg-for="unvalidated-dropdown-field" data-valmsg-replace="true" id="unvalidated-dropdown-field-error"></span>
        </div>
        <div class="form-group">
            <label for="valid-dropdown-field">Valid dropdown list</label>
            <select aria-describedby="valid-dropdown-field-error" class="form-control valid" data-val="true" data-val-required="The dropdown field is required." id="valid-dropdown-field" name="valid-dropdown-field" required="required" aria-invalid="false">
                <option selected="selected" value="33a0874e-5ae5-4352-b7b5-5bdb9a2d5358">Team A (selected)</option>
                <option value="1d963f9f-4e44-4995-af94-e7b916ad4bfe">Team B</option>
                <option value="a8d7798f-1b88-4a41-a3b5-f3df63662dea">Team C</option>
            </select>
            <span class="field-validation-valid" data-valmsg-for="valid-dropdown-field" data-valmsg-replace="true" id="valid-dropdown-field-error"></span>
        </div>
        <div class="form-group">
            <label for="unvalidated-email-field" class="form-control__facebook">Email field (with icon)</label>
            <input aria-describedby="form-email" autocapitalize="off" autocorrect="off" class="form-control" data-val="true" data-val-regex="Please enter a valid email address" id="unvalidated-email-field" name="unvalidated-email-field" required="required" type="email" value="" />
            <span class="field-validation-valid" data-valmsg-for="unvalidated-email-field" data-valmsg-replace="true" id="form-email"></span>
        </div>
        <div class="form-group">
            <label for="unvalidated-password-field">Password field</label>
            <input aria-describedby="form-password form-password-help" autocapitalize="off" autocorrect="off" class="form-control" data-val="true" data-val-required="The Password field is required." id="unvalidated-password-field" name="unvalidated-password-field" type="password" />
            <span class="field-validation-valid" data-valmsg-for="unvalidated-password-field" data-valmsg-replace="true" id="form-password"></span>
        </div>
        <div class="form-group">
            <label for="unvalidated-number-field">Number field</label>
            <input aria-describedby="unvalidated-number-field-validator" class="form-control" data-val="true" data-val-number="The field must be a number." id="unvalidated-number-field" name="unvalidated-number-field" type="number" value="10">
            <span class="field-validation-valid" data-valmsg-for="unvalidated-number-field" data-valmsg-replace="true" id="unvalidated-number-field-validator"></span>
        </div>
        <div class="form-group custom-control custom-checkbox">
            <input class="custom-control-input" data-val="true" data-val-required="The field is required." id="checkbox-not-checked" name="checkbox-not-checked" type="checkbox" value="true" />
            <label class="custom-control-label" for="checkbox-not-checked">Checkbox – not checked</label>
        </div>
        <div class="form-group custom-control custom-checkbox">
            <input class="custom-control-input" data-val="true" data-val-required="The field is required." id="checkbox-checked" name="checkbox-checked" type="checkbox" checked="checked" value="true" />
            <label class="custom-control-label" for="checkbox-checked">Checkbox – checked</label>
        </div>
        <fieldset class="form-group">
            <legend>Radio buttons</legend>
            <div class="custom-control custom-radio">
                <input checked="checked" class="custom-control-input" data-val="true" data-val-required="The field is required." id="radio-not-selected" name="radio" type="radio" value="1">
                <label for="radio-not-selected" class="custom-control-label">Radio button – not selected</label>
            </div>
            <div class="custom-control custom-radio">
                <input class="custom-control-input" id="radio-selected" name="radio" type="radio" value="2" checked="checked">
                <label for="radio-selected" class="custom-control-label">Radio button – selected</label>
            </div>
            <div class="form-group custom-control custom-checkbox">
                <input class="custom-control-input" id="checkbox-after-radios" name="checkbox-after-radios" type="checkbox" checked="checked" value="true" />
                <label class="custom-control-label" for="checkbox-after-radios">Checkbox – after radio buttons, in the fieldset</label>
            </div>
        </fieldset>
        <table class="table table-hover related-items">
            <thead class="thead-dark">
                <tr><th scope="col" colspan="2">Multiple related items</th></tr>
            </thead>
            <tbody>
                <tr class="related-item__selected">
                    <td class="related-item__selected__section"><div class="related-item__animate">Selected item</div></td>
                    <td class="related-item__delete related-item__selected__section">
                        <div class="related-item__animate">
                            <button class="btn-delete-icon">@await Html.PartialAsync("_DeleteIcon", "Remove item")</button>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        @Html.Label("team-autocomplete", "Add a team", new { @class = "sr-only" })
                        @Html.TextBox("team-autocomplete", string.Empty, new
                        {
                            @class = "form-control related-item__search",
                            placeholder = "Add a team",
                            autocomplete = "off",
                            type = "search",
                            data_url = "/api/teams/autocomplete",
                            data_template = "team-template",
                            aria_label = "Type a team name and press down arrow to select the team"
                        })
                    </td>
                </tr>
            </tbody>
        </table>
        <table class="table table-hover related-items related-items__create" data-related-item="team">
            <thead class="thead-dark">
                <tr><th scope="col">Multiple related items, with add option</th><th scope="col" colspan="2">Extra column</th></tr>
            </thead>
            <tbody>
                <tr class="related-item__selected">
                    <td class="related-item__selected__section"><div class="related-item__animate">Selected item</div></td>
                    <td class="related-item__selected__section"><div class="related-item__animate"><input type="text" placeholder="Extra input to show layout, not wired up" class="form-control" /></div></td>
                    <td class="related-item__delete related-item__selected__section">
                        <div class="related-item__animate">
                            <button class="btn-delete-icon">@await Html.PartialAsync("_DeleteIcon", "Remove item")</button>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="3">
                        @Html.Label("team-autocomplete", "Add a team", new { @class = "sr-only" })
                        @Html.TextBox("team-autocomplete", string.Empty, new
                        {
                            @class = "form-control related-item__search",
                            placeholder = "Add a team",
                            autocomplete = "off",
                            type = "search",
                            data_url = "/api/teams/autocomplete",
                            data_template = "team-template",
                            aria_label = "Type a team name and press down arrow to select the team"
                        })
                    </td>
                </tr>
            </tbody>
        </table>
        <script type="text/x-template" id="team-template">
            <table>
                <tr class="related-item__selected">
                    <td class="related-item__selected__section"><div class="related-item__animate">{{value}}</div></td>
                    <td class="related-item__selected__section"><div class="related-item__animate">Extra column</div></td>
                    <td class="related-item__delete related-item__selected__section">
                        <div class="related-item__animate">
                            <button class="btn-delete-icon">@await Html.PartialAsync("_DeleteIcon", "Remove {{value}}")</button>
                        </div>
                    </td>
                </tr>
            </table>
        </script>
        <div class="form-group related-item">
            <label for="Match_MatchLocation_PrimaryAddressableObjectName">Single related item</label>
            @Html.TextBox("Match.MatchLocation.PrimaryAddressableObjectName", string.Empty, new
          {
              @class = "form-control related-item__search",
              placeholder = "Type the ground or sports centre name",
              autocomplete = "off",
              type = "search",
              data_url = "/api/locations/autocomplete",
              data_template = "location-template",
              aria_label = "Type a ground or sports centre name add and press down arrow to select from the matching choices"
          })
        </div>
        <script type="text/x-template" id="location-template">
            <div class="single-related-item__selected">
                <div class="related-item__selected__section">
                    <input type="text" readonly="readonly" value="{{value}}" class="form-control" id="Match_MatchLocation_PrimaryAddressableObjectName" />
                </div>
                <div class="related-item__delete related-item__selected__section">
                    <button class="btn-delete-icon">@await Html.PartialAsync("_DeleteIcon", "Remove {{value}}")</button>
                </div>
            </div>
        </script>
        <div class="form-group">
            <label for="rich-text">Rich text editor</label>
            <textarea aria-describedby="rich-text-validation" class="form-control" cols="20" id="rich-text" name="rich-text" rows="2"></textarea>
            <span class="field-validation-valid" data-valmsg-for="rich-text" data-valmsg-replace="true" id="rich-text-validation"></span>
        </div>
        <div class="form-group">
            <label for="rich-text-with-help">Rich text editor with help</label>
            <p class="form-text" id="rich-text-help"><small>Help for the rich text editor.</small></p>
            <textarea aria-describedby="rich-text-with-help-validation rich-text-help" class="form-control" cols="20" id="rich-text-with-help" name="rich-text-with-help" rows="2"></textarea>
            <span class="field-validation-valid" data-valmsg-for="rich-text-with-help" data-valmsg-replace="true" id="rich-text-with-help-validation"></span>
        </div>
        <button class="btn btn-primary">Primary button</button>
        <button class="btn btn-primary" disabled="disabled">Primary button (disabled)</button>
        <button class="btn btn-secondary">Secondary button</button>
        <button class="btn btn-secondary" disabled="disabled">Secondary button (disabled)</button>
        <button class="btn btn-danger btn-delete">Delete button</button>
        <button class="btn btn-danger btn-delete" disabled="disabled">Delete button (disabled)</button>
    </form>
    <p>Paragraph below a button (outside the form).</p>
</div>

@section umbracoforms {
    @if (TempData["UmbracoForms"] != null)
    {
        foreach (var form in TempData.Get<List<Guid>>("UmbracoForms"))
        {
            @await Component.InvokeAsync("RenderFormScripts", new {formId = form, theme = "stoolball"})
        }
    }
}