@inherits UmbracoViewPage<SeasonViewModel>
@using Stoolball.Teams
@using Stoolball.Web.Competitions
@using Stoolball.Web.Competitions.Models
@using Stoolball.Security
@section head {
    <meta name="robots" content="noindex,follow" />
}
@await Html.PartialAsync("_JQueryValidate")
@await Html.PartialAsync("_JQueryAutocomplete")
@await Html.PartialAsync("_RelatedItems")
@{
    SmidgeHelper.RequiresCss(new CssFile("~/css/competitions.min.css"){ Order = 100 });
}
<div class="container-xl">
    <h1>Teams in the @Model.Season!.SeasonFullName()</h1>

    @if (Model.IsAuthorized[AuthorizedAction.EditCompetition])
    {
        using (Html.BeginUmbracoForm<EditSeasonTeamsSurfaceController>(nameof(EditSeasonTeamsSurfaceController.UpdateSeason)))
        {
            <table class="table table-hover related-items edit-season-teams-table">
                <thead class="thead-dark">
                    <tr><th scope="col">Teams</th><th scope="col" class="edit-season-teams-table__date-withdrew"><span class="related-items__if-not-empty">Date withdrew</span></th><th scope="col"></th></tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Season.Teams.Count; i++)
                    {
                        var displayName = Model.Season.Teams[i].Team.UntilYear.HasValue ? Model.Season.Teams[i].Team.TeamName + " (no longer active)" : Model.Season.Teams[i].Team.TeamName;
                        <tr class="related-item__selected">
                            <td class="related-item__selected__section"><div class="related-item__animate">@displayName</div></td>
                            <td class="related-item__selected__section"><div class="related-item__animate">
                                @Html.TextBoxFor(m => Model.Season.Teams[i].WithdrawnDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "related-item__data", aria_describedby= $"withdrawn-date-{i}", data_item = Model.Season.Teams[i].Team.TeamId })
                                @Html.ValidationMessageFor(m => Model.Season.Teams[i].WithdrawnDate, null, new { id = $"withdrawn-date-{i}" })
                            </div></td>
                            <td class="related-item__delete related-item__selected__section">
                                <div class="related-item__animate">
                                    @Html.Hidden($"Season.Teams[{i}].Team.TeamId", Model.Season.Teams[i].Team.TeamId, new { @class = "related-item__data related-item__id", data_item = Model.Season.Teams[i].Team.TeamId })
                                    @Html.Hidden($"Season.Teams[{i}].Team.TeamName", displayName, new { @class = "related-item__data", data_item = Model.Season.Teams[i].Team.TeamId })
                                    <button type="button" class="btn-delete-icon">@await Html.PartialAsync("_DeleteIcon", $"Remove {Model.Season.Teams[i].Team.TeamName} from this season")</button>
                                </div>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td colspan="3">
                            @Html.Label("team-autocomplete", "Add a team", new { @class = "sr-only" })
                            @Html.TextBox("team-autocomplete", string.Empty, new
                       {
                           @class = "form-control related-item__search",
                           placeholder = "Add a team",
                           autocomplete = "off",
                           type = "search",
                           data_url = $"/api/teams/autocomplete?teamType={TeamType.LimitedMembership.ToString()}&teamType={TeamType.Occasional.ToString()}&teamType={TeamType.Regular.ToString()}&teamType={TeamType.Representative.ToString()}&teamType={TeamType.SchoolAgeGroup.ToString()}&teamType={TeamType.SchoolClub.ToString()}&teamType={TeamType.SchoolOther.ToString()}",
                           data_template = "team-template",
                           aria_label = "Type a team name and press down arrow to select the team"
                       })
                        </td>
                    </tr>
                </tbody>
            </table>
            <script type="text/x-template" id="team-template">
            <table>
                <tr class="related-item__selected">
                    <td class="related-item__selected__section"><div class="related-item__animate">{{value}}</div></td>
                    <td class="related-item__selected__section"><div class="related-item__animate">
                        <input name="Season.Teams[0].WithdrawnDate" type="date" class="related-item__data" aria-describedby="withdrawn-date-[0]" data-item="{{data}}" />
                        <span class="field-validation-valid" data-valmsg-for="Season.Teams[0].WithdrawnDate" data-valmsg-replace="true" id="withdrawn-date-[0]"></span>
                    </div></td>
                    <td class="related-item__delete related-item__selected__section">
                        <div class="related-item__animate">
                            <input name="Season.Teams[0].Team.TeamId" class="related-item__data related-item__id" type="hidden" value="{{data}}" data-item="{{data}}" />
                            <input name="Season.Teams[0].Team.TeamName" class="related-item__data" type="hidden" value="{{value}}" data-item="{{data}}" />
                            <button type="button" class="btn-delete-icon">@await Html.PartialAsync("_DeleteIcon", "Remove {{value}} from this season")</button>
                        </div>
                    </td>
            </tr>
            </table>
            </script>

            <button class="btn btn-primary">Save teams</button>
        }
    }
    else
    {
        @await Html.PartialAsync("_Login")
    }
</div>