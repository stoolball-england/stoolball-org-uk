@inherits Umbraco.Web.Mvc.UmbracoViewPage<SeasonViewModel>
@using ClientDependency.Core.Mvc
@using Stoolball.Teams
@using Stoolball.Web.Competitions
@using Stoolball.Security
@section head {
    <meta name="robots" content="noindex,follow" />
}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("~/scripts/jquery.validate.min.js");
    Html.RequiresJs("~/scripts/jquery.validate.unobtrusive.min.js");

    Html.RequiresJs("~/js/libs/jquery.autocomplete.min.js", 50);
    Html.RequiresCss("~/css/autocomplete.min.css");

    Html.RequiresCss("~/css/related-items.min.css");
    Html.RequiresJs("~/js/related-items.js");

    Html.RequiresCss("~/competitions/competitions.min.css");
}
<div class="container-xl">
    <h1>Teams in the @Model.Season.SeasonFullName()</h1>

    @if (Model.IsAuthorized[AuthorizedAction.EditCompetition])
    {
        using (Html.BeginUmbracoForm<EditSeasonTeamsSurfaceController>
            ("UpdateSeason"))
        {
            @Html.AntiForgeryToken()

            <table class="table table-hover related-items edit-season-teams-table">
                <thead class="thead-dark">
                    <tr><th scope="col">Teams</th><th scope="col">Date withdrew</th><th scope="col"></th></tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Season.Teams.Count; i++)
                    {
                        var displayName = Model.Season.Teams[i].Team.UntilYear.HasValue ? Model.Season.Teams[i].Team.TeamName + " (no longer active)" : Model.Season.Teams[i].Team.TeamName;
                        <tr>
                            <td class="related-item__selected__section"><div class="related-item__animate">@displayName</div></td>
                            <td class="related-item__selected__section"><div class="related-item__animate">
                                @Html.TextBoxFor(m => Model.Season.Teams[i].WithdrawnDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "related-item__data", aria_describedby= $"withdrawn-date-{i}", data_item = Model.Season.Teams[i].Team.TeamId })
                                @Html.ValidationMessageFor(m => Model.Season.Teams[i].WithdrawnDate, null, new { id = $"withdrawn-date-{i}" })
                            </div></td>
                            <td class="related-item__delete related-item__selected__section">
                                <div class="related-item__animate">
                                    @Html.Hidden($"Season.Teams[{i}].Team.TeamId", Model.Season.Teams[i].Team.TeamId, new { @class = "related-item__data related-item__id", data_item = Model.Season.Teams[i].Team.TeamId })
                                    @Html.Hidden($"Season.Teams[{i}].Team.TeamName", displayName, new { @class = "related-item__data", data_item = Model.Season.Teams[i].Team.TeamId })
                                    <button type="button" class="btn-delete-icon">@Html.Partial("_DeleteIcon", $"Remove {Model.Season.Teams[i].Team.TeamName} from this season")</button>
                                </div>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td colspan="3">
                            @Html.Label("team-autocomplete", "Add a team", new { @class = "sr-only" })
                            @Html.TextBox("team-autocomplete", string.Empty, new
                            {
                                @class = "form-control related-item__search",
                                placeholder = "Add a team",
                                autocomplete = "off",
                                type = "search",
                                data_url = $"/api/teams/autocomplete?teamType={TeamType.ClosedGroup.ToString()}&teamType={TeamType.Occasional.ToString()}&teamType={TeamType.Regular.ToString()}&teamType={TeamType.Representative.ToString()}&teamType={TeamType.SchoolAgeGroup.ToString()}&teamType={TeamType.SchoolClub.ToString()}&teamType={TeamType.SchoolOther.ToString()}",
                                data_template = "team-template",
                                aria_label = "Type a team name and press down arrow to select the team"
                            })
                        </td>
                    </tr>
                </tbody>
            </table>
            <script type="text/x-template" id="team-template">
            <table>
                <tr>
                    <td class="related-item__selected__section"><div class="related-item__animate">{{value}}</div></td>
                    <td class="related-item__selected__section"><div class="related-item__animate">
                        <input name="Season.Teams[0].WithdrawnDate" type="date" class="related-item__data" aria-describedby="withdrawn-date-[0]" data-item="{{data}}" />
                        <span class="field-validation-valid" data-valmsg-for="Season.Teams[0].WithdrawnDate" data-valmsg-replace="true" id="withdrawn-date-[0]"></span>
                    </div></td>
                    <td class="related-item__delete related-item__selected__section">
                        <div class="related-item__animate">
                            <input name="Season.Teams[0].Team.TeamId" class="related-item__data related-item__id" type="hidden" value="{{data}}" data-item="{{data}}" />
                            <input name="Season.Teams[0].Team.TeamName" class="related-item__data" type="hidden" value="{{value}}" data-item="{{data}}" />
                            <button type="button" class="btn-delete-icon">@Html.Partial("_DeleteIcon", "Remove {{value}} from this season")</button>
                        </div>
                    </td>
            </tr>
            </table>
            </script>

            <button class="btn btn-primary">Save teams</button>
        }
    }
    else
    {
        @Html.Partial("_Login")
    }
</div>