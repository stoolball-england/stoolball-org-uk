@model MatchInnings
@using Stoolball.Matches
@if (Model.BowlingFigures.Count > 0)
{
    <table class="bowling-scorecard bowling-figures table-hover table-as-cards table-as-cards-reset-sm">
        <caption>@Model.BowlingTeam.Team.TeamName's bowling</caption>
        <thead>
            <tr>
                <th scope="col">Bowler</th>
                <th scope="col" class="numeric">Overs</th>
                <th scope="col" class="numeric">Maidens</th>
                <th scope="col" class="numeric">Runs</th>
                <th scope="col" class="numeric">Wickets</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bowler in Model.BowlingFigures)
            {
                <tr>
                    <th scope="row" class="player-name">@bowler.Bowler.PlayerIdentityName</th>
                    <td class="numeric" data-stackable="true"><span class="table-as-cards__label" aria-hidden="true">Overs</span><span class="scorecard__numeric-value">@bowler.Overs</span></td>
                    <td class="numeric" data-stackable="true"><span class="table-as-cards__label" aria-hidden="true">Maidens</span><span class="scorecard__numeric-value">@bowler.Maidens</span></td>
                    <td class="numeric" data-stackable="true"><span class="table-as-cards__label" aria-hidden="true">Runs</span><span class="scorecard__numeric-value">@bowler.RunsConceded</span></td>
                    <td class="numeric" data-stackable="true"><span class="table-as-cards__label" aria-hidden="true">Wickets</span><span class="scorecard__numeric-value">@bowler.Wickets</span></td>
                </tr>
            }
        </tbody>
    </table>
}
@if (Model.OversBowled.Count > 0)
{
    <table class="bowling-scorecard overs table-hover table-as-cards table-as-cards-reset-sm">
        <caption>@Model.BowlingTeam.Team.TeamName's bowling, over-by-over</caption>
        <thead>
            <tr>
                <th scope="col">Bowler</th>
                <th scope="col" class="numeric">Balls</th>
                <th scope="col" class="numeric">Wides</th>
                <th scope="col" class="numeric">No balls</th>
                <th scope="col" class="numeric">Runs</th>
                <th scope="col" class="numeric">Total</th>
            </tr>
        </thead>
        <tbody>
            @{
                var total = 0;
                foreach (var over in Model.OversBowled)
                {
                    if (over.RunsConceded.HasValue)
                    {
                        total += over.RunsConceded.Value;
                    }
                    <tr>
                        <th scope="row" class="player-name">@over.PlayerIdentity.PlayerIdentityName</th>
                        <td class="numeric" data-stackable="true"><span class="table-as-cards__label" aria-hidden="true">Balls</span><span class="scorecard__numeric-value">@over.BallsBowled</span></td>
                        <td class="numeric" data-stackable="true"><span class="table-as-cards__label" aria-hidden="true">Wides</span><span class="scorecard__numeric-value">@over.Wides</span></td>
                        <td class="numeric" data-stackable="true"><span class="table-as-cards__label" aria-hidden="true">No balls</span><span class="scorecard__numeric-value">@over.NoBalls</span></td>
                        <td class="numeric" data-stackable="true"><span class="table-as-cards__label" aria-hidden="true">Runs</span><span class="scorecard__numeric-value">@over.RunsConceded</span></td>
                        <td class="numeric" data-stackable="true"><span class="table-as-cards__label" aria-hidden="true">Total</span><span class="scorecard__numeric-value">@total</span></td>
                    </tr>
                }
            }
        </tbody>
    </table>
}