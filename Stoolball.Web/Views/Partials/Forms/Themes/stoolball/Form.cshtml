@using Umbraco.Forms.Core.Enums
@using Umbraco.Forms.Web
@using Umbraco.Forms.Web.Models
@using Umbraco.Forms.Web.Services
@using Umbraco.Forms.Core.Providers.FieldTypes

@model Umbraco.Forms.Web.Models.FormViewModel

@inject IFormThemeResolver FormThemeResolver

<div class="umbraco-forms-page">

    @if (string.IsNullOrEmpty(Model.CurrentPage.Caption) == false)
    {
        <h2 class="umbraco-forms-caption">@Model.CurrentPage.Caption</h2>
    }

    @if (Model.ShowValidationSummary)
    {
        @Html.ValidationSummary(false)
    }


    @foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets)
    {

            if (!string.IsNullOrEmpty(fs.Caption))
            {
                @:<section class="umbraco-forms-fieldset" id="@fs.Id" aria-labelledby="@fs.Id-label">
                <p class="h3" id="@fs.Id-label">@fs.Caption</p>
            }
            else
            {
                @:<div class="umbraco-forms-fieldset" id="@fs.Id">
            }

            <div class="row">

                @foreach (var c in fs.Containers)
                {
                    <div class="umbraco-forms-container @("col-md-" + c.Width)">

                        @foreach (FieldViewModel f in c.Fields)
                        {
                            bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;

                        <div class="form-group @Html.GetFormFieldWrapperClass(f.FieldTypeName) @f.CssClass" @{ if (hidden) { <text> style="display: none" </text>  } }>

                            @if (f.FieldType.GetType() != typeof(CheckBox) && f.FieldType.GetType() != typeof(RadioButtonList) && f.FieldType.GetType() != typeof(CheckBoxList))
                            {
                                if (!f.HideLabel)
                                {
                                    <label for="@f.Id" id="@f.Id-label" class="umbraco-forms-label">
                                        @f.Caption @if (f.ShowIndicator)
                                        {
                                            <span class="umbraco-forms-indicator">@Model.Indicator</span>
                                        }
                                    </label>
                                }

                                if (!string.IsNullOrEmpty(f.ToolTip) && f.FieldType.GetType() != typeof(DataConsent))
                                {
                                    <p class="form-text" id="@f.Id-tooltip"><small>@f.ToolTip</small></p>
                                }
                            }
                            @if (f.FieldType.GetType() == typeof(RadioButtonList) || f.FieldType.GetType() == typeof(CheckBoxList))
                            {
                                @:<fieldset>
                                if (!f.HideLabel || !string.IsNullOrEmpty(f.ToolTip))
                                {
                                    <legend id="@f.Id-label" class="umbraco-forms-label">
                                    @if (!f.HideLabel)
                                    {
                                        <p class="@(string.IsNullOrEmpty(f.ToolTip) ? "mb-0" : "mb-2")">
                                            @f.Caption
                                            @if (f.ShowIndicator)
                                            {
                                            <span class="umbraco-forms-indicator">@Model.Indicator</span>
                                            }
                                        </p>
                                    }
                                    @if (!string.IsNullOrEmpty(f.ToolTip))
                                    {
                                        <p class="form-text" id="@f.Id-tooltip"><small>@f.ToolTip</small></p>
                                    }
                                    </legend>
                                }
                            }
                            <div class="umbraco-forms-field-wrapper">

                                @await Html.PartialAsync(FormThemeResolver.GetFieldView(Model, f), f)

                                @if (Model.ShowFieldValidaton)
                                {
                                    @Html.ValidationMessage(f.Id)
                                }

                            </div>
                            @if (f.FieldType.GetType() == typeof(RadioButtonList) || f.FieldType.GetType() == typeof(CheckBoxList))
                            {
                                @:</fieldset>
                            }

                        </div>
                        }

                    </div>
                }
            </div>
            if (!string.IsNullOrEmpty(fs.Caption))
            {
                @:</section>
            }
            else
            {
                @:</div>
            }
        }

    <input type="text" name="@Model.FormId.ToString().Replace("-", "")" class="umbraco-forms-formid" />


    <div class="umbraco-forms-navigation row-fluid">

        <div class="col-md-12">
            @if (Model.IsMultiPage)
            {
                if (!Model.IsFirstPage)
                {
                    <input class="btn prev cancel"
                           type="submit"
                           value="@Model.PreviousCaption"
                           name="__prev" />
                }

                if (!Model.IsLastPage)
                {
                    <button class="btn btn-secondary next" name="__next">@Model.NextCaption</button>
                }

                if (Model.IsLastPage)
                {
                    <button class="btn btn-primary" name="__next">@Model.SubmitCaption</button>
                }
            }
            else
            {
                <button class="btn btn-primary" name="__next">@Model.SubmitCaption</button>
            }
        </div>
    </div>
</div>

@await Html.PartialAsync("Forms/Themes/stoolball/ScrollToFormScript")