@inherits UmbracoViewPage<StatisticsViewModel>
@inject IStatisticsFilterHumanizer humanizer
@using Stoolball.Statistics
@using Stoolball.Teams
@using Stoolball.Web.Filtering
@using Stoolball.Web.Statistics.Models
@using Stoolball.Matches
@await Html.PartialAsync("_JQueryAutocomplete")
@await Html.PartialAsync("_RelatedItem")
@{
    SmidgeHelper.RequiresCss(new CssFile("/css/statistics.min.css") { Order = 100 });
    SmidgeHelper.RequiresJs(new JavaScriptFile("/js/filter.js") { Order = 100 });
    SmidgeHelper.RequiresCss(new CssFile("/css/filter.min.css") { Order = 100 });
    
    if (Model.DefaultFilter.Player != null)
    {
        Model.ShowPlayerColumn = Model.DefaultFilter.Player.AlternativeNames().Any();
        Model.LinkPlayer = false;
    }

    Model.FilterViewModel.SupportsTeamFilter = Model.DefaultFilter.Team == null;
}
@section canonical {@await Html.PartialAsync("_CanonicalUrl", new[] { "page" })}
@section head {
    @if (Model.AppliedFilter.Paging.PageNumber == 1)
    {
        <meta name="robots" content="index, nofollow">
    }
    else
    {
        <meta name="robots" content="noindex, nofollow">
    }
}
<div class="container-xl">
    @await Html.PartialAsync("_PlayerHeading", new PlayerHeadingViewModel { Heading = Model.Heading, AlternativeNames = Model.DefaultFilter.Player?.AlternativeNames() ?? new() })

    @await Html.PartialAsync("_StatisticsTip")
  
    <ul class="nav nav-tabs">
        <li class="nav-item nav-item-admin">
            <button type="button" class="nav-link nav-link-filter">Edit filter</button>
        </li>
    </ul>
    @await Html.PartialAsync("_Filters", Model.FilterViewModel)

    @if (Model.HasResults())
    {
        @if (Model.DefaultFilter.Player == null)
        {
            @await Html.PartialAsync("_StatisticsBasis")
        }
    }
    else
    {
        @await Html.PartialAsync("_NoData")
    }

    @if (Model.MinimumQualifyingInningsTemplate != null) 
    {
        <p>@Html.Raw(string.Format(Model.MinimumQualifyingInningsTemplate.ToHtmlString(), Model.AppliedFilter.MinimumQualifyingInnings))</p>
    }
    @if (Model.HasResults())
    {
        @await Html.PartialAsync(Model.PartialView)
    }
</div>