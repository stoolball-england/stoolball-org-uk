@model MatchInnings
@using Stoolball.Matches
@using Stoolball.Web.Matches
@using System.Globalization
@using Humanizer
@{
    // If no player innings, only show a minimal scorecard
    var minimalScorecard = !Model.PlayerInnings.Any();

    // If no total, wickets, or batters, don't show anything
    var nothingToDisplay = (minimalScorecard && !Model.Runs.HasValue && !Model.Wickets.HasValue);
    if (!nothingToDisplay)
    {
        <table class="table batting-scorecard">
            <caption>@Model.BattingTeam.Team.TeamName's batting</caption>

            @if (!minimalScorecard)
            {
                <thead>
                    <tr><th scope="col">Batter</th><th scope="col">How out</th><th scope="col">Bowler</th><th scope="col" class="numeric">Runs</th><th scope="col" class="numeric balls-faced-header">Balls</th></tr>
                </thead>
            }

            <tbody>
                @foreach (var playerInnings in Model.PlayerInnings)
                {
                    <tr>
                        <th class="player-name">@playerInnings.PlayerIdentity.PlayerIdentityName</th>
                        <td>
                            @if (playerInnings.DismissalType == DismissalType.NotOut)
                            {
                                <strong>@(playerInnings.DismissalType?.Humanize(LetterCasing.LowerCase))</strong>
                            }
                            else
                            {
                                @(playerInnings.DismissalType?.Humanize(LetterCasing.LowerCase).Replace("run out", "run-out") ?? "not known")
                            }
                            @if ((playerInnings.DismissalType == DismissalType.Caught || playerInnings.DismissalType == DismissalType.RunOut) && playerInnings.DismissedBy != null)
                            {
                                <span class="player-name">(@playerInnings.DismissedBy.PlayerIdentityName)</span>
                            }
                        </td>
                        <td class="player-name">
                            @if (playerInnings.Bowler != null)
                            {
                                @playerInnings.Bowler.PlayerIdentityName
                            }
                        </td>
                        <td class="numeric runs">
                            @playerInnings.RunsScored
                        </td>
                        <td class="numeric">
                            @if (playerInnings.BallsFaced.HasValue)
                            {
                                <span class="balls-faced">@playerInnings.BallsFaced</span>
                            }
                        </td>
                    </tr>
                }
                @{
                    if (Model.Byes.HasValue || !minimalScorecard)
                    {
                        @Html.Partial("_BattingScorecardExtrasRow", new ExtrasRowViewModel { RowLabel = "Byes", CssClass = "scorecard__extras", RowValue = Model.Byes?.ToString(CultureInfo.CurrentCulture), IsMinimalScorecard = minimalScorecard });
                    }
                    if (Model.Wides.HasValue || !minimalScorecard)
                    {
                        @Html.Partial("_BattingScorecardExtrasRow", new ExtrasRowViewModel { RowLabel = "Wides", CssClass = "scorecard__extras", RowValue = Model.Wides?.ToString(CultureInfo.CurrentCulture), IsMinimalScorecard = minimalScorecard });
                    }
                    if (Model.NoBalls.HasValue || !minimalScorecard)
                    {
                        @Html.Partial("_BattingScorecardExtrasRow", new ExtrasRowViewModel { RowLabel = "No balls", CssClass = "scorecard__extras", RowValue = Model.NoBalls?.ToString(CultureInfo.CurrentCulture), IsMinimalScorecard = minimalScorecard });
                    }
                    // don't show a 0 here, only if actual runs awarded or taken away
                    if (Model.BonusOrPenaltyRuns.HasValue && Model.BonusOrPenaltyRuns < 0)
                    {
                        @Html.Partial("_BattingScorecardExtrasRow", new ExtrasRowViewModel { RowLabel = "Penalty runs", CssClass = "scorecard__extras", RowValue = Model.BonusOrPenaltyRuns.Value.ToString(CultureInfo.CurrentCulture), IsMinimalScorecard = minimalScorecard });
                    }
                    else if (Model.BonusOrPenaltyRuns.HasValue && Model.BonusOrPenaltyRuns > 0)
                    {
                        @Html.Partial("_BattingScorecardExtrasRow", new ExtrasRowViewModel { RowLabel = "Bonus runs", CssClass = "scorecard__extras", RowValue = Model.BonusOrPenaltyRuns.Value.ToString(CultureInfo.CurrentCulture), IsMinimalScorecard = minimalScorecard });
                    }
                    @Html.Partial("_BattingScorecardExtrasRow", new ExtrasRowViewModel { RowLabel = "Total", CssClass = "scorecard__totals", RowValue = Model.Runs?.ToString(CultureInfo.CurrentCulture), IsMinimalScorecard = minimalScorecard });
                    @Html.Partial("_BattingScorecardExtrasRow", new ExtrasRowViewModel { RowLabel = "Wickets", CssClass = "scorecard__totals", RowValue = (Model.Wickets == -1) ? "all out" : Model.Wickets?.ToString(CultureInfo.CurrentCulture), IsMinimalScorecard = minimalScorecard });
                }
            </tbody>
        </table>
    }
}