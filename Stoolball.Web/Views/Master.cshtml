@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IHasViewMetadata>
@inject IHostEnvironment environment
@using Microsoft.Extensions.Hosting
@using Smidge.Models
@using Stoolball.Navigation
@{
    Layout = null;
    SmidgeHelper.RequiresCss(new CssFile("~/css/base.min.css") { Order = 1 });
    SmidgeHelper.RequiresJs(new JavaScriptFile("~/js/lib/purify.min.js") { Order = 1 });
    SmidgeHelper.RequiresJs(new JavaScriptFile("~/js/trusted-types-policy.js") { Order = 2 });
    SmidgeHelper.RequiresJs(new JavaScriptFile("~/js/register-service-worker.js") { Order = 2 });
    SmidgeHelper.RequiresJs(new JavaScriptFile("~/umbraco/lib/jquery/jquery.min.js") { Order = 3 }); // full jQuery rather than slim is required for jQuery autocomplete
    SmidgeHelper.CreateJsBundle("popper").RequiresJs(new JavaScriptFile("~/js/lib/bootstrap/popper.min.js") { Order = 4 });
    SmidgeHelper.RequiresJs(new JavaScriptFile("~/js/lib/bootstrap/util.js") { Order = 5 });
    SmidgeHelper.RequiresJs(new JavaScriptFile("~/js/lib/bootstrap/dropdown.js") { Order = 6 });
    SmidgeHelper.RequiresJs(new JavaScriptFile("~/js/consent.js"){ Order = 20 });
    if (!string.IsNullOrEmpty(Model.Stylesheet))
    {
        SmidgeHelper.RequiresCss(new CssFile($"~/css/{Model.Stylesheet}.min.css") { Order = 100 });
    }

    if (Model.Breadcrumbs.Count() == 0)
    {
        var breadcrumb = Umbraco.AssignedContentItem.Parent;
        while (breadcrumb != null)
        {
            Model.Breadcrumbs.Insert(0, new Breadcrumb
            {
                Name = breadcrumb.Name,
                Url = new Uri(breadcrumb.Url(), UriKind.Relative)
            });
            breadcrumb = breadcrumb.Parent;
        }
    }
}
<!DOCTYPE html>
<html dir="ltr" lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@Model.Metadata.PageTitle – Stoolball England</title>
    @if (!string.IsNullOrWhiteSpace(Model.Metadata.Description))
    {
        <meta name="description" content="@Model.Metadata.Description" />
    }
    <link rel="manifest" href="~/Status/offline.json" />
    <link rel="icon" type="image/svg+xml" href="~/images/logos/stoolball-england-icon.svg" />
    <link rel="alternate icon" href="~/favicon.ico" />
    <link rel="preload" href="/fonts/mada-v9-latin-regular.woff2" as="font" type="font/woff2" crossorigin="" />
    <link rel="preload" href="/fonts/mada-v9-latin-700.woff2" as="font" type="font/woff2" crossorigin="" />
    <link rel="preload" href="/fonts/assistant-v6-latin-600.woff2" as="font" type="font/woff2" crossorigin="" />
    <link rel="preload" href="/fonts/assistant-v6-latin-700.woff2" as="font" type="font/woff2" crossorigin="" />
    @RenderSection("canonical", required: false)
    @if (!IsSectionDefined("canonical")) {@await Html.PartialAsync("_CanonicalUrl", Array.Empty<string>())}
    @RenderSection("head", false)
    @await SmidgeHelper.CssHereAsync(debug: environment.EnvironmentName == Environments.Development)
</head>
<body>
    <a href="#main" class="skip-to-content sr-only sr-only-focusable"><span>Skip to content</span></a>
    @await Component.InvokeAsync("Header", Model)
    @await Html.PartialAsync("_Breadcrumb", Model.Breadcrumbs)
    <main id="main">
        @RenderBody()
    </main>
    @await Html.PartialAsync("_Footer")
    @await SmidgeHelper.JsHereAsync("popper")
    @await SmidgeHelper.JsHereAsync(debug: environment.EnvironmentName == Environments.Development)
    @RenderSection("umbracoforms", false)
    @if (Context.Request.Host.Host != "localhost")
    {
        <script defer src='https://static.cloudflareinsights.com/beacon.min.js'
            data-cf-beacon='{"token": "4b73271c7ec547e2a9ccec95f25bed28"}'></script>
    }
</body>

</html>