@inherits UmbracoViewPage<PersonalDetails>
@inject Stoolball.Email.IEmailProtector emailProtector
@inject IMemberManager memberManager
@using Stoolball.Web.Account
@using Umbraco.Cms.Core.Security
@using Umbraco.Cms.Core.Strings
@await Html.PartialAsync("_JQueryValidate")
@{
    var currentMemberName = (await memberManager.GetCurrentMemberAsync())?.Name; // GetCurrentMemberAsync() returns null when the member has just confirmed their new email address in another tab
}
<div class="container-xl">
    <h1>@Model.Name</h1>

    @if (User.Identity?.IsAuthenticated ?? false)
    {
        if (TempData["Success"] == null)
        {
            using (Html.BeginUmbracoForm<PersonalDetailsSurfaceController>("UpdatePersonalDetails"))
            {
                var formData = new PersonalDetailsFormData();
                formData.Name = currentMemberName;

                <div class="form-group">
                    @Html.LabelFor(m => formData.Name)
                    @Html.TextBoxFor(m => formData.Name, new { @class = "form-control", required = "required", aria_describedby = "form-name", autocomplete="name" })
                    @Html.ValidationMessageFor(m => formData.Name, null, new { id = "form-name" })
                </div>

                <button class="btn btn-primary">@Model.Value("saveButton")</button>
            }
        }
        else
        {
            @Html.ProtectEmailAddresses(emailProtector, Model.Value<IHtmlEncodedString>("saved"))
        }
    }
    else
    {
        @await Html.PartialAsync("_Login")
    }
</div>