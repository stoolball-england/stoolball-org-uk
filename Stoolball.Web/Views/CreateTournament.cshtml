@inherits Umbraco.Web.Mvc.UmbracoViewPage<EditTournamentViewModel>
@using ClientDependency.Core.Mvc
@using Stoolball.Web.Matches
@using Stoolball.Security
@section head {
    <meta name="robots" content="noindex,follow" />
}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("~/scripts/jquery.validate.min.js");
    Html.RequiresJs("~/scripts/jquery.validate.unobtrusive.min.js");

    Html.RequiresJs("~/js/libs/jquery.autocomplete.min.js", 50);
    Html.RequiresCss("~/css/autocomplete.min.css");

    Html.RequiresCss("~/css/related-items.min.css");
    Html.RequiresJs("~/js/related-item.js");

    Html.RequiresJs("/umbraco/lib/tinymce/tinymce.min.js", 90);
    Html.RequiresJs("/js/tinymce.js");

    var h1 = string.Empty;
    if (Model.Team != null)
    {
        h1 = $"Add a tournament for {Model.Team.TeamName}";
    }
    else if (Model.Season != null)
    {
        h1 = $"Add a tournament in the {Model.Season.SeasonFullName()}";
    }
}
<div class="container-xl">
    <h1>@h1</h1>

    @if (Model.IsAuthorized[AuthorizedAction.CreateTournament])
    {
        using (Html.BeginUmbracoForm<CreateTournamentSurfaceController>
            ("CreateTournament"))
        {
            <button class="sr-only">Save tournament</button>
            @Html.Partial("_CreateOrEditTournament")
            <button class="btn btn-primary">Save tournament</button>
        }
    }
    else
    {
        @Html.Partial("_Login")
    }
</div>