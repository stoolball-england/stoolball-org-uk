@inherits UmbracoViewPage<LinkedPlayersViewModel>
@using Stoolball.Security
@using Stoolball.Web.Statistics.Models;
@using Stoolball.Web.Teams
@using Stoolball.Web.Teams.Models
@using Umbraco.Cms.Web.Website.Controllers
@section head {
    <meta name="robots" content="noindex,follow" />
}
@{
    Model.LinkedByMemberLabel = "Player";
    Model.LinkedByTeamLabel = "Team";
    Model.LinkedByStoolballEnglandLabel = "Stoolball England";
    Model.AddIdentitiesFromTeamId = Model.ContextIdentity?.Team?.TeamId;
    Model.CanUnlinkIdentitiesLinkedByTeam = true;
    Model.ShowLinkedIdentityInTable = false;
}
@await Html.PartialAsync("_JQueryValidate")
@await Html.PartialAsync("_JQueryAutocomplete")
@await Html.PartialAsync("_RelatedItems")
@await Html.PartialAsync("_Forms")
<div class="container-xl">
    <h1>Link @Model.ContextIdentity?.PlayerIdentityName to the same player listed under another name</h1>

    @if (Model.Authorization.CurrentMemberIsAuthorized[AuthorizedAction.EditTeam])
    {
        <p>If a player changed their name or is listed with an incorrect spelling @* or played for multiple teams (for example, your mixed and ladies teams) *@,
           their statistics may be spread over multiple players.</p>
            
        <p>You should combine all the player pages into one, to tidy up the list of players in your team and to see their true statistics. </p>
        using (Html.BeginUmbracoForm<LinkedPlayersForIdentitySurfaceController>(nameof(LinkedPlayersForIdentitySurfaceController.UpdateLinkedPlayers)))
        {
            <partial name="_LinkedPlayers" model="Model" />
            <button class="btn btn-primary" type="submit">Save players</button>
            <p><a href="@Model.ContextIdentity?.Team?.TeamRoute/edit/players/@Model.ContextIdentity?.RouteSegment">Cancel</a></p>
        }
    }
    else
    {
        @await Html.PartialAsync("_Login")
    }
</div>