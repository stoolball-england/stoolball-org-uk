@inherits UmbracoViewPage<TeamViewModel>
@using Stoolball.Web.Security
@using Stoolball.Web.Teams.Models
@using Stoolball.Security
@section head {
    <meta name="robots" content="noindex,follow" />
}
<div class="container-xl">
    <h1>Edit @Model.Team!.TeamName</h1>

    @if (Model.Authorization.CurrentMemberIsAuthorized[AuthorizedAction.EditTeam] || Model.Authorization.CurrentMemberIsAuthorized[AuthorizedAction.DeleteTeam])
    {
        @await Html.PartialAsync("_AuthorizedMemberGroups", Model.Authorization)
        <dl>
            @if (Model.Authorization.CurrentMemberIsAuthorized[AuthorizedAction.EditTeam])
            {
                <dt><a href="@Model.Team.TeamRoute/edit/team">Edit @Model.Team.TeamName</a></dt>
                <dd>Set the introduction, type of team, home grounds and sports halls, cost to play, contact details and more.</dd>

                <dt><a href="@Model.Team.TeamRoute/edit/players">Edit players</a></dt>
                <dd>Rename players who have incomplete or misspelled names.</dd>
            }
            @if (Model.Authorization.CurrentMemberIsAuthorized[AuthorizedAction.DeleteTeam])
            {
                <dt><a href="@Model.Team.TeamRoute/delete">Delete @Model.Team.TeamName</a> @await Html.PartialAsync("_AdminOnly")</dt>
                <dd>Remove the team out of all competitions. Delete players and statistics, including for opposition teams.</dd>
            }
        </dl>
        @await Html.PartialAsync("_AuthorizedMembers", Model.Authorization)
    }
    else
    {
        @await Html.PartialAsync("_Login")
    }
</div>