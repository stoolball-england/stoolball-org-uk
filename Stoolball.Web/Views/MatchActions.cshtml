@inherits Umbraco.Web.Mvc.UmbracoViewPage<MatchViewModel>
@using Stoolball.Matches
@using Stoolball.Web.Matches
@section head {
    <meta name="robots" content="noindex,follow" />
}
<h1>Edit @Model.Match.MatchFullName(x => Model.DateTimeFormatter.FormatDate(x.LocalDateTime, false))</h1>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" href="@Model.Match.MatchRoute">Summary</a>
    </li>
    <li class="nav-item">
        <em class="nav-link active">Edit</em>
    </li>
</ul>

@if (Model.IsAuthorized)
{
<dl>
    @if (Model.Match.StartTime > DateTime.UtcNow)
    {
        switch (Model.Match.MatchType)
        {
            case MatchType.LeagueMatch:
                <dt><a href="@Model.Match.MatchRoute/edit/league">Edit @Model.Match.MatchFullName(x => Model.DateTimeFormatter.FormatDate(x.LocalDateTime, false))</a></dt>
                <dd>Set the date and time, teams, location and notes.</dd>
                break;
            case MatchType.KnockoutMatch:
                <dt><a href="@Model.Match.MatchRoute/edit/knockout">Edit @Model.Match.MatchFullName(x => Model.DateTimeFormatter.FormatDate(x.LocalDateTime, false))</a></dt>
                <dd>Set the date and time, teams, location and notes.</dd>
                break;
        }
    }
    <dt><a href="@Model.Match.MatchRoute/delete">Delete @Model.Match.MatchFullName(x => Model.DateTimeFormatter.FormatDate(x.LocalDateTime, false))</a></dt>
    <dd>Match statistics will be lost. Competition results may be changed. Players that only feature in this match will be deleted.</dd>
</dl>
}
else
{
    @Html.Partial("_Login")
}