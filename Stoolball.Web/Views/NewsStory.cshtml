@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<NewsStory>
@using Stoolball.Dates
@using Humanizer
@using Umbraco.Forms.Web.Extensions
@inject IDateTimeFormatter formatter
@{
    SmidgeHelper.RequiresCss(new CssFile("~/css/news.min.css") { Order = 100 });
    if (Model.BlockList?.Any(x => x.Content is FormElementType) ?? false)
    {
        @await Html.PartialAsync("_JQueryValidate")
        @await Html.PartialAsync("_TinyMCE")
    }
}
<div class="container-xl">
    <h1>@Model.Name</h1>
    <p class="news__date">@(formatter.FormatDate(Model.DisplayDate == DateTime.MinValue ? Model.CreateDate : Model.DisplayDate).Humanize(LetterCasing.Title))</p>
    @Html.GetBlockListHtml(Model, "blockList")
</div>

@section umbracoforms {
    @if (TempData["UmbracoForms"] != null)
    {
        foreach (var form in TempData.Get<List<Guid>>("UmbracoForms"))
        {
            @await Component.InvokeAsync("RenderFormScripts", new {formId = form, theme = "stoolball"})
        }
    }
}