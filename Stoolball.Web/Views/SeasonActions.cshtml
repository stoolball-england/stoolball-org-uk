@inherits UmbracoViewPage<SeasonViewModel>
@using Stoolball.Web.Competitions.Models
@using Stoolball.Security
@section head {
    <meta name="robots" content="noindex,follow" />
}
<div class="container-xl">
    <h1>Edit @Model.Season!.SeasonFullName()</h1>

    @if (Model.IsAuthorized[AuthorizedAction.EditCompetition] || Model.IsAuthorized[AuthorizedAction.DeleteCompetition])
    {
        <h2>Settings for @Model.Season.Competition.CompetitionName</h2>
        var competitionModel = new CompetitionViewModel(Model) { Competition = Model.Season.Competition };
        foreach (var permission in Model.IsAuthorized)
        {
            competitionModel.IsAuthorized.Add(permission.Key, permission.Value);
        }
        @await Html.PartialAsync("_CompetitionActions", competitionModel)

        <h2>Settings for the @Model.Season.SeasonName()</h2>
        if (Model.IsAuthorized[AuthorizedAction.EditCompetition])
        {
            <dl>
            <dt><a href="@Model.Season.SeasonRoute/edit/season">Edit the @Model.Season.SeasonName()</a></dt>
            <dd>Set the introduction, types of match played, players per team, overs per match and more.</dd>
            <dt><a href="@Model.Season.SeasonRoute/edit/teams">Teams in the @Model.Season.SeasonName()</a></dt>
            <dd>Set which teams are playing in the season.</dd>
            <dt><a href="@Model.Season.SeasonRoute/edit/table">Edit results table for the @Model.Season.SeasonName()</a></dt>
            <dd>Set whether to show a results table and, for leagues, how points are calculated.</dd>
            @if (Model.IsAuthorized[AuthorizedAction.DeleteCompetition])
            {
                <dt><a href="@Model.Season.SeasonRoute/delete">Delete the @Model.Season.SeasonName()</a> @await Html.PartialAsync("_AdminOnly")</dt>
                <dd>Lose the results of this season. Remove it from the details of matches and teams.</dd>
            }
            </dl>
        }
    }
    else
    {
        @await Html.PartialAsync("_Login")
    }
</div>