@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.ProductList>
@using ContentModels = Umbraco.Web.PublishedModels;
@using ClientDependency.Core.Mvc;
@using Umbraco.Core.Composing;
@using Stoolball.Email;
@{
    Html.RequiresJs("~/scripts/jquery.validate.min.js");
    Html.RequiresJs("~/scripts/jquery.validate.unobtrusive.min.js");

    Html.RequiresJs("/umbraco/lib/tinymce/tinymce.min.js", 90);
    Html.RequiresJs("/js/tinymce.js");

    var emailProtector = (IEmailProtector)Current.Factory.GetInstance(typeof(IEmailProtector));
}
<div class="container-xl">
    <h1>@Model.Name</h1>

    
    <div class="product-list__intro">
        <div>@Html.Raw(emailProtector.ProtectEmailAddresses(Model.Introduction.ToHtmlString(), User.Identity.IsAuthenticated))</div>
        <a href="https://shop.spreadshirt.co.uk/stoolball">            
            <img src="~/images/shop/spreadshirt.png" alt="Products from our gift shop" width="600" />
            <p class="btn btn-primary btn-lg">Visit our gift shop</p>
        </a>
    </div>

    @if (Model.Products.Any())
    {
        <ul class="tiles product-list">
            @Html.GetBlockListHtml(Model, "products", "BlockList")
        </ul>
    }
    @Html.Raw(emailProtector.ProtectEmailAddresses(Model.FurtherDetails.ToHtmlString(), User.Identity.IsAuthenticated))
    @if (Model.EnquiryForm != null)
    {
        @Umbraco.RenderMacro("renderUmbracoForm", new { FormGuid = Model.EnquiryForm, FormTheme = "stoolball", ExcludeScripts = "1" })
    }
</div>