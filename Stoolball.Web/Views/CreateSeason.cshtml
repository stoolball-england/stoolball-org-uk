@inherits Umbraco.Web.Mvc.UmbracoViewPage<SeasonViewModel>
@using ClientDependency.Core.Mvc
@using Stoolball.Web.Competitions
@{
    var the = Model.Season.Competition.CompetitionName.StartsWith("THE ", StringComparison.OrdinalIgnoreCase) ? string.Empty : "the ";
}
@section head {
    <meta name="robots" content="noindex,follow" />
}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("~/scripts/jquery.validate.min.js");
    Html.RequiresJs("~/scripts/jquery.validate.unobtrusive.min.js");

    Html.RequiresJs("/umbraco/lib/tinymce/tinymce.min.js", 90);
    Html.RequiresJs("/js/tinymce.js");
}

<h1>Add a season in @the@Model.Season.Competition.CompetitionName</h1>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" href="@Model.Season.Competition.CompetitionRoute">Summary</a>
    </li>
    <li class="nav-item">
        <em class="nav-link active">Edit</em>
    </li>
</ul>

@if (Model.IsAuthorized)
{
    using (Html.BeginUmbracoForm<CreateSeasonSurfaceController>
            ("CreateSeason"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(m => Model.Season.StartYear)
            @Html.TextBoxFor(m => Model.Season.StartYear, new { @class = "form-control", aria_describedby = "from-year", @type = "number" })
            @Html.ValidationMessageFor(m => Model.Season.StartYear, null, new { id = "from-year" })
        </div>

        <fieldset class="form-group">
            <legend>What year does it end?</legend>
            <div class="custom-control custom-radio">
                @Html.RadioButtonFor(m => Model.Season.EndYear, 0, new { @class = "custom-control-input", @id = "end-year-1" })
                <label for="end-year-1" class="custom-control-label">the same year (for example, April to September)</label>
            </div>
            <div class="custom-control custom-radio">
                @Html.RadioButtonFor(m => Model.Season.EndYear, 1, new { @class = "custom-control-input", @id = "end-year-2" })
                <label for="end-year-2" class="custom-control-label">the next year (for example, October to March)</label>
            </div>
            @Html.ValidationMessageFor(m => Model.Season.EndYear, null, new { id = "end-year-validation" })
        </fieldset>

        @Html.Partial("_CreateOrEditSeason")
    }
}
else
{
    @Html.Partial("_Login")
}