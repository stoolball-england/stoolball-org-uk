@inherits Umbraco.Web.Mvc.UmbracoViewPage<Stoolball.Web.Competitions.SeasonViewModel>
@using System.Linq
@using Stoolball.Competitions
@using Stoolball.Web.Competitions

<h1>@Model.Season.SeasonFullName()</h1>

@if (Model.Season.Competition.UntilDate.HasValue)
{
    <div class="alert alert-info">
        <p><strong>This competition isn't played any more.</strong></p>
    </div>
}

@Html.Raw(Model.Season.Competition.Introduction)
@Html.Raw(Model.Season.Introduction)

@if (Model.Season.Teams.Count > 0)
{
    <h2>Teams playing in the @Model.Season.SeasonName()</h2>
    @Html.Partial("_TeamList", Model.Season.Teams.Select(x => x.Team).ToList())
}

@Html.Raw(Model.Season.Results)

@if (!string.IsNullOrWhiteSpace(Model.Season.Competition.PublicContactDetails) || !string.IsNullOrWhiteSpace(Model.Season.Competition.Website))
{
    <h2>Contact details</h2>
    @Html.Raw(Model.Season.Competition.PublicContactDetails)

    if (!string.IsNullOrWhiteSpace(Model.Season.Competition.Website))
    {
        <p>Visit the <a href="@Model.Season.Competition.Website">@Model.Season.Competition.CompetitionName's website</a>.</p>
    }
}

@if (Model.Season.Competition.Seasons.Count > 0)
{
    var seasonListModel = new SeasonListViewModel
    {
        ShowCompetitionHeading = false
    };
    seasonListModel.Competitions.Add(Model.Season.Competition);
    <h2>Other seasons in the @Model.Season.Competition.CompetitionName</h2>
    @Html.Partial("_SeasonList", seasonListModel)
}