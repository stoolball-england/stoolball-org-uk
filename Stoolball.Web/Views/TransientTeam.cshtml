@inherits UmbracoViewPage<Stoolball.Web.Teams.Models.TeamViewModel>
@inject Stoolball.Dates.IDateTimeFormatter dateTimeFormatter
@using Stoolball.Security
@{ 
    var firstAndOnlyMatch = Model.Matches.Matches.First();
    var authorizedToEdit = Model.IsAuthorized[AuthorizedAction.EditTeam] || Model.IsAuthorized[AuthorizedAction.DeleteTeam];
}
@section head {
    <meta name="robots" content="noindex,follow" />
}
<div class="container-xl">
    <h1>@Model.Team!.TeamNameAndPlayerType(), @dateTimeFormatter.FormatDate(firstAndOnlyMatch.StartTime, false, false)</h1>

    @if (firstAndOnlyMatch.StartTime < DateTime.UtcNow)
    {
        <div class="alert alert-info">
            <p><strong>This team is no longer active.</strong></p>
        </div>
    }

    @* authorizedToEdit only needs to protect the "Edit team" tab, but currently there's no point having a tab bar if that's not visible *@
    @if (authorizedToEdit)
    {
        <ul class="nav nav-tabs@(authorizedToEdit ? " nav-tabs-has-edit" : string.Empty)">
            <li class="nav-item">
                <em class="nav-link active">Summary</em>
            </li>
            <li class="nav-item nav-item-admin">
                <a class="nav-link nav-link-edit" href="@Model.Team.TeamRoute/edit">Edit team</a>
            </li>
        </ul>
    }

    @Html.Raw(Model.Team.Introduction)

    <h2>When and where</h2>
    @{
        IHtmlContent? atLocation = null;
        if (Model.Team.MatchLocations.Count > 0)
        {
            atLocation = new HtmlString(" at <a href=\"" + Model.Team.MatchLocations.First().MatchLocationRoute + "\">" + Model.Team.MatchLocations.First().NameAndLocalityOrTownIfDifferent() + "</a>");
        }
    }

    @{ var verb = (firstAndOnlyMatch.StartTime < DateTime.UtcNow) ? "came" : "will come"; }
    <p>This team @verb together once to play in a tournament@(atLocation).</p>
    @await Html.PartialAsync("_MatchList", Model.Matches)

    @if (!string.IsNullOrWhiteSpace(Model.Team.Cost))
    {
        <h2>How much does it cost?</h2>
        @Html.Raw(Model.Team.Cost)
    }

    @if (!string.IsNullOrWhiteSpace(Model.Team.PublicContactDetails) || !string.IsNullOrWhiteSpace(Model.Team.Website))
    {
        <h2>Contact details</h2>
        @Html.Raw(Model.Team.PublicContactDetails)

        if (!string.IsNullOrWhiteSpace(Model.Team.Website))
        {
            <p>Visit <a href="@Model.Team.Website">@Model.Team.TeamName's website</a>.</p>
        }
    }

    @if (Model.Team.ClubMark)
    {
        @await Html.PartialAsync("_ClubMark")
    }
</div>