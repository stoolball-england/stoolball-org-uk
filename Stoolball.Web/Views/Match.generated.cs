#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 2 "..\..\Views\Match.cshtml"
    using ClientDependency.Core.Mvc;
    
    #line default
    #line hidden
    using Examine;
    
    #line 5 "..\..\Views\Match.cshtml"
    using Humanizer;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Views\Match.cshtml"
    using Innovative.SolarCalculator;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Views\Match.cshtml"
    using Stoolball.Matches;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Views\Match.cshtml"
    using Stoolball.Security;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Match.cshtml"
    using Stoolball.Web.Matches;
    
    #line default
    #line hidden
    using Umbraco.Core;
    using Umbraco.Core.Models;
    using Umbraco.Core.Models.PublishedContent;
    using Umbraco.Web;
    using Umbraco.Web.Mvc;
    using Umbraco.Web.PublishedModels;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Match.cshtml")]
    public partial class _Views_Match_cshtml : Umbraco.Web.Mvc.UmbracoViewPage<Stoolball.Web.Matches.MatchViewModel>
    {
        
        #line 15 "..\..\Views\Match.cshtml"
           
    private string ResultDescription()
    {
        var description = Model.Match.MatchResultType?.Humanize(LetterCasing.Sentence);
        if (Model.Match.MatchResultType == MatchResultType.HomeWin || Model.Match.MatchResultType == MatchResultType.HomeWinByForfeit)
        {
            var homeTeam = Model.Match.Teams.Where(x => x.TeamRole == TeamRole.Home).FirstOrDefault()?.Team;
            if (homeTeam != null)
            {
                description = description.Replace("Home", homeTeam.TeamName);
            }
        }
        if (Model.Match.MatchResultType == MatchResultType.AwayWin || Model.Match.MatchResultType == MatchResultType.AwayWinByForfeit)
        {
            var awayTeam = Model.Match.Teams.Where(x => x.TeamRole == TeamRole.Away).FirstOrDefault()?.Team;
            if (awayTeam != null)
            {
                description = description.Replace("Away", awayTeam.TeamName);
            }
        }
        if (!Model.Match.MatchResultType.HasValue)
        {
            description = "Unknown";
        }
        return description;
    }

        #line default
        #line hidden
        
        public _Views_Match_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 8 "..\..\Views\Match.cshtml"
  
    Html.RequiresCss("~/matches/match.min.css");
    Html.RequiresCss("~/matches/scorecards.min.css");
    Html.RequiresJs("~/matches/match.js");
    Html.RequiresCss("~/css/comments.min.css");
    var authorizedToEdit = Model.IsAuthorized[AuthorizedAction.EditMatch] || Model.IsAuthorized[AuthorizedAction.DeleteMatch];

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("<div");

WriteLiteral(" class=\"container-xl\"");

WriteLiteral(">\r\n    <h1>");

            
            #line 43 "..\..\Views\Match.cshtml"
   Write(Html.MatchFullName(Model.Match, x => Model.DateTimeFormatter.FormatDate(x, false)));

            
            #line default
            #line hidden
WriteLiteral("</h1>\r\n\r\n    ");

WriteLiteral("\r\n");

            
            #line 46 "..\..\Views\Match.cshtml"
    
            
            #line default
            #line hidden
            
            #line 46 "..\..\Views\Match.cshtml"
     if (authorizedToEdit)
    {

            
            #line default
            #line hidden
WriteLiteral("        <ul");

WriteAttribute("class", Tuple.Create(" class=\"", 1987), Tuple.Create("\"", 2064)
, Tuple.Create(Tuple.Create("", 1995), Tuple.Create("nav", 1995), true)
, Tuple.Create(Tuple.Create(" ", 1998), Tuple.Create("nav-tabs", 1999), true)
            
            #line 48 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 2007), Tuple.Create<System.Object, System.Int32>(authorizedToEdit ? " nav-tabs-has-edit" : string.Empty
            
            #line default
            #line hidden
, 2007), false)
);

WriteLiteral(">\r\n            <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n                <em");

WriteLiteral(" class=\"nav-link active\"");

WriteLiteral(">Summary</em>\r\n            </li>\r\n            <li");

WriteLiteral(" class=\"nav-item nav-item-admin\"");

WriteLiteral(">\r\n                <a");

WriteLiteral(" class=\"nav-link nav-link-edit\"");

WriteAttribute("href", Tuple.Create(" href=\"", 2279), Tuple.Create("\"", 2314)
            
            #line 53 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 2286), Tuple.Create<System.Object, System.Int32>(Model.Match.MatchRoute
            
            #line default
            #line hidden
, 2286), false)
, Tuple.Create(Tuple.Create("", 2309), Tuple.Create("/edit", 2309), true)
);

WriteLiteral(">Edit match</a>\r\n            </li>\r\n        </ul>\r\n");

            
            #line 56 "..\..\Views\Match.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n    <p>\r\n");

WriteLiteral("        ");

            
            #line 59 "..\..\Views\Match.cshtml"
   Write(Model.Match.MatchType.Humanize(LetterCasing.Sentence));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 60 "..\..\Views\Match.cshtml"
        
            
            #line default
            #line hidden
            
            #line 60 "..\..\Views\Match.cshtml"
         if (Model.Match.Teams.Count > 0)
        {
            
            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\Match.cshtml"
        Write(Model.Match.MatchType == MatchType.TrainingSession ? "for " : (Model.Match.Teams.Count > 1 ? "between " : "involving "));

            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\Match.cshtml"
                                                                                                                                      
            
            
            #line default
            #line hidden
            
            #line 63 "..\..\Views\Match.cshtml"
       Write(Html.Raw(Model.Match.Teams.Select(x => x.Team).ToList().Humanize(x => $"<a href=\"{Html.Encode(x.TeamRoute)}\">{Html.Encode(x.TeamName)}</a>")));

            
            #line default
            #line hidden
            
            #line 63 "..\..\Views\Match.cshtml"
                                                                                                                                                            
        }

            
            #line default
            #line hidden
WriteLiteral("    </p>\r\n\r\n    <p>\r\n        When:\r\n");

            
            #line 69 "..\..\Views\Match.cshtml"
        
            
            #line default
            #line hidden
            
            #line 69 "..\..\Views\Match.cshtml"
         if (Model.Match.Tournament != null)
        {
            var inTheTournament = (Model.Match.Tournament.TournamentName.StartsWith("THE ", StringComparison.OrdinalIgnoreCase)) ? ", in " : ", in the ";
            
            
            #line default
            #line hidden
            
            #line 72 "..\..\Views\Match.cshtml"
        Write(Model.Match.StartTimeIsKnown ? Model.DateTimeFormatter.FormatDateTime(Model.Match.StartTime) : Model.DateTimeFormatter.FormatDate(Model.Match.StartTime));

            
            #line default
            #line hidden
            
            #line 72 "..\..\Views\Match.cshtml"
                                                                                                                                                                       
            
            #line default
            #line hidden
            
            #line 72 "..\..\Views\Match.cshtml"
                                                                                                                                                                  Write(inTheTournament);

            
            #line default
            #line hidden
            
            #line 72 "..\..\Views\Match.cshtml"
                                                                                                                                                                                       

            
            #line default
            #line hidden
WriteLiteral("            <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3254), Tuple.Create("\"", 3300)
            
            #line 73 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 3261), Tuple.Create<System.Object, System.Int32>(Model.Match.Tournament.TournamentRoute
            
            #line default
            #line hidden
, 3261), false)
);

WriteLiteral(">");

            
            #line 73 "..\..\Views\Match.cshtml"
                                                         Write(Model.Match.Tournament.TournamentName);

            
            #line default
            #line hidden
WriteLiteral("</a>\r\n");

            
            #line 74 "..\..\Views\Match.cshtml"
        }
        else
        {
            
            
            #line default
            #line hidden
            
            #line 77 "..\..\Views\Match.cshtml"
        Write(Model.Match.StartTimeIsKnown ? Model.DateTimeFormatter.FormatDateTime(Model.Match.StartTime) : Model.DateTimeFormatter.FormatDate(Model.Match.StartTime));

            
            #line default
            #line hidden
            
            #line 77 "..\..\Views\Match.cshtml"
                                                                                                                                                                       
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 79 "..\..\Views\Match.cshtml"
         if (Model.Match.MatchLocation?.Latitude != null && Model.Match.MatchLocation?.Longitude != null)
        {
            var solarTimes = new SolarTimes(Model.Match.StartTime, Model.Match.MatchLocation.Latitude, Model.Match.MatchLocation.Longitude);

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral(" (sunset ");

            
            #line 82 "..\..\Views\Match.cshtml"
                  Write(Model.DateTimeFormatter.FormatTime(solarTimes.Sunset));

            
            #line default
            #line hidden
WriteLiteral(")\r\n");

            
            #line 83 "..\..\Views\Match.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 84 "..\..\Views\Match.cshtml"
         if (Model.Match.StartTime > DateTimeOffset.UtcNow && Model.Match.Tournament == null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <a");

WriteLiteral(" type=\"text/calendar\"");

WriteAttribute("href", Tuple.Create(" href=\"", 4054), Tuple.Create("\"", 4182)
, Tuple.Create(Tuple.Create("", 4061), Tuple.Create("webcal://", 4061), true)
            
            #line 86 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 4070), Tuple.Create<System.Object, System.Int32>(Request.Url.Host == "localhost" ? Request.Url.Authority : "www.stoolball.org.uk"
            
            #line default
            #line hidden
, 4070), false)
            
            #line 86 "..\..\Views\Match.cshtml"
                                                       , Tuple.Create(Tuple.Create("", 4153), Tuple.Create<System.Object, System.Int32>(Model.Match.MatchRoute
            
            #line default
            #line hidden
, 4153), false)
, Tuple.Create(Tuple.Create("", 4178), Tuple.Create(".ics", 4178), true)
);

WriteLiteral(" rel=\"nofollow\"");

WriteLiteral(" class=\"calendar__inline\"");

WriteLiteral(">Add to calendar</a>\r\n");

            
            #line 87 "..\..\Views\Match.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </p>\r\n\r\n\r\n");

            
            #line 91 "..\..\Views\Match.cshtml"
    
            
            #line default
            #line hidden
            
            #line 91 "..\..\Views\Match.cshtml"
     if (Model.Match.MatchLocation != null)
    {

            
            #line default
            #line hidden
WriteLiteral("        <p>Where: <a");

WriteAttribute("href", Tuple.Create(" href=\"", 4342), Tuple.Create("\"", 4394)
            
            #line 93 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 4349), Tuple.Create<System.Object, System.Int32>(Model.Match.MatchLocation.MatchLocationRoute
            
            #line default
            #line hidden
, 4349), false)
);

WriteLiteral(">");

            
            #line 93 "..\..\Views\Match.cshtml"
                                                                     Write(Model.Match.MatchLocation.NameAndLocalityOrTown());

            
            #line default
            #line hidden
WriteLiteral("</a></p>\r\n");

            
            #line 94 "..\..\Views\Match.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 96 "..\..\Views\Match.cshtml"
    
            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\Match.cshtml"
     if (Model.Match.StartTime <= DateTimeOffset.UtcNow && Model.Match.MatchType != MatchType.TrainingSession)
    {

            
            #line default
            #line hidden
WriteLiteral("        <p");

WriteLiteral(" class=\"match-result\"");

WriteLiteral("><strong>Result: ");

            
            #line 98 "..\..\Views\Match.cshtml"
                                           Write(ResultDescription());

            
            #line default
            #line hidden
WriteLiteral("</strong></p>\r\n");

            
            #line 99 "..\..\Views\Match.cshtml"

        var resultRequired = !Model.Match.MatchResultType.HasValue || !Model.Match.HasCompleteScorecard();
        if (Model.Match.Tournament == null) {

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"update-result\"");

WriteLiteral(">\r\n            <a");

WriteAttribute("class", Tuple.Create(" class=\"", 4875), Tuple.Create("\"", 4936)
, Tuple.Create(Tuple.Create("", 4883), Tuple.Create("btn", 4883), true)
, Tuple.Create(Tuple.Create(" ", 4886), Tuple.Create("btn-secondary", 4887), true)
            
            #line 103 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 4900), Tuple.Create<System.Object, System.Int32>(resultRequired ? " btn-lg" : null
            
            #line default
            #line hidden
, 4900), false)
);

WriteAttribute("href", Tuple.Create(" href=\"", 4937), Tuple.Create("\"", 4986)
            
            #line 103 "..\..\Views\Match.cshtml"
   , Tuple.Create(Tuple.Create("", 4944), Tuple.Create<System.Object, System.Int32>(Model.Match.MatchRoute
            
            #line default
            #line hidden
, 4944), false)
, Tuple.Create(Tuple.Create("", 4967), Tuple.Create("/edit/start-of-play", 4967), true)
);

WriteLiteral(">Edit result</a>\r\n        </div>\r\n");

            
            #line 105 "..\..\Views\Match.cshtml"
        }

        var tossWinners = Model.Match.Teams.FirstOrDefault(x => x.WonToss.HasValue && x.WonToss.Value);
        if (tossWinners != null)
        {
            var tossResult = tossWinners.Team.TeamName + " won the toss";
            if (Model.Match.InningsOrderIsKnown)
            {
                var choseTo = (tossWinners.MatchTeamId == Model.Match.MatchInnings.First().BattingTeam.MatchTeamId) ? "bat" : "bowl";
                tossResult += " and chose to " + choseTo;
            }

            
            #line default
            #line hidden
WriteLiteral("            <p>");

            
            #line 116 "..\..\Views\Match.cshtml"
          Write(tossResult);

            
            #line default
            #line hidden
WriteLiteral(".</p>\r\n");

            
            #line 117 "..\..\Views\Match.cshtml"
        }

        if (Model.Match.HasScorecard())
        {
            foreach (var innings in Model.Match.MatchInnings)
            {
                
            
            #line default
            #line hidden
            
            #line 123 "..\..\Views\Match.cshtml"
           Write(Html.Partial("_BattingScorecard", innings));

            
            #line default
            #line hidden
            
            #line 123 "..\..\Views\Match.cshtml"
                                                           
                
            
            #line default
            #line hidden
            
            #line 124 "..\..\Views\Match.cshtml"
           Write(Html.Partial("_BowlingScorecard", innings));

            
            #line default
            #line hidden
            
            #line 124 "..\..\Views\Match.cshtml"
                                                           
            }
        }
        else
        {
            if (Model.Match.InningsOrderIsKnown && tossWinners == null)
            {
                // Show the batting order, since it's not stated as part of the toss result and not implied by showing scorecards in order.
                var firstToBat = Model.Match.Teams.FirstOrDefault(x => x.MatchTeamId == Model.Match.MatchInnings.First().BattingTeam?.MatchTeamId);
                if (firstToBat != null)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <p>");

            
            #line 135 "..\..\Views\Match.cshtml"
                  Write(firstToBat.Team.TeamName);

            
            #line default
            #line hidden
WriteLiteral(" batted first.</p>\r\n");

            
            #line 136 "..\..\Views\Match.cshtml"
                }
            }
        }

        if (Model.Match.Awards.Any())
        {
            var currentAwardName = string.Empty;

            
            #line default
            #line hidden
WriteLiteral("            <dl");

WriteLiteral(" class=\"list-results__detail award-list\"");

WriteLiteral(">\r\n");

            
            #line 144 "..\..\Views\Match.cshtml"
                
            
            #line default
            #line hidden
            
            #line 144 "..\..\Views\Match.cshtml"
                 foreach (var award in Model.Match.Awards)
                {
                    if (award.Award.AwardName != currentAwardName)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <dt>");

            
            #line 148 "..\..\Views\Match.cshtml"
                       Write(award.Award.AwardName);

            
            #line default
            #line hidden
WriteLiteral("</dt>\r\n");

            
            #line 149 "..\..\Views\Match.cshtml"
                        currentAwardName = award.Award.AwardName;
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <dd>\r\n                        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 6962), Tuple.Create("\"", 7009)
            
            #line 152 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 6969), Tuple.Create<System.Object, System.Int32>(award.PlayerIdentity.Player.PlayerRoute
            
            #line default
            #line hidden
, 6969), false)
);

WriteLiteral(">");

            
            #line 152 "..\..\Views\Match.cshtml"
                                                                      Write(award.PlayerIdentity.PlayerIdentityName);

            
            #line default
            #line hidden
WriteLiteral("</a> (");

            
            #line 152 "..\..\Views\Match.cshtml"
                                                                                                                    Write(Model.Match.Teams.First(x => x.Team.TeamId == award.PlayerIdentity.Team.TeamId).Team.TeamName);

            
            #line default
            #line hidden
WriteLiteral(")\r\n");

            
            #line 153 "..\..\Views\Match.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 153 "..\..\Views\Match.cshtml"
                         if (!string.IsNullOrWhiteSpace(award.Reason))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            ");

WriteLiteral(" – ");

            
            #line 155 "..\..\Views\Match.cshtml"
                            Write(award.Reason.Humanize(LetterCasing.Sentence));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 156 "..\..\Views\Match.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </dd>\r\n");

            
            #line 158 "..\..\Views\Match.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </dl>\r\n");

            
            #line 160 "..\..\Views\Match.cshtml"
        }
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 163 "..\..\Views\Match.cshtml"
    
            
            #line default
            #line hidden
            
            #line 163 "..\..\Views\Match.cshtml"
     if (!string.IsNullOrWhiteSpace(Model.Match.MatchNotes))
    {

            
            #line default
            #line hidden
WriteLiteral("        <h2>Notes</h2>\r\n");

            
            #line 166 "..\..\Views\Match.cshtml"
        
            
            #line default
            #line hidden
            
            #line 166 "..\..\Views\Match.cshtml"
   Write(Html.Raw(Model.Match.MatchNotes));

            
            #line default
            #line hidden
            
            #line 166 "..\..\Views\Match.cshtml"
                                         
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 169 "..\..\Views\Match.cshtml"
Write(Html.Partial("_Comments", Model.Match.Comments));

            
            #line default
            #line hidden
WriteLiteral("\r\n</div>");

        }
    }
}
#pragma warning restore 1591
