#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 2 "..\..\Views\Match.cshtml"
    using ClientDependency.Core.Mvc;
    
    #line default
    #line hidden
    using Examine;
    
    #line 5 "..\..\Views\Match.cshtml"
    using Humanizer;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Views\Match.cshtml"
    using Innovative.SolarCalculator;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Views\Match.cshtml"
    using Stoolball.Matches;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Views\Match.cshtml"
    using Stoolball.Security;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Match.cshtml"
    using Stoolball.Web.Matches;
    
    #line default
    #line hidden
    using Umbraco.Core;
    using Umbraco.Core.Models;
    using Umbraco.Core.Models.PublishedContent;
    using Umbraco.Web;
    using Umbraco.Web.Mvc;
    using Umbraco.Web.PublishedModels;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Match.cshtml")]
    public partial class _Views_Match_cshtml : Umbraco.Web.Mvc.UmbracoViewPage<Stoolball.Web.Matches.MatchViewModel>
    {
        
        #line 14 "..\..\Views\Match.cshtml"
           
    private string ResultDescription()
    {
        var description = Model.Match.MatchResultType?.Humanize(LetterCasing.Sentence);
        if (Model.Match.MatchResultType == MatchResultType.HomeWin || Model.Match.MatchResultType == MatchResultType.HomeWinByForfeit)
        {
            var homeTeam = Model.Match.Teams.Where(x => x.TeamRole == TeamRole.Home).FirstOrDefault()?.Team;
            if (homeTeam != null)
            {
                description = description.Replace("Home", homeTeam.TeamName);
            }
        }
        if (Model.Match.MatchResultType == MatchResultType.AwayWin || Model.Match.MatchResultType == MatchResultType.AwayWinByForfeit)
        {
            var awayTeam = Model.Match.Teams.Where(x => x.TeamRole == TeamRole.Away).FirstOrDefault()?.Team;
            if (awayTeam != null)
            {
                description = description.Replace("Away", awayTeam.TeamName);
            }
        }
        if (!Model.Match.MatchResultType.HasValue)
        {
            description = "Unknown";
        }
        return description;
    }

        #line default
        #line hidden
        
        public _Views_Match_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 8 "..\..\Views\Match.cshtml"
  
    Html.RequiresCss("~/matches/match.min.css");
    Html.RequiresCss("~/matches/scorecards.min.css");
    Html.RequiresJs("~/matches/match.js");
    var authorizedToEdit = Model.IsAuthorized[AuthorizedAction.EditMatch] || Model.IsAuthorized[AuthorizedAction.DeleteMatch];

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("<div");

WriteLiteral(" class=\"container-xl\"");

WriteLiteral(">\r\n    <h1>");

            
            #line 42 "..\..\Views\Match.cshtml"
   Write(Html.MatchFullName(Model.Match, x => Model.DateTimeFormatter.FormatDate(x.LocalDateTime, false)));

            
            #line default
            #line hidden
WriteLiteral("</h1>\r\n\r\n    ");

WriteLiteral("\r\n");

            
            #line 45 "..\..\Views\Match.cshtml"
    
            
            #line default
            #line hidden
            
            #line 45 "..\..\Views\Match.cshtml"
     if (authorizedToEdit)
    {

            
            #line default
            #line hidden
WriteLiteral("        <ul");

WriteAttribute("class", Tuple.Create(" class=\"", 1952), Tuple.Create("\"", 2029)
, Tuple.Create(Tuple.Create("", 1960), Tuple.Create("nav", 1960), true)
, Tuple.Create(Tuple.Create(" ", 1963), Tuple.Create("nav-tabs", 1964), true)
            
            #line 47 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 1972), Tuple.Create<System.Object, System.Int32>(authorizedToEdit ? " nav-tabs-has-edit" : string.Empty
            
            #line default
            #line hidden
, 1972), false)
);

WriteLiteral(">\r\n            <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n                <em");

WriteLiteral(" class=\"nav-link active\"");

WriteLiteral(">Summary</em>\r\n            </li>\r\n            <li");

WriteLiteral(" class=\"nav-item nav-item-admin\"");

WriteLiteral(">\r\n                <a");

WriteLiteral(" class=\"nav-link nav-link-edit\"");

WriteAttribute("href", Tuple.Create(" href=\"", 2244), Tuple.Create("\"", 2279)
            
            #line 52 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 2251), Tuple.Create<System.Object, System.Int32>(Model.Match.MatchRoute
            
            #line default
            #line hidden
, 2251), false)
, Tuple.Create(Tuple.Create("", 2274), Tuple.Create("/edit", 2274), true)
);

WriteLiteral(">Edit match</a>\r\n            </li>\r\n        </ul>\r\n");

            
            #line 55 "..\..\Views\Match.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n    <p>\r\n");

WriteLiteral("        ");

            
            #line 58 "..\..\Views\Match.cshtml"
   Write(Model.Match.MatchType.Humanize(LetterCasing.Sentence));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 59 "..\..\Views\Match.cshtml"
        
            
            #line default
            #line hidden
            
            #line 59 "..\..\Views\Match.cshtml"
         if (Model.Match.Teams.Count > 0)
        {
            
            
            #line default
            #line hidden
            
            #line 61 "..\..\Views\Match.cshtml"
        Write(Model.Match.Teams.Count > 1 ? "between " : "involving ");

            
            #line default
            #line hidden
            
            #line 61 "..\..\Views\Match.cshtml"
                                                                      
            
            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\Match.cshtml"
       Write(Html.Raw(Model.Match.Teams.Select(x => x.Team).ToList().Humanize(x => $"<a href=\"{Html.Encode(x.TeamRoute)}\">{Html.Encode(x.TeamName)}</a>")));

            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\Match.cshtml"
                                                                                                                                                            
        }

            
            #line default
            #line hidden
WriteLiteral("    </p>\r\n\r\n    <p>\r\n        When:\r\n");

            
            #line 68 "..\..\Views\Match.cshtml"
        
            
            #line default
            #line hidden
            
            #line 68 "..\..\Views\Match.cshtml"
         if (Model.Match.Tournament != null)
        {
            var inTheTournament = (Model.Match.Tournament.TournamentName.StartsWith("THE ", StringComparison.OrdinalIgnoreCase)) ? ", in " : ", in the ";
            
            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Match.cshtml"
        Write(Model.Match.StartTimeIsKnown ? Model.DateTimeFormatter.FormatDateTime(Model.Match.StartTime.LocalDateTime) : Model.DateTimeFormatter.FormatDate(Model.Match.StartTime.LocalDateTime));

            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Match.cshtml"
                                                                                                                                                                                                   
            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Match.cshtml"
                                                                                                                                                                                              Write(inTheTournament);

            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Match.cshtml"
                                                                                                                                                                                                                   

            
            #line default
            #line hidden
WriteLiteral("            <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3183), Tuple.Create("\"", 3229)
            
            #line 72 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 3190), Tuple.Create<System.Object, System.Int32>(Model.Match.Tournament.TournamentRoute
            
            #line default
            #line hidden
, 3190), false)
);

WriteLiteral(">");

            
            #line 72 "..\..\Views\Match.cshtml"
                                                         Write(Model.Match.Tournament.TournamentName);

            
            #line default
            #line hidden
WriteLiteral("</a>\r\n");

            
            #line 73 "..\..\Views\Match.cshtml"
        }
        else
        {
            
            
            #line default
            #line hidden
            
            #line 76 "..\..\Views\Match.cshtml"
        Write(Model.Match.StartTimeIsKnown ? Model.DateTimeFormatter.FormatDateTime(Model.Match.StartTime.LocalDateTime) : Model.DateTimeFormatter.FormatDate(Model.Match.StartTime.LocalDateTime));

            
            #line default
            #line hidden
            
            #line 76 "..\..\Views\Match.cshtml"
                                                                                                                                                                                                   
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 78 "..\..\Views\Match.cshtml"
         if (Model.Match.MatchLocation?.Latitude != null && Model.Match.MatchLocation?.Longitude != null)
        {
            var solarTimes = new SolarTimes(Model.Match.StartTime.LocalDateTime, Model.Match.MatchLocation.Latitude, Model.Match.MatchLocation.Longitude);

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral(" (sunset ");

            
            #line 81 "..\..\Views\Match.cshtml"
                  Write(Model.DateTimeFormatter.FormatTime(solarTimes.Sunset));

            
            #line default
            #line hidden
WriteLiteral(")\r\n");

            
            #line 82 "..\..\Views\Match.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </p>\r\n\r\n");

            
            #line 85 "..\..\Views\Match.cshtml"
    
            
            #line default
            #line hidden
            
            #line 85 "..\..\Views\Match.cshtml"
     if (Model.Match.MatchLocation != null)
    {

            
            #line default
            #line hidden
WriteLiteral("        <p>Where: <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3968), Tuple.Create("\"", 4020)
            
            #line 87 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 3975), Tuple.Create<System.Object, System.Int32>(Model.Match.MatchLocation.MatchLocationRoute
            
            #line default
            #line hidden
, 3975), false)
);

WriteLiteral(">");

            
            #line 87 "..\..\Views\Match.cshtml"
                                                                     Write(Model.Match.MatchLocation.NameAndLocalityOrTown());

            
            #line default
            #line hidden
WriteLiteral("</a></p>\r\n");

            
            #line 88 "..\..\Views\Match.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 90 "..\..\Views\Match.cshtml"
    
            
            #line default
            #line hidden
            
            #line 90 "..\..\Views\Match.cshtml"
     if (Model.Match.StartTime <= DateTime.UtcNow)
    {

            
            #line default
            #line hidden
WriteLiteral("        <p");

WriteLiteral(" class=\"match-result\"");

WriteLiteral("><strong>Result: ");

            
            #line 92 "..\..\Views\Match.cshtml"
                                           Write(ResultDescription());

            
            #line default
            #line hidden
WriteLiteral("</strong></p>\r\n");

            
            #line 93 "..\..\Views\Match.cshtml"

        var resultRequired = !Model.Match.MatchResultType.HasValue || !Model.Match.HasCompleteScorecard();

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"update-result\"");

WriteLiteral(">\r\n            <a");

WriteAttribute("class", Tuple.Create(" class=\"", 4394), Tuple.Create("\"", 4455)
, Tuple.Create(Tuple.Create("", 4402), Tuple.Create("btn", 4402), true)
, Tuple.Create(Tuple.Create(" ", 4405), Tuple.Create("btn-secondary", 4406), true)
            
            #line 96 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 4419), Tuple.Create<System.Object, System.Int32>(resultRequired ? " btn-lg" : null
            
            #line default
            #line hidden
, 4419), false)
);

WriteAttribute("href", Tuple.Create(" href=\"", 4456), Tuple.Create("\"", 4505)
            
            #line 96 "..\..\Views\Match.cshtml"
   , Tuple.Create(Tuple.Create("", 4463), Tuple.Create<System.Object, System.Int32>(Model.Match.MatchRoute
            
            #line default
            #line hidden
, 4463), false)
, Tuple.Create(Tuple.Create("", 4486), Tuple.Create("/edit/start-of-play", 4486), true)
);

WriteLiteral(">Edit result</a>\r\n        </div>\r\n");

            
            #line 98 "..\..\Views\Match.cshtml"

        var tossWinners = Model.Match.Teams.FirstOrDefault(x => x.WonToss.HasValue && x.WonToss.Value);
        if (tossWinners != null)
        {
            var tossResult = tossWinners.Team.TeamName + " won the toss";
            if (Model.Match.InningsOrderIsKnown)
            {
                var choseTo = (tossWinners.MatchTeamId == Model.Match.MatchInnings.First().BattingTeam.MatchTeamId) ? "bat" : "bowl";
                tossResult += " and chose to " + choseTo;
            }

            
            #line default
            #line hidden
WriteLiteral("            <p>");

            
            #line 108 "..\..\Views\Match.cshtml"
          Write(tossResult);

            
            #line default
            #line hidden
WriteLiteral(".</p>\r\n");

            
            #line 109 "..\..\Views\Match.cshtml"
        }

        if (Model.Match.HasScorecard())
        {
            foreach (var innings in Model.Match.MatchInnings)
            {
                
            
            #line default
            #line hidden
            
            #line 115 "..\..\Views\Match.cshtml"
           Write(Html.Partial("_BattingScorecard", innings));

            
            #line default
            #line hidden
            
            #line 115 "..\..\Views\Match.cshtml"
                                                           
                
            
            #line default
            #line hidden
            
            #line 116 "..\..\Views\Match.cshtml"
           Write(Html.Partial("_BowlingScorecard", innings));

            
            #line default
            #line hidden
            
            #line 116 "..\..\Views\Match.cshtml"
                                                           
            }
        }
        else
        {
            if (Model.Match.InningsOrderIsKnown && tossWinners == null)
            {
                // Show the batting order, since it's not stated as part of the toss result and not implied by showing scorecards in order.
                var firstToBat = Model.Match.Teams.FirstOrDefault(x => x.MatchTeamId == Model.Match.MatchInnings.First().BattingTeam?.MatchTeamId);
                if (firstToBat != null)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <p>");

            
            #line 127 "..\..\Views\Match.cshtml"
                  Write(firstToBat.Team.TeamName);

            
            #line default
            #line hidden
WriteLiteral(" batted first.</p>\r\n");

            
            #line 128 "..\..\Views\Match.cshtml"
                }
            }
        }

        if (Model.Match.Awards.Any())
        {
            var currentAwardName = string.Empty;

            
            #line default
            #line hidden
WriteLiteral("            <dl");

WriteLiteral(" class=\"list-results__detail award-list\"");

WriteLiteral(">\r\n");

            
            #line 136 "..\..\Views\Match.cshtml"
                
            
            #line default
            #line hidden
            
            #line 136 "..\..\Views\Match.cshtml"
                 foreach (var award in Model.Match.Awards)
                {
                    if (award.Award.AwardName != currentAwardName)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <dt>");

            
            #line 140 "..\..\Views\Match.cshtml"
                       Write(award.Award.AwardName);

            
            #line default
            #line hidden
WriteLiteral("</dt>\r\n");

            
            #line 141 "..\..\Views\Match.cshtml"
                        currentAwardName = award.Award.AwardName;
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <dd>\r\n                        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 6470), Tuple.Create("\"", 6517)
            
            #line 144 "..\..\Views\Match.cshtml"
, Tuple.Create(Tuple.Create("", 6477), Tuple.Create<System.Object, System.Int32>(award.PlayerIdentity.Player.PlayerRoute
            
            #line default
            #line hidden
, 6477), false)
);

WriteLiteral(">");

            
            #line 144 "..\..\Views\Match.cshtml"
                                                                      Write(award.PlayerIdentity.PlayerIdentityName);

            
            #line default
            #line hidden
WriteLiteral("</a> (");

            
            #line 144 "..\..\Views\Match.cshtml"
                                                                                                                    Write(Model.Match.Teams.First(x => x.Team.TeamId == award.PlayerIdentity.Team.TeamId).Team.TeamName);

            
            #line default
            #line hidden
WriteLiteral(")\r\n");

            
            #line 145 "..\..\Views\Match.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 145 "..\..\Views\Match.cshtml"
                         if (!string.IsNullOrWhiteSpace(award.Reason))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            ");

WriteLiteral(" – ");

            
            #line 147 "..\..\Views\Match.cshtml"
                            Write(award.Reason.Humanize(LetterCasing.Sentence));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 148 "..\..\Views\Match.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </dd>\r\n");

            
            #line 150 "..\..\Views\Match.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </dl>\r\n");

            
            #line 152 "..\..\Views\Match.cshtml"
        }
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 155 "..\..\Views\Match.cshtml"
    
            
            #line default
            #line hidden
            
            #line 155 "..\..\Views\Match.cshtml"
     if (!string.IsNullOrWhiteSpace(Model.Match.MatchNotes))
    {

            
            #line default
            #line hidden
WriteLiteral("        <h2>Notes</h2>\r\n");

            
            #line 158 "..\..\Views\Match.cshtml"
        
            
            #line default
            #line hidden
            
            #line 158 "..\..\Views\Match.cshtml"
   Write(Html.Raw(Model.Match.MatchNotes));

            
            #line default
            #line hidden
            
            #line 158 "..\..\Views\Match.cshtml"
                                         
    }

            
            #line default
            #line hidden
WriteLiteral("</div>");

        }
    }
}
#pragma warning restore 1591
