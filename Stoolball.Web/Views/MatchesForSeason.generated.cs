#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Examine;
    
    #line 3 "..\..\Views\MatchesForSeason.cshtml"
    using Stoolball.Matches;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Views\MatchesForSeason.cshtml"
    using Stoolball.Web.Matches;
    
    #line default
    #line hidden
    using Umbraco.Core;
    using Umbraco.Core.Models;
    using Umbraco.Core.Models.PublishedContent;
    using Umbraco.Web;
    using Umbraco.Web.Mvc;
    using Umbraco.Web.PublishedModels;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/MatchesForSeason.cshtml")]
    public partial class _Views_MatchesForSeason_cshtml : Umbraco.Web.Mvc.UmbracoViewPage<Stoolball.Web.Competitions.SeasonViewModel>
    {
        public _Views_MatchesForSeason_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 4 "..\..\Views\MatchesForSeason.cshtml"
   
    var matchMenu = new AddMatchMenuViewModel { BaseRoute = Model.Season.SeasonRoute, EnableTournaments = Model.Season.EnableTournaments };
    matchMenu.MatchTypes.AddRange(Model.Season.MatchTypes);

            
            #line default
            #line hidden
WriteLiteral("\r\n");

DefineSection("head", () => {

WriteLiteral("\r\n    <meta");

WriteLiteral(" name=\"robots\"");

WriteLiteral(" content=\"noindex,follow\"");

WriteLiteral(" />\r\n");

});

WriteLiteral("<div");

WriteLiteral(" class=\"container-xl\"");

WriteLiteral(">\r\n    <h1>");

            
            #line 12 "..\..\Views\MatchesForSeason.cshtml"
   Write(Model.Season.SeasonFullNameAndPlayerType());

            
            #line default
            #line hidden
WriteLiteral("</h1>\r\n\r\n    <ul");

WriteLiteral(" class=\"nav nav-tabs nav-tabs-has-add\"");

WriteLiteral(">\r\n        <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n            <a");

WriteLiteral(" class=\"nav-link\"");

WriteAttribute("href", Tuple.Create(" href=\"", 624), Tuple.Create("\"", 656)
            
            #line 16 "..\..\Views\MatchesForSeason.cshtml"
, Tuple.Create(Tuple.Create("", 631), Tuple.Create<System.Object, System.Int32>(Model.Season.SeasonRoute
            
            #line default
            #line hidden
, 631), false)
);

WriteLiteral(">Summary</a>\r\n        </li>\r\n        <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n            <em");

WriteLiteral(" class=\"nav-link active\"");

WriteLiteral(">Matches</em>\r\n        </li>\r\n");

            
            #line 21 "..\..\Views\MatchesForSeason.cshtml"
        
            
            #line default
            #line hidden
            
            #line 21 "..\..\Views\MatchesForSeason.cshtml"
         if (Model.Season.MatchTypes.Contains(MatchType.LeagueMatch) ||
            Model.Season.MatchTypes.Contains(MatchType.KnockoutMatch) ||
            Model.Season.MatchTypes.Contains(MatchType.FriendlyMatch) ||
            !string.IsNullOrEmpty(Model.Season.Results))
        {

            
            #line default
            #line hidden
WriteLiteral("            <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n                <a");

WriteLiteral(" class=\"nav-link\"");

WriteAttribute("href", Tuple.Create(" href=\"", 1146), Tuple.Create("\"", 1184)
            
            #line 27 "..\..\Views\MatchesForSeason.cshtml"
, Tuple.Create(Tuple.Create("", 1153), Tuple.Create<System.Object, System.Int32>(Model.Season.SeasonRoute
            
            #line default
            #line hidden
, 1153), false)
, Tuple.Create(Tuple.Create("", 1178), Tuple.Create("/table", 1178), true)
);

WriteLiteral(">Table</a>\r\n            </li>\r\n");

            
            #line 29 "..\..\Views\MatchesForSeason.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n            <a");

WriteLiteral(" class=\"nav-link\"");

WriteAttribute("href", Tuple.Create(" href=\"", 1289), Tuple.Create("\"", 1332)
            
            #line 31 "..\..\Views\MatchesForSeason.cshtml"
, Tuple.Create(Tuple.Create("", 1296), Tuple.Create<System.Object, System.Int32>(Model.Season.SeasonRoute
            
            #line default
            #line hidden
, 1296), false)
, Tuple.Create(Tuple.Create("", 1321), Tuple.Create("/statistics", 1321), true)
);

WriteLiteral(">Statistics</a>\r\n        </li>\r\n");

WriteLiteral("        ");

            
            #line 33 "..\..\Views\MatchesForSeason.cshtml"
   Write(Html.Partial("_AddMatchMenu", matchMenu));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </ul>\r\n\r\n\r\n");

            
            #line 37 "..\..\Views\MatchesForSeason.cshtml"
    
            
            #line default
            #line hidden
            
            #line 37 "..\..\Views\MatchesForSeason.cshtml"
     if (Model.Matches.Matches.Count > 0)
    {
        
            
            #line default
            #line hidden
            
            #line 39 "..\..\Views\MatchesForSeason.cshtml"
   Write(Html.Partial("_MatchList", Model.Matches));

            
            #line default
            #line hidden
            
            #line 39 "..\..\Views\MatchesForSeason.cshtml"
                                                  
    }
    else
    {

            
            #line default
            #line hidden
WriteLiteral("        <p>There are no matches for this season.</p>\r\n");

            
            #line 44 "..\..\Views\MatchesForSeason.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    <p><a");

WriteLiteral(" type=\"application/rss+xml\"");

WriteAttribute("href", Tuple.Create(" href=\"", 1654), Tuple.Create("\"", 1715)
            
            #line 45 "..\..\Views\MatchesForSeason.cshtml"
, Tuple.Create(Tuple.Create("", 1661), Tuple.Create<System.Object, System.Int32>(Model.Season.Competition.CompetitionRoute
            
            #line default
            #line hidden
, 1661), false)
, Tuple.Create(Tuple.Create("", 1703), Tuple.Create("/matches.rss", 1703), true)
);

WriteLiteral(">New and updated matches – subscribe with RSS</a></p>\r\n</div>");

        }
    }
}
#pragma warning restore 1591
