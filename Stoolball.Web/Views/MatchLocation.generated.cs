#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    
    #line 3 "..\..\Views\MatchLocation.cshtml"
    using System.Globalization;
    
    #line default
    #line hidden
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 2 "..\..\Views\MatchLocation.cshtml"
    using ClientDependency.Core.Mvc;
    
    #line default
    #line hidden
    using Examine;
    
    #line 4 "..\..\Views\MatchLocation.cshtml"
    using Stoolball.MatchLocations;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Views\MatchLocation.cshtml"
    using Stoolball.Security;
    
    #line default
    #line hidden
    using Umbraco.Core;
    using Umbraco.Core.Models;
    using Umbraco.Core.Models.PublishedContent;
    using Umbraco.Web;
    using Umbraco.Web.Mvc;
    using Umbraco.Web.PublishedModels;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/MatchLocation.cshtml")]
    public partial class _Views_MatchLocation_cshtml : Umbraco.Web.Mvc.UmbracoViewPage<Stoolball.Web.MatchLocations.MatchLocationViewModel>
    {
        public _Views_MatchLocation_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 6 "..\..\Views\MatchLocation.cshtml"
  
    Html.RequiresJs("https://maps.google.co.uk/maps/api/js?key=" + Model.GoogleMapsApiKey, 50);
    Html.RequiresJs("~/js/maps.js", 90);
    Html.RequiresJs("~/matchlocations/match-location.js");
    Html.RequiresJs("~/matchlocations/show-all-teams.js");
    var authorizedToEdit = Model.IsAuthorized[AuthorizedAction.EditMatchLocation] || Model.IsAuthorized[AuthorizedAction.DeleteMatchLocation];

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"container-xl\"");

WriteLiteral(">\r\n    <h1>");

            
            #line 14 "..\..\Views\MatchLocation.cshtml"
   Write(Model.MatchLocation.NameAndLocalityOrTownIfDifferent());

            
            #line default
            #line hidden
WriteLiteral("</h1>\r\n\r\n    <ul");

WriteAttribute("class", Tuple.Create(" class=\"", 736), Tuple.Create("\"", 813)
, Tuple.Create(Tuple.Create("", 744), Tuple.Create("nav", 744), true)
, Tuple.Create(Tuple.Create(" ", 747), Tuple.Create("nav-tabs", 748), true)
            
            #line 16 "..\..\Views\MatchLocation.cshtml"
, Tuple.Create(Tuple.Create("", 756), Tuple.Create<System.Object, System.Int32>(authorizedToEdit ? " nav-tabs-has-edit" : string.Empty
            
            #line default
            #line hidden
, 756), false)
);

WriteLiteral(">\r\n        <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n            <em");

WriteLiteral(" class=\"nav-link active\"");

WriteLiteral(">Summary</em>\r\n        </li>\r\n        <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n            <a");

WriteLiteral(" class=\"nav-link\"");

WriteAttribute("href", Tuple.Create(" href=\"", 979), Tuple.Create("\"", 1033)
            
            #line 21 "..\..\Views\MatchLocation.cshtml"
, Tuple.Create(Tuple.Create("", 986), Tuple.Create<System.Object, System.Int32>(Model.MatchLocation.MatchLocationRoute
            
            #line default
            #line hidden
, 986), false)
, Tuple.Create(Tuple.Create("", 1025), Tuple.Create("/matches", 1025), true)
);

WriteLiteral(">Matches</a>\r\n        </li>\r\n        <li");

WriteLiteral(" class=\"nav-item\"");

WriteLiteral(">\r\n            <a");

WriteLiteral(" class=\"nav-link\"");

WriteAttribute("href", Tuple.Create(" href=\"", 1125), Tuple.Create("\"", 1182)
            
            #line 24 "..\..\Views\MatchLocation.cshtml"
, Tuple.Create(Tuple.Create("", 1132), Tuple.Create<System.Object, System.Int32>(Model.MatchLocation.MatchLocationRoute
            
            #line default
            #line hidden
, 1132), false)
, Tuple.Create(Tuple.Create("", 1171), Tuple.Create("/statistics", 1171), true)
);

WriteLiteral(">Statistics</a>\r\n        </li>\r\n");

            
            #line 26 "..\..\Views\MatchLocation.cshtml"
        
            
            #line default
            #line hidden
            
            #line 26 "..\..\Views\MatchLocation.cshtml"
         if (authorizedToEdit)
        {

            
            #line default
            #line hidden
WriteLiteral("            <li");

WriteLiteral(" class=\"nav-item nav-item-admin\"");

WriteLiteral(">\r\n                <a");

WriteLiteral(" class=\"nav-link nav-link-edit\"");

WriteAttribute("href", Tuple.Create(" href=\"", 1357), Tuple.Create("\"", 1408)
            
            #line 29 "..\..\Views\MatchLocation.cshtml"
, Tuple.Create(Tuple.Create("", 1364), Tuple.Create<System.Object, System.Int32>(Model.MatchLocation.MatchLocationRoute
            
            #line default
            #line hidden
, 1364), false)
, Tuple.Create(Tuple.Create("", 1403), Tuple.Create("/edit", 1403), true)
);

WriteLiteral(">Edit ground or sports centre</a>\r\n            </li>\r\n");

            
            #line 31 "..\..\Views\MatchLocation.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </ul>\r\n\r\n");

            
            #line 34 "..\..\Views\MatchLocation.cshtml"
    
            
            #line default
            #line hidden
            
            #line 34 "..\..\Views\MatchLocation.cshtml"
      
        var addressLines = new List<string>();
        if (!string.IsNullOrWhiteSpace(Model.MatchLocation.SecondaryAddressableObjectName))
        {
            addressLines.Add(Model.MatchLocation.SecondaryAddressableObjectName);
        }
        if (!string.IsNullOrWhiteSpace(Model.MatchLocation.PrimaryAddressableObjectName))
        {
            addressLines.Add(Model.MatchLocation.PrimaryAddressableObjectName);
        }
        if (!string.IsNullOrWhiteSpace(Model.MatchLocation.StreetDescription))
        {
            addressLines.Add(Model.MatchLocation.StreetDescription);
        }

        if (!string.IsNullOrWhiteSpace(Model.MatchLocation.Locality))
        {
            addressLines.Add(Model.MatchLocation.Locality);
        }
        if (!string.IsNullOrWhiteSpace(Model.MatchLocation.Town))
        {
            addressLines.Add(Model.MatchLocation.Town);
        }
        if (!string.IsNullOrWhiteSpace(Model.MatchLocation.AdministrativeArea))
        {
            addressLines.Add(Model.MatchLocation.AdministrativeArea);
        }
        if (!string.IsNullOrWhiteSpace(Model.MatchLocation.Postcode))
        {
            if (addressLines.Count > 0)
            {
                addressLines[addressLines.Count - 1] += " " + Model.MatchLocation.Postcode.ToUpper(CultureInfo.CurrentCulture);
            }
            else
            {
                addressLines.Add(Model.MatchLocation.Postcode.ToUpper(CultureInfo.CurrentCulture));
            }
        }
        if (addressLines.Count > 0)
        {

            
            #line default
            #line hidden
WriteLiteral("            <p>\r\n");

            
            #line 75 "..\..\Views\MatchLocation.cshtml"
                
            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\MatchLocation.cshtml"
                 foreach (var line in addressLines)
                {
                    
            
            #line default
            #line hidden
            
            #line 77 "..\..\Views\MatchLocation.cshtml"
               Write(line);

            
            #line default
            #line hidden
WriteLiteral("<br />\r\n");

            
            #line 78 "..\..\Views\MatchLocation.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </p>\r\n");

            
            #line 80 "..\..\Views\MatchLocation.cshtml"
        }
    
            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 82 "..\..\Views\MatchLocation.cshtml"
    
            
            #line default
            #line hidden
            
            #line 82 "..\..\Views\MatchLocation.cshtml"
     if (Model.MatchLocation.Teams?.Count > 0)
    {
        var currentTeams = Model.MatchLocation.Teams.Where(x => !x.UntilYear.HasValue).ToList();

            
            #line default
            #line hidden
WriteLiteral("        <h2>Teams based here</h2>\r\n");

            
            #line 86 "..\..\Views\MatchLocation.cshtml"
        if (currentTeams.Any())
        {

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"team-list__current\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 89 "..\..\Views\MatchLocation.cshtml"
       Write(Html.Partial("_TeamList", currentTeams));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n");

            
            #line 91 "..\..\Views\MatchLocation.cshtml"
        }
        if (currentTeams.Count < Model.MatchLocation.Teams.Count)
        {

            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteLiteral(" class=\"team-list__all d-none\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 95 "..\..\Views\MatchLocation.cshtml"
           Write(Html.Partial("_TeamList", Model.MatchLocation.Teams));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n");

            
            #line 97 "..\..\Views\MatchLocation.cshtml"
        }
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 100 "..\..\Views\MatchLocation.cshtml"
    
            
            #line default
            #line hidden
            
            #line 100 "..\..\Views\MatchLocation.cshtml"
     if (Model.MatchLocation.Latitude.HasValue && Model.MatchLocation.Longitude.HasValue)
    {
        var mapTitle = string.Empty;
        var precisionWarning = string.Empty;
        switch (Model.MatchLocation.GeoPrecision)
        {
            case GeoPrecision.Exact:
                mapTitle = Model.MatchLocation.NameAndLocalityOrTownIfDifferent();
                break;
            case GeoPrecision.Postcode:
                mapTitle = Model.MatchLocation.Postcode;
                precisionWarning = "Note: This map shows the nearest postcode. The ground or sports centre should be nearby.";
                break;
            case GeoPrecision.Street:
                mapTitle = Model.MatchLocation.StreetDescription + ", " + Model.MatchLocation.Town;
                precisionWarning = "Note: This map shows the nearest road. The ground or sports centre should be nearby.";
                break;
            case GeoPrecision.Town:
                mapTitle = Model.MatchLocation.Town;
                precisionWarning = "Note: This map shows the town or village. Contact the home team to find the ground or sports centre.";
                break;
        }

            
            #line default
            #line hidden
WriteLiteral("        <h2>Map of ");

            
            #line 122 "..\..\Views\MatchLocation.cshtml"
              Write(mapTitle);

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n");

            
            #line 123 "..\..\Views\MatchLocation.cshtml"
        if (!string.IsNullOrEmpty(precisionWarning))
        {

            
            #line default
            #line hidden
WriteLiteral("            <p>");

            
            #line 125 "..\..\Views\MatchLocation.cshtml"
          Write(precisionWarning);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");

            
            #line 126 "..\..\Views\MatchLocation.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" id=\"location-map\"");

WriteLiteral(" data-latitude=\"");

            
            #line 127 "..\..\Views\MatchLocation.cshtml"
                                         Write(Model.MatchLocation.Latitude);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-longitude=\"");

            
            #line 127 "..\..\Views\MatchLocation.cshtml"
                                                                                        Write(Model.MatchLocation.Longitude);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-precision=\"");

            
            #line 127 "..\..\Views\MatchLocation.cshtml"
                                                                                                                                        Write(Model.MatchLocation.GeoPrecision.ToString().ToLowerInvariant());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n            <p><a");

WriteAttribute("href", Tuple.Create(" href=\"", 5412), Tuple.Create("\"", 5658)
, Tuple.Create(Tuple.Create("", 5419), Tuple.Create("https://maps.google.co.uk/?z=16&amp;q=", 5419), true)
            
            #line 128 "..\..\Views\MatchLocation.cshtml"
, Tuple.Create(Tuple.Create("", 5457), Tuple.Create<System.Object, System.Int32>(HttpUtility.UrlEncode(Model.MatchLocation.NameAndLocalityOrTown())
            
            #line default
            #line hidden
, 5457), false)
            
            #line 128 "..\..\Views\MatchLocation.cshtml"
                                                  , Tuple.Create(Tuple.Create("", 5524), Tuple.Create<System.Object, System.Int32>("@"
            
            #line default
            #line hidden
, 5524), false)
            
            #line 128 "..\..\Views\MatchLocation.cshtml"
                                                       , Tuple.Create(Tuple.Create("", 5530), Tuple.Create<System.Object, System.Int32>(Model.MatchLocation.Latitude
            
            #line default
            #line hidden
, 5530), false)
, Tuple.Create(Tuple.Create("", 5559), Tuple.Create(",", 5559), true)
            
            #line 128 "..\..\Views\MatchLocation.cshtml"
                                                                                     , Tuple.Create(Tuple.Create("", 5560), Tuple.Create<System.Object, System.Int32>(Model.MatchLocation.Longitude
            
            #line default
            #line hidden
, 5560), false)
, Tuple.Create(Tuple.Create("", 5590), Tuple.Create("&amp;ll=", 5590), true)
            
            #line 128 "..\..\Views\MatchLocation.cshtml"
                                                                                                                           , Tuple.Create(Tuple.Create("", 5598), Tuple.Create<System.Object, System.Int32>(Model.MatchLocation.Latitude
            
            #line default
            #line hidden
, 5598), false)
, Tuple.Create(Tuple.Create("", 5627), Tuple.Create(",", 5627), true)
            
            #line 128 "..\..\Views\MatchLocation.cshtml"
                                                                                                                                                         , Tuple.Create(Tuple.Create("", 5628), Tuple.Create<System.Object, System.Int32>(Model.MatchLocation.Longitude
            
            #line default
            #line hidden
, 5628), false)
);

WriteLiteral(">Map of ");

            
            #line 128 "..\..\Views\MatchLocation.cshtml"
                                                                                                                                                                                                                                                                           Write(mapTitle);

            
            #line default
            #line hidden
WriteLiteral(" on Google Maps</a></p>\r\n        </div>\r\n");

            
            #line 130 "..\..\Views\MatchLocation.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 132 "..\..\Views\MatchLocation.cshtml"
Write(Html.Raw(Model.MatchLocation.MatchLocationNotes));

            
            #line default
            #line hidden
WriteLiteral("\r\n</div>");

        }
    }
}
#pragma warning restore 1591
