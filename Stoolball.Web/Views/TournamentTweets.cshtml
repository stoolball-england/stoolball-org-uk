@inherits UmbracoViewPage<MatchListingViewModel>
@inject Stoolball.Dates.IDateTimeFormatter dateTimeFormatter
@using Stoolball.Web.Matches.Models
@using Humanizer
@using Stoolball.Dates
@using System.Globalization
@{
    Layout = null;
    Context.Response.ContentType = "application/rss+xml";
}<?xml version="1.0" encoding="utf-8" ?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
<channel>
	<title>@Model.Metadata.PageTitle</title>
	<link>https://www.stoolball.org.uk/tournaments</link>
	<description>@Model.Metadata.Description</description>
	<pubDate>@DateTimeOffset.UtcNow.ToRFC822()</pubDate>
    <image>
        <url>https://www.stoolball.org.uk/images/logos/stoolball-england-rss.gif</url>
        <title>@Model.Metadata.PageTitle</title>
        <link />https://www.stoolball.org.uk/tournaments</link>
    </image>
	<language>en-GB</language>
	<docs>http://blogs.law.harvard.edu/tech/rss</docs>
	@foreach (var tournament in Model.Matches)
    {
        var prefix = tournament.PlayerType.Humanize(LetterCasing.Sentence);
        if (Model.AppliedMatchFilter.UntilDate!.Value.Date != DateTimeOffset.Now.AddDays(365).Date) 
		{
            prefix = "New " + prefix.ToLower(CultureInfo.CurrentCulture);
        }
	@:<item>
		<title><![CDATA[@prefix #stoolball tournament: @tournament.MatchName, @dateTimeFormatter.FormatDate(tournament.StartTime, true, true, true) #@(tournament.MatchLocation?.LocalityOrTown().Humanize(LetterCasing.Title).Replace(" ",string.Empty)) ]]></title>
		<description><![CDATA[@tournament.Description()]]></description>
		<link>@:https://www.stoolball.org.uk@(tournament.MatchRoute)</link>
		<pubDate>@(tournament.LastAuditDate.HasValue ? tournament.LastAuditDate.Value.ToRFC822() : DateTimeOffset.UtcNow.ToRFC822())</pubDate>
        <guid isPermaLink="false">@Stoolball.Constants.EntityUriPrefixes.Tournament@tournament.MatchId</guid>
		<source url="@Context.Request.Scheme://www.stoolball.org.uk@(Context.Request.Path.Value!.Substring(0,Context.Request.Path.Value.Length-4)).rss@(Context.Request.QueryString.Value)" />
		<category>@tournament.PlayerType.Humanize(LetterCasing.LowerCase)</category>
		@:</item>
	}
</channel>
</rss>
