<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<!-- This file is run automatically when the project is built. 
       https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build?view=vs-2019
  -->

	<!-- Copy files from npm packages that are needed to run -->
	<Target Name="StoolballCopyFilesFromNpmPackages" BeforeTargets="BeforeBuild">
		<Error Text="bootstrap npm package not found. Run npm install." Condition="!Exists('$(ProjectDir)..\node_modules\bootstrap\')" />
		<Error Text="popper.js npm package not found. Run npm install." Condition="!Exists('$(ProjectDir)..\node_modules\popper.js\')" />

		<ItemGroup>
			<FilesFromBootstrapPackage Include="$(ProjectDir)..\node_modules\bootstrap\js\dist\*.js" />
			<FilesFromPopperPackage Include="$(ProjectDir)..\node_modules\popper.js\dist\umd\popper.min.js" />
		</ItemGroup>

		<!-- Copy files that are missing -->
		<Copy SourceFiles="@(FilesFromBootstrapPackage)"
			  DestinationFiles="$(ProjectDir)wwwroot\js\lib\bootstrap\%(RecursiveDir)%(Filename)%(Extension)"
			  Condition="!Exists('$(ProjectDir)wwwroot\js\lib\bootstrap\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(FilesFromPopperPackage)"
			  DestinationFiles="$(ProjectDir)wwwroot\js\lib\bootstrap\%(RecursiveDir)%(Filename)%(Extension)"
			  Condition="!Exists('$(ProjectDir)wwwroot\js\lib\bootstrap\%(RecursiveDir)%(Filename)%(Extension)')" />
	</Target>

	<Target Name="StoolballCopyFilesFromUmbracoCloud" BeforeTargets="BeforeBuild">
		<!-- Copy files source-controlled in the .UmbracoCloud repo, if that repo is present -->
		<ItemGroup>
			<UmbracoLicences Include="$(ProjectDir)..\.UmbracoCloud\src\UmbracoProject\umbraco\Licenses\**" />
		</ItemGroup>
		<Copy SourceFiles="$(ProjectDir)..\.UmbracoCloud\src\UmbracoProject\umbraco-cloud.json"
				DestinationFiles="$(ProjectDir)umbraco-cloud.json"
				Condition="Exists('$(ProjectDir)..\.UmbracoCloud\src\UmbracoProject\umbraco-cloud.json')" />
		<Copy SourceFiles="@(UmbracoLicences)"
				DestinationFiles="$(ProjectDir)umbraco\Licenses\%(RecursiveDir)%(Filename)%(Extension)"
				Condition="Exists('$(ProjectDir)..\.UmbracoCloud\src\UmbracoProject\umbraco\Licenses\%(RecursiveDir)%(Filename)%(Extension)')" />
	</Target>

	<Target Name="StoolballCopyFilesFromNuGet" BeforeTargets="AfterBuild">
		<!-- Copy files referenced by NuGet but not copied to /bin and reported missing on Umbraco Cloud -->
		<Copy SourceFiles="$(USERPROFILE)\.nuget\packages\system.io.filesystem.accesscontrol\5.0.0\lib\netstandard2.0\System.IO.FileSystem.AccessControl.dll"
				DestinationFiles="$(ProjectDir)bin\$(Configuration)\net5.0\System.IO.FileSystem.AccessControl.dll"
				Condition="Exists('$(USERPROFILE)\.nuget\packages\system.io.filesystem.accesscontrol\5.0.0\lib\netstandard2.0\System.IO.FileSystem.AccessControl.dll') And !Exists('$(ProjectDir)bin\$(Configuration)\net5.0\System.IO.FileSystem.AccessControl.dll')" />
		<Copy SourceFiles="$(USERPROFILE)\.nuget\packages\system.security.cryptography.pkcs\5.0.0\lib\netcoreapp3.0\System.Security.Cryptography.Pkcs.dll"
				DestinationFiles="$(ProjectDir)bin\$(Configuration)\net5.0\System.Security.Cryptography.Pkcs.dll"
				Condition="Exists('$(USERPROFILE)\.nuget\packages\system.security.cryptography.pkcs\5.0.0\lib\netcoreapp3.0\System.Security.Cryptography.Pkcs.dll') And !Exists('$(ProjectDir)bin\$(Configuration)\net5.0\System.Security.Cryptography.Pkcs.dll')" />
		<Copy SourceFiles="$(USERPROFILE)\.nuget\packages\microsoft.aspnetcore.antiforgery\2.2.0\lib\netstandard2.0\Microsoft.AspNetCore.Antiforgery.dll"
				DestinationFiles="$(ProjectDir)bin\$(Configuration)\net5.0\Microsoft.AspNetCore.Antiforgery.dll"
				Condition="Exists('$(USERPROFILE)\.nuget\packages\microsoft.aspnetcore.antiforgery\2.2.0\lib\netstandard2.0\Microsoft.AspNetCore.Antiforgery.dll') And !Exists('$(ProjectDir)bin\$(Configuration)\net5.0\Microsoft.AspNetCore.Antiforgery.dll')" />
	</Target>

	<Target Name="StoolballApplyWebConfigTransform" BeforeTargets="AfterBuild">
		<!-- Testing for the existence of web.template.config ensures this task only runs on local builds.
		     On Umbraco Cloud web.release.config runs automatically to transform the .net core web.config -->
		<TransformXml Source="$(ProjectDir)web.template.config" Transform="$(ProjectDir)web.release.config" Destination="$(ProjectDir)web.config" StackTrace="true" Condition="Exists('$(ProjectDir)web.template.config')" />
		<TransformXml Source="$(ProjectDir)web.config" Transform="$(ProjectDir)web.local.config" Destination="$(ProjectDir)web.config" StackTrace="true" Condition="Exists('$(ProjectDir)web.local.config')" />
	</Target>

	<Target Name="StoolballTriggerUmbracoDeploySync" BeforeTargets="AfterBuild" Condition="!Exists('$(ProjectDir)umbraco/deploy/deploy')">
		<!-- Create a 0-byte file that Umbraco Deploy looks for to trigger a sync of 
         the *.uda files on disk into the Umbraco database -->
		<Touch Files="$(ProjectDir)umbraco/deploy/deploy" AlwaysCreate="true" Condition="Exists('$(ProjectDir)umbraco/deploy')">
			<Output
				TaskParameter="TouchedFiles"
				ItemName="FilesTouched"/>
		</Touch>
	</Target>
</Project>