using System;
using Stoolball.Web.Routing;
using Xunit;

namespace Stoolball.Web.Tests.Routing
{
    public class StoolballRouteContentFinderTests
    {
        [Theory]
        [InlineData("https://example.org/teams", StoolballRouteType.Teams)]
        [InlineData("https://example.org/teams/", StoolballRouteType.Teams)]
        [InlineData("https://example.org/teams/add", StoolballRouteType.CreateTeam)]
        [InlineData("https://example.org/teams/Add/", StoolballRouteType.CreateTeam)]
        [InlineData("https://example.org/teams/map", StoolballRouteType.TeamsMap)]
        [InlineData("https://example.org/teams/MAP/", StoolballRouteType.TeamsMap)]
        [InlineData("https://example.org/teams/example123", StoolballRouteType.Team)]
        [InlineData("https://example.org/teams/example123/", StoolballRouteType.Team)]
        [InlineData("https://example.org/teams/example123/EDiT", StoolballRouteType.TeamActions)]
        [InlineData("https://example.org/teams/example123/edit/", StoolballRouteType.TeamActions)]
        [InlineData("https://example.org/teams/example123/EDiT/team", StoolballRouteType.EditTeam)]
        [InlineData("https://example.org/teams/Example123/EDiT/TEAM/", StoolballRouteType.EditTeam)]
        [InlineData("https://example.org/teams/EXAMPLE123/delete", StoolballRouteType.DeleteTeam)]
        [InlineData("https://example.org/teams/example123/DElete/", StoolballRouteType.DeleteTeam)]
        [InlineData("https://example.org/teams/example123/matches", StoolballRouteType.MatchesForTeam)]
        [InlineData("https://example.org/teams/example123/MATCHES/", StoolballRouteType.MatchesForTeam)]
        [InlineData("https://example.org/teams/example123/matches/add/friendly", StoolballRouteType.CreateFriendlyMatch)]
        [InlineData("https://example.org/teams/example123/MATCHES/Add/Friendly/", StoolballRouteType.CreateFriendlyMatch)]
        [InlineData("https://example.org/teams/example123/matches/add/knockout", StoolballRouteType.CreateKnockoutMatch)]
        [InlineData("https://example.org/teams/example123/MATCHES/Add/KnockOut/", StoolballRouteType.CreateKnockoutMatch)]
        [InlineData("https://example.org/teams/example123/matches/add/league", StoolballRouteType.CreateLeagueMatch)]
        [InlineData("https://example.org/teams/example123/MATCHES/Add/League/", StoolballRouteType.CreateLeagueMatch)]
        [InlineData("https://example.org/teams/example123/matches/add/Tournament", StoolballRouteType.CreateTournament)]
        [InlineData("https://example.org/teams/example123/MATCHES/Add/tournament/", StoolballRouteType.CreateTournament)]
        [InlineData("https://example.org/tournaments/example123/teams/example-team", StoolballRouteType.TransientTeam)]
        [InlineData("https://example.org/tournaments/example123/teams/example-team/", StoolballRouteType.TransientTeam)]
        [InlineData("https://example.org/tournaments/example123/teams/example-team/EDIT", StoolballRouteType.EditTransientTeam)]
        [InlineData("https://example.org/tournaments/example123/teams/example-TEAM/edit/", StoolballRouteType.EditTransientTeam)]
        [InlineData("https://example.org/locations", StoolballRouteType.MatchLocations)]
        [InlineData("https://example.org/locations/", StoolballRouteType.MatchLocations)]
        [InlineData("https://example.org/locations/add", StoolballRouteType.CreateMatchLocation)]
        [InlineData("https://example.org/locations/ADD/", StoolballRouteType.CreateMatchLocation)]
        [InlineData("https://example.org/locations/example", StoolballRouteType.MatchLocation)]
        [InlineData("https://example.org/locations/EXAMPLE-location/", StoolballRouteType.MatchLocation)]
        [InlineData("https://example.org/locations/EXAMPLE-location/edit", StoolballRouteType.MatchLocationActions)]
        [InlineData("https://example.org/locations/EXAMPLE-location/edit/location", StoolballRouteType.EditMatchLocation)]
        [InlineData("https://example.org/locations/EXAMPLE-location/EDIT/location/", StoolballRouteType.EditMatchLocation)]
        [InlineData("https://example.org/locations/EXAMPLE-location/delete", StoolballRouteType.DeleteMatchLocation)]
        [InlineData("https://example.org/clubs/example-name/", StoolballRouteType.Club)]
        [InlineData("https://example.org/clubs/example-name/edit", StoolballRouteType.ClubActions)]
        [InlineData("https://example.org/clubs/example-name/EDit/", StoolballRouteType.ClubActions)]
        [InlineData("https://example.org/clubs/example-name/edit/club", StoolballRouteType.EditClub)]
        [InlineData("https://example.org/clubs/example-name/EDit/CLUB/", StoolballRouteType.EditClub)]
        [InlineData("https://example.org/clubs/example-name/delete", StoolballRouteType.DeleteClub)]
        [InlineData("https://example.org/clubs/example-naME/DELete/", StoolballRouteType.DeleteClub)]
        [InlineData("https://example.org/clubs/ADD", StoolballRouteType.CreateClub)]
        [InlineData("https://example.org/clubs/add/", StoolballRouteType.CreateClub)]
        [InlineData("https://example.org/CLUBS/EXAMPLE", StoolballRouteType.Club)]
        [InlineData("https://example.org/competitions", StoolballRouteType.Competitions)]
        [InlineData("https://example.org/COMPETITIONS/", StoolballRouteType.Competitions)]
        [InlineData("https://example.org/competitions/add", StoolballRouteType.CreateCompetition)]
        [InlineData("https://example.org/COMPETITIONS/add/", StoolballRouteType.CreateCompetition)]
        [InlineData("https://example.org/competitions/example", StoolballRouteType.Competition)]
        [InlineData("https://example.org/competitions/example/", StoolballRouteType.Competition)]
        [InlineData("https://example.org/competitions/example/Add", StoolballRouteType.CreateSeason)]
        [InlineData("https://example.org/competitions/example/ADD/", StoolballRouteType.CreateSeason)]
        [InlineData("https://example.org/competitions/example/EDIT", StoolballRouteType.CompetitionActions)]
        [InlineData("https://example.org/competitions/example/edit/", StoolballRouteType.CompetitionActions)]
        [InlineData("https://example.org/competitions/example/EDIT/competition", StoolballRouteType.EditCompetition)]
        [InlineData("https://example.org/competitions/example/edit/COMPETITION", StoolballRouteType.EditCompetition)]
        [InlineData("https://example.org/competitions/EXAMPLE/DELETE", StoolballRouteType.DeleteCompetition)]
        [InlineData("https://example.org/competitions/example/delete/", StoolballRouteType.DeleteCompetition)]
        [InlineData("https://example.org/competitions/example/2020", StoolballRouteType.Season)]
        [InlineData("https://example.org/competitions/example/2020/", StoolballRouteType.Season)]
        [InlineData("https://example.org/competitions/example/2020/matches", StoolballRouteType.MatchesForSeason)]
        [InlineData("https://example.org/competitions/example/2020/MATCHES/", StoolballRouteType.MatchesForSeason)]
        [InlineData("https://example.org/competitions/example/2020-21/MATCHES", StoolballRouteType.MatchesForSeason)]
        [InlineData("https://example.org/competitions/example/2020-21/mAtChEs/", StoolballRouteType.MatchesForSeason)]
        [InlineData("https://example.org/competitions/example/2020/matches/ADD/friendly", StoolballRouteType.CreateFriendlyMatch)]
        [InlineData("https://example.org/competitions/example/2020/MATCHES/add/Friendly/", StoolballRouteType.CreateFriendlyMatch)]
        [InlineData("https://example.org/competitions/example/2020-21/MATCHES/add/friendly", StoolballRouteType.CreateFriendlyMatch)]
        [InlineData("https://example.org/competitions/example/2020-21/mAtChEs/Add/Friendly/", StoolballRouteType.CreateFriendlyMatch)]
        [InlineData("https://example.org/competitions/example/2020/matches/ADD/league", StoolballRouteType.CreateLeagueMatch)]
        [InlineData("https://example.org/competitions/example/2020/MATCHES/add/League/", StoolballRouteType.CreateLeagueMatch)]
        [InlineData("https://example.org/competitions/example/2020-21/MATCHES/add/league", StoolballRouteType.CreateLeagueMatch)]
        [InlineData("https://example.org/competitions/example/2020-21/mAtChEs/Add/League/", StoolballRouteType.CreateLeagueMatch)]
        [InlineData("https://example.org/competitions/example/2020/matches/ADD/knockout", StoolballRouteType.CreateKnockoutMatch)]
        [InlineData("https://example.org/competitions/example/2020/MATCHES/add/KnockOut/", StoolballRouteType.CreateKnockoutMatch)]
        [InlineData("https://example.org/competitions/example/2020-21/MATCHES/add/knockout", StoolballRouteType.CreateKnockoutMatch)]
        [InlineData("https://example.org/competitions/example/2020-21/mAtChEs/Add/Knockout/", StoolballRouteType.CreateKnockoutMatch)]
        [InlineData("https://example.org/competitions/example/2020/table", StoolballRouteType.SeasonResultsTable)]
        [InlineData("https://example.org/competitions/example/2020/Table/", StoolballRouteType.SeasonResultsTable)]
        [InlineData("https://example.org/competitions/example/2020-21/table", StoolballRouteType.SeasonResultsTable)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020-21/Table/", StoolballRouteType.SeasonResultsTable)]
        [InlineData("https://example.org/competitions/example/2020/edit", StoolballRouteType.SeasonActions)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020/EDIT/", StoolballRouteType.SeasonActions)]
        [InlineData("https://example.org/competitions/example/2020-21/edit", StoolballRouteType.SeasonActions)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020-21/EDIT/", StoolballRouteType.SeasonActions)]
        [InlineData("https://example.org/competitions/example/2020/edit/season", StoolballRouteType.EditSeason)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020/EDIT/SEASON/", StoolballRouteType.EditSeason)]
        [InlineData("https://example.org/competitions/example/2020-21/edit/season", StoolballRouteType.EditSeason)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020-21/EDIT/Season/", StoolballRouteType.EditSeason)]
        [InlineData("https://example.org/competitions/example/2020/edit/table", StoolballRouteType.EditSeasonResultsTable)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020/EDIT/Table/", StoolballRouteType.EditSeasonResultsTable)]
        [InlineData("https://example.org/competitions/example/2020-21/edit/table", StoolballRouteType.EditSeasonResultsTable)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020-21/EDIT/Table/", StoolballRouteType.EditSeasonResultsTable)]
        [InlineData("https://example.org/competitions/example/2020/edit/teams", StoolballRouteType.EditSeasonTeams)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020/EDIT/Teams/", StoolballRouteType.EditSeasonTeams)]
        [InlineData("https://example.org/competitions/example/2020-21/edit/TEAMS", StoolballRouteType.EditSeasonTeams)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020-21/EDIT/teams/", StoolballRouteType.EditSeasonTeams)]
        [InlineData("https://example.org/competitions/example/2020/delete", StoolballRouteType.DeleteSeason)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020/Delete/", StoolballRouteType.DeleteSeason)]
        [InlineData("https://example.org/competitions/example/2020-21/Delete", StoolballRouteType.DeleteSeason)]
        [InlineData("https://example.org/competitions/EXAMPLE/2020-21/DELETE/", StoolballRouteType.DeleteSeason)]
        [InlineData("https://example.org/matches/example-match", StoolballRouteType.Match)]
        [InlineData("https://example.org/matches/example-MaTcH/", StoolballRouteType.Match)]
        [InlineData("https://example.org/matches/example-match/edit", StoolballRouteType.MatchActions)]
        [InlineData("https://example.org/matches/example-MaTcH/Edit/", StoolballRouteType.MatchActions)]
        [InlineData("https://example.org/matches/example-match/edit/friendly", StoolballRouteType.EditFriendlyMatch)]
        [InlineData("https://example.org/matches/example-MaTcH/Edit/Friendly/", StoolballRouteType.EditFriendlyMatch)]
        [InlineData("https://example.org/matches/example-match/edit/League", StoolballRouteType.EditLeagueMatch)]
        [InlineData("https://example.org/matches/example-MaTcH/Edit/league/", StoolballRouteType.EditLeagueMatch)]
        [InlineData("https://example.org/matches/example-match/edit/knockout", StoolballRouteType.EditKnockoutMatch)]
        [InlineData("https://example.org/matches/example-MaTcH/Edit/KnockOut/", StoolballRouteType.EditKnockoutMatch)]
        [InlineData("https://example.org/matches/example-match/edit/start-of-play", StoolballRouteType.EditStartOfPlay)]
        [InlineData("https://example.org/matches/example-MaTcH/Edit/Start-Of-Play/", StoolballRouteType.EditStartOfPlay)]
        [InlineData("https://example.org/matches/example-match/edit/innings/1/BATTING", StoolballRouteType.EditBattingScorecard)]
        [InlineData("https://example.org/matches/example-MaTcH/Edit/Innings/18/batting/", StoolballRouteType.EditBattingScorecard)]
        [InlineData("https://example.org/matches/example-match/edit/innings/1/bowling", StoolballRouteType.EditBowlingScorecard)]
        [InlineData("https://example.org/matches/example-MaTcH/Edit/Innings/18/Bowling/", StoolballRouteType.EditBowlingScorecard)]
        [InlineData("https://example.org/matches/example-match/edit/close-of-play", StoolballRouteType.EditCloseOfPlay)]
        [InlineData("https://example.org/matches/example-MaTcH/Edit/close-Of-Play/", StoolballRouteType.EditCloseOfPlay)]
        [InlineData("https://example.org/matches/example-match/delete", StoolballRouteType.DeleteMatch)]
        [InlineData("https://example.org/matches/example-MaTcH/DELETE/", StoolballRouteType.DeleteMatch)]
        [InlineData("https://example.org/tournaments/example-tournament/", StoolballRouteType.Tournament)]
        [InlineData("https://example.org/tournaments/123-TOURNAMENT/", StoolballRouteType.Tournament)]
        [InlineData("https://example.org/tournaments/example-tournament/Edit", StoolballRouteType.TournamentActions)]
        [InlineData("https://example.org/tournaments/123-TOURNAMENT/edit/", StoolballRouteType.TournamentActions)]
        [InlineData("https://example.org/tournaments/example-tournament/Edit/Tournament", StoolballRouteType.EditTournament)]
        [InlineData("https://example.org/tournaments/123-TOURNAMENT/edit/tournament/", StoolballRouteType.EditTournament)]
        [InlineData("https://example.org/tournaments/example-tournament/Edit/Teams", StoolballRouteType.EditTournamentTeams)]
        [InlineData("https://example.org/tournaments/123-TOURNAMENT/edit/teams/", StoolballRouteType.EditTournamentTeams)]
        [InlineData("https://example.org/tournaments/example-tournament/delete", StoolballRouteType.DeleteTournament)]
        [InlineData("https://example.org/tournaments/123-TOURNAMENT/delete/", StoolballRouteType.DeleteTournament)]
        [InlineData("https://example.org/play/statistics/edit", StoolballRouteType.EditStatistics)]
        [InlineData("https://example.org/play/statistics/EDIT/", StoolballRouteType.EditStatistics)]
        public void Correct_route_should_match(string route, StoolballRouteType expectedType)
        {
            var requestUrl = new Uri(route);

            var result = StoolballRouteContentFinder.MatchStoolballRouteType(requestUrl);

            Assert.Equal(expectedType, result);
        }

        [Theory]
        [InlineData("https://example.org/clubs")]
        [InlineData("https://example.org/clubs/")]
        [InlineData("https://example.org/clubs/example/invalid")]
        [InlineData("https://example.org/teams/example/invalid")]
        [InlineData("https://example.org/teams/example123/teams/example-team/")]
        [InlineData("https://example.org/tournaments/example123/invalid/example-team/")]
        [InlineData("https://example.org/competitions/example/2020-")]
        [InlineData("https://example.org/competitions/example/2020/invalid")]
        [InlineData("https://example.org/competitions/example/2020-21/invalid/")]
        [InlineData("https://example.org/matches")]
        [InlineData("https://example.org/matches/")]
        [InlineData("https://example.org/matches/example-match/edit/innings/one/bowling")]
        [InlineData("https://example.org/matches/example-match/edit/innings/1a/bowling")]
        [InlineData("https://example.org/matches/example-match/edit/innings/1/invalid/")]
        [InlineData("https://example.org/tournaments")]
        [InlineData("https://example.org/tournamnents/")]
        [InlineData("https://example.org/other")]
        [InlineData("https://example.org/other/")]
        public void Other_route_should_not_match(string route)
        {
            var requestUrl = new Uri(route);

            var result = StoolballRouteContentFinder.MatchStoolballRouteType(requestUrl);

            Assert.Null(result);
        }
    }
}
